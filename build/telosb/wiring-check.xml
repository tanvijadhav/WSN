<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="28:SmacAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5f3b24de60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5f3bbfe6e8"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5f3bbfe6e8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5f3bbfdc28"/></to>
    </wire>
    <wire loc="29:SmacAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3b24c460"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b409470"/></to>
    </wire>
    <wire loc="30:SmacAppC.nc">
      <from><interface-ref name="Tsync" scoped="" ref="0x7f5f3b24a0f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3b17fa60"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3b17fa60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:SmacAppC.nc">
      <from><interface-ref name="Tsleep" scoped="" ref="0x7f5f3b2375f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3aff4550"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3aff4550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:SmacAppC.nc">
      <from><interface-ref name="Timeout" scoped="" ref="0x7f5f3b2327a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3afeea60"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3afeea60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:SmacAppC.nc">
      <from><interface-ref name="Tdata" scoped="" ref="0x7f5f3b23c1c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3affa020"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3affa020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:SmacAppC.nc">
      <from><interface-ref name="Delay" scoped="" ref="0x7f5f3b22d8d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3afe6020"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3afe6020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:SmacAppC.nc">
      <from><interface-ref name="Delay2" scoped="" ref="0x7f5f3b228ab0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3afe0550"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3afe0550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:SmacAppC.nc">
      <from><interface-ref name="Delay3" scoped="" ref="0x7f5f3b218020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3afdaa60"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3afdaa60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:SmacAppC.nc">
      <from><interface-ref name="Timesync" scoped="" ref="0x7f5f3b223c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3afd3058"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3afd3058"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:SmacAppC.nc">
      <from><interface-ref name="TsyncTdma" scoped="" ref="0x7f5f3b21ed40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3afcd568"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3afcd568"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:SmacAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f5f3b213188"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3afc7aa0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3afc7aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:SmacAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f5f3b20a7e0"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f5f3afbc020"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f5f3afbc020"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f5f3ae8caf8"/></to>
    </wire>
    <wire loc="44:SmacAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f5f3b20c020"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f5f3afbb188"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f5f3afbb188"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f5f3ae89c60"/></to>
    </wire>
    <wire loc="51:SmacAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3b206978"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3a40b268"/></to>
    </wire>
    <wire loc="65:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3a40b268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f399fba28"/></to>
    </wire>
    <wire loc="52:SmacAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b2055d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a40be20"/></to>
    </wire>
    <wire loc="66:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a40be20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f399fa700"/></to>
    </wire>
    <wire loc="53:SmacAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3b203da0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f3a40c548"/></to>
    </wire>
    <wire loc="64:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3a40c548"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f399fde48"/></to>
    </wire>
    <wire loc="54:SmacAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f5f3b204cb8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae8ab70"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae8ab70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae56310"/></to>
    </wire>
    <wire loc="55:SmacAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3b2037c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3a4046d8"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3a4046d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3ae76dc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:SmacAppC.nc">
      <from><interface-ref name="Tstamp" scoped="" ref="0x7f5f3b201020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5f3ae6c020"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5f3ae6c020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5f3a688020"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3a507c28"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3a58a020"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3a5a9e80"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3a5ccb20"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3a70fde8"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3a7f57d0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3acf23c0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f39b548e0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3ab94438"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3ad9ddc8"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3b171e30"/></to>
    </wire>
    <wire loc="49:../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3b25e748"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f39e19828"/></to>
    </wire>
    <wire loc="59:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3b92a110"/></to>
    </wire>
    <wire loc="65:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3b287978"/></to>
    </wire>
    <wire loc="66:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5f3b283838"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f5f3b2ad020"/></to>
    </wire>
    <wire loc="67:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3b27e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f3b2b4550"/></to>
    </wire>
    <wire loc="63:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3b2b4550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f3a26b618"/></to>
    </wire>
    <wire loc="68:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3b27ec18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3b2b3268"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3b2b3268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3b995bb8"/></to>
    </wire>
    <wire loc="71:../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f5f3b261468"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f5f3b283020"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5f3ba51308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5f3c0d7390"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5f3c0d7390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5f3bc9c940"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5f3ba51ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3bbffab8"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3bbffab8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3bbfbbc8"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3ba44418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f5f3bbf83a0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f5f3bbf9438"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f5f3bbf9438"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3bbd7270"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5f3bbf8a40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3bbfab38"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f5f3bbf7118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3b3e22d8"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3bbd7270"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3bbc14f0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5f3bbd0528"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5f3bbc1b60"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5f3bd0f4b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5f3bbc0e08"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f5f3bb85a20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3bac3c80"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f5f3bb6ed30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3babcc80"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f5f3bb76558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3bac9c58"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f5f3bb5a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3baa3c58"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f5f3bb7cd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3bac9020"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f5f3bb616e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3baa3020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f5f3bb57020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3ba8dc58"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f5f3bb67060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3ba9ec80"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f5f3bb7f1b0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3bb15c80"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f5f3bb5c020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3bab2c58"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f5f3bb63a70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3bab2020"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f5f3bb6c120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3bab4c80"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f5f3bb75558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3bac1c58"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f5f3bb59020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3ba9cc58"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f5f3bb6b710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3baadc80"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f5f3bb7baa8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3bac1020"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f5f3bb87b88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb23798"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f5f3bb60558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3ba9c020"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f5f3bb86588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3bacbc80"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f5f3bb66400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3ba96c80"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f5f3bb70668"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3bad0c58"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f5f3bb5b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3baabc58"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f5f3bb7c020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3bad0020"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f5f3bb62868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3baab020"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f5f3bb58020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3ba94c58"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f5f3bb6aba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3baa5c80"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f5f3bb5f3d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3ba94020"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f5f3bb5d060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3babac58"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f5f3bb5e120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3ba8d020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f5f3bb64d00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5f3baba020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f5f3bb65898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5f3ba8fc80"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5f3bb21658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb21020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5f3bb21c70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f5f3ba864f8"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5f3bb202e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f5f3ba86c40"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3bacfa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb23798"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3bacd100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb21020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3bac8a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb23798"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3bac5100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb21020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3bac0a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb23798"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3babe100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb21020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5f3bb19020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5f3bb19638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f5f3ba84418"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5f3bb19c50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f5f3ba84b60"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3bab9a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3bab7100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3bab1a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3baaf100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3baaaa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3baa8100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3baa2a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3baa0100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3ba9ba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3ba99100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3ba93a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3ba91100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3ba8ca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5f3ba8a100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3bc9b7f8"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f5f3bc99d20"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f5f3c0d9848"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3b995bb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3b931d20"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b2b3e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b9988e0"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b9988e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b933738"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5f3b2b1430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3b992020"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3b992020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3b930908"/></to>
    </wire>
    <wire loc="60:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3a26a2c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3b9ef020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a26ae80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b9988e0"/></to>
    </wire>
    <wire loc="54:../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3b9ef020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3b9a82c8"/></to>
    </wire>
    <wire loc="55:../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3b9a7060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f3b99eaa8"/></to>
    </wire>
    <wire loc="63:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3b99eaa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f3b985460"/></to>
    </wire>
    <wire loc="56:../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b9a7c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b9988e0"/></to>
    </wire>
    <wire loc="57:../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3b9a5268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3b995bb8"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f5f3b9a3020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f5f3b9a37c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5f3b99ab00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3b92a728"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5f3b92a728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3b919020"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3b9955e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3b933180"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3b92a110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3b91b9b8"/></to>
    </wire>
    <wire loc="60:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3b9268f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b991020"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5f3b92f308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3b928208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5f3b92e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3b929760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5f3b926020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f5f3b2cad20"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3b928208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3b7f26f8"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3b929760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3b7f2020"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f5f3b7f15b0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5f3b926020"/></to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3b9165a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b9268f8"/></to>
    </wire>
    <wire loc="71:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3b7ef268"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b9268f8"/></to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3b7e6bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b9268f8"/></to>
    </wire>
    <wire loc="74:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5f3b7f1e78"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5f3b90f528"/></to>
    </wire>
    <wire loc="75:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f5f3b7f0750"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f5f3b913288"/></to>
    </wire>
    <wire loc="77:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5f3b909578"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5f3b7e8308"/></to>
    </wire>
    <wire loc="78:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f5f3b905520"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5f3b7c2220"/></to>
    </wire>
    <wire loc="17:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5f3b7c2220"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5f3b2de800"/></to>
    </wire>
    <wire loc="80:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5f3b7dcc98"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5f3b7c29e8"/></to>
    </wire>
    <wire loc="13:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5f3b7c29e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5f3b2e22a8"/></to>
    </wire>
    <wire loc="332:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f5f3b8b5b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f5f3b8ea3e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f5f3b8b8368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f5f3b8b2cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f5f3b7ee908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f5f3b7ec100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5f3b7bdcc8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5f3b2e12a8"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5f3b2e12a8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5f3b75be10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5f3b2e22a8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5f3b75c988"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b2e1a08"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b2db080"/></to>
    </wire>
    <wire loc="19:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3b2db6b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3b2e4e40"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3b2e4e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3b75f270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3b2e3a68"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3a1b38c8"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3a1b38c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3b3a1ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b757e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b2e1a08"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3a1ad780"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b75ab90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5f3b759bc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3a1b4bd0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3a1b4bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3b3a3a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3b7552b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3a1ad020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3a1ad020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5f3b3a6d38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b75ab90"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b6d1060"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5f3b75be10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5f3b6d09e8"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5f3b75c988"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5f3b6d1900"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3b75f270"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3b6d22e8"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b6cd180"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b757e78"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5f3b6cf408"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f5f3b759bc8"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3b6c80c8"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3b7552b0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f5f3b6cd7b8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3b6b9c38"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3b6b9c38"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5f3b6b2060"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f3b6c8a58"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3b42b020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f3b42b020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5f3b428dd8"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3b6c6a30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3b6b6528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5f3b6ae8e0"/></to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f3b6b9448"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f3b6b57c0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5f3b6a28c8"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f5f3b5b8560"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f5f3b5b8560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4d53d8"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f5f3b6ab7e0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f5f3b5b6560"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f5f3b5b6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4d1ca0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5f3b6a0658"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f5f3b5b4560"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f5f3b5b4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4cc3d8"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f5f3b69e558"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f5f3b5b0560"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f5f3b5b0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5033d8"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f5f3b69c558"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f5f3b5b2560"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f5f3b5b2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b509ca0"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f5f3b625668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b55cca0"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f5f3b610568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b52eca0"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f5f3b5c77d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b51f3d8"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f5f3b5a2558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b499ca0"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f5f3b5c5660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b51bca0"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f5f3b60c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b524ca0"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f5f3b5f8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4f6ca0"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f5f3b5e3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4c8ca0"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f5f3b5d3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4a3ca0"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f5f3b5be560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b512ca0"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f5f3b5ae558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4b5ca0"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f5f3b59a560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4943d8"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f5f3b61e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b54e3d8"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f5f3b5bc560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b50d3d8"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f5f3b61a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5443d8"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f5f3b606568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5163d8"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f5f3b5f2568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4e83d8"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f5f3b5dd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4b93d8"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f5f3b5cd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4943d8"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f5f3b629978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b565ca0"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f5f3b614568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b537d08"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f5f3b600568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b509ca0"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f5f3b5c9970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b51f3d8"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f5f3b5a8558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4a73d8"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f5f3b59c558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4943d8"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f5f3b5fc568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4ffdd8"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f5f3b5e7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4d1ca0"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f5f3b5d7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4acca0"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f5f3b5a6558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4a3ca0"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f5f3b5ba558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4daca0"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f5f3b623568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5573d8"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f5f3b60e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5283d8"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f5f3b5db568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4b5ca0"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f5f3b60a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b51f3d8"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f5f3b5f6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4f13d8"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f5f3b5e1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4c33d8"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f5f3b5d1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b49e3d8"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f5f3b62fd20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b594e18"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f5f3b618568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b540ca0"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f5f3b604568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b512ca0"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f5f3b5ef568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4e4ca0"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f5f3b5ac558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4b03d8"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f5f3b5a0558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4943d8"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f5f3b5eb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4daca0"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f5f3b6277f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5603d8"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f5f3b612568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5323d8"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f5f3b5fe568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5033d8"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f5f3b5a4558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b49e3d8"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f5f3b5fa668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4fa478"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f5f3b5e5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4cc3d8"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f5f3b5d5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4a73d8"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f5f3b621568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b553ca0"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f5f3b5d9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4b03d8"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f5f3b61c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b549ca0"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f5f3b608568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b51bca0"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f5f3b5f4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4edca0"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f5f3b5df568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4beca0"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f5f3b5cf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b499ca0"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f5f3b62bb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b569478"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f5f3b616568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b53b3d8"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f5f3b602568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b50d3d8"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f5f3b5ed568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4de3d8"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f5f3b5c0548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5163d8"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f5f3b5aa558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4acca0"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f5f3b5c3560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b5163d8"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f5f3b5e9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4d53d8"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f5f3b59e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b499ca0"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f5f3b598568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b4b93d8"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f5f3b5cb5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5f3b524ca0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5f3b428dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3b421330"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b4112a0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3b3e22d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3b40ce80"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5f3b401650"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f5f3b40acf0"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5f3b40acf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3b3df4e0"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5f3b4077d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f5f3b3e4020"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5f3b3e4020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3b3cccd0"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5f3b400958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f5f3b3e31b0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5f3b3e31b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3b3c6448"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3b3cf5f8"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f5f3b5e3568"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3b3cae20"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f5f3b5e1568"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3b3c55f8"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f5f3b5df568"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3a1b27c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3b6b9c38"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3a1b2060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b3a0520"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b3a0520"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b3143f0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b39f270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3a1ad780"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3b3a1ce0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3b3150c8"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3b3150c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39e16b48"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f5f3b3a6d38"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5f3b39d888"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3b3a3a30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3b316378"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3b316378"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f39e17e20"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b3143f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f39e13020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f5f3b39c7f8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3b6b6528"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b314c70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b39f270"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b38a5f8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b3143f0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f3b2fa678"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f3b315808"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f3b315808"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f39e143f0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f3b30e988"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f3b6b9448"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f39e138c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b314c70"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5f39e120a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5f39e19e00"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5f39e10100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f39de3e50"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f3b30e988"/></to>
    </wire>
    <wire loc="82:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5f39de25b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5f3b2fa0e0"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f39de2b50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f3b2fa678"/></to>
    </wire>
    <wire loc="85:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f39de0888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b2f9268"/></to>
    </wire>
    <wire loc="114:../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f5f3b278c78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f5f3b25ed68"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f5f3b261468"/></to>
    </wire>
    <wire loc="44:../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5f3b2562b0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5f3bbfe6e8"/></to>
    </wire>
    <wire loc="47:../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f5f3b256990"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3b99ab00"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b16db50"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b16db50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3b01f020"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3b171e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3b097418"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5f3b166108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5f3b012c38"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3b097418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f39dc71a8"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f5f3b019208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5f3b090d88"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5f3b066020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5f3b097c00"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5f3b097c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5f39dc1830"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f3b011e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3b0f7718"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f3b0f7718"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3b0ef878"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f39dc71a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f39dac7a8"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f5f39dbbce8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5f39dc7990"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5f39dc7990"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5f39dab020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f39dbdad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3b0f7718"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39da7020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39db15e0"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39db15e0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39da65b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39db0bd8"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39db0bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39da58c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39dae020"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39dae020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f5f3bb6ed30"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f5f3bb64d00"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f5f3bb6b710"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f5f3bb62868"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f5f3bb6aba8"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f5f3bb616e0"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f5f3bb67060"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f5f3bb60558"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f5f3bb66400"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f5f3bb5f3d0"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f5f3bb65898"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f5f3bb5e120"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5f3b0d3b10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5f3b428dd8"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f5f3b063020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f5f3b014478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f5f3ae8f8c8"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f5f3afb18d8"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f5f3afb18d8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f5f3aeb9b58"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ae90740"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3afb6318"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3afb6318"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3aebe5d8"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7f5f3ae87718"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f5f3aea6cd8"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f5f3ae859b0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f5f3ae93dd8"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3aebd780"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f5f3b60e568"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f5f3aeb8780"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f5f3af9b568"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f5f3af9b568"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f5f3af87020"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f5f3afa7568"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5f3af93020"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f5f3af9c568"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f5f3af88020"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f5f3afa4568"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f5f3af90020"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f5f3afa1568"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f5f3af8e020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f5f3afad568"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f5f3af95100"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f5f3af9e568"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f5f3af8b020"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f5f3afa6568"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f5f3af92020"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f5f3afa95f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5f3af972c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f5f3afa0568"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f5f3af8d020"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f5f3afa8568"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f5f3af94020"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f5f3af9d568"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f5f3af89020"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f5f3afa5568"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f5f3af91020"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f5f3afa2568"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f5f3af8f020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f5f3afae568"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f5f3af961f8"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f5f3af9f568"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f5f3af8c020"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f5f3ae8e470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae56310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae2d020"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3ae77c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f3ae552b0"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3ae552b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f3a4cd938"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5f3ae74968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5f3ae52020"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5f3ae52020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5f3a4ca628"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3ae73020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3ae51bd8"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3ae51bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3a4c82a8"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3ae70060"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3a68c130"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3a68c130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3a67d060"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3ae62848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3ae42628"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3ae42628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3ae25020"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3ae76dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3ae533c8"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3ae533c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3a4ccab0"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae71348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae4f7e0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae4f7e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae26020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae73c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae52610"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae52610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a4cac18"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5f3a688020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5f3a679020"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae2d020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3a4fbdc8"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3ae3c700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3a4c6020"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5f3ae391c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5f3a4c7400"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3ae47888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3ae27080"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3ae27080"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a691498"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3ae25020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3a4fb318"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae26020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5f3a68e3b8"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5f3ae31450"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5f3ae25ab8"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5f3ae25ab8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5f3a4e82d0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3ae437b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3ae26980"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3ae26980"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3a68d6b0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f5f3a4be698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ae2b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5f3a4c5020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5f3ae29cf0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f5f3ae29cf0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5f3a560db8"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a4c5cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5f3ae28a18"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f5f3ae28a18"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5f3a55fae8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5f3a4c18d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5f3a89f690"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a4c4368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a691498"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a691498"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a6812e8"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a4c3188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a680b60"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3a4c3ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3ada0aa8"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3ada0aa8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3ad96140"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f5f3a4c06a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3ae1f020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3ae1f020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3ae19328"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3a4bd2a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5f3a4fbdc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5f3a4f8d28"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3a68d6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3a67f630"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5f3a4e82d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5f3a4e6530"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f5f3a560db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5f3a555490"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3a4fb318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3a4f4170"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5f3ae2a980"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3a560748"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3a560748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f5f3a556dc8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5f3a68e3b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5f3a680210"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3ae2b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3a591e10"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3a591e10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3a558428"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5f3ae2bca0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3a561a40"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3a561a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f5f3a556118"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5f3ae29060"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5f3a55e1a8"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5f3a55e1a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5f3a554808"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f5f3a55fae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5f3a554188"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5f3a4f8d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae21160"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae21160"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae1ea68"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5f3a55d670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3a5b0a60"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3a5b0a60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3a5a9298"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5f3a5ad838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3a4eb5b8"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3a4eb5b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5f3a4e7020"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5f3a4e7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3a4fc080"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3a4fc080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5f3a4f9838"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5f3a4f9838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3ae21c00"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3ae21c00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3ae1b5e8"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a55d020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3a4fcc80"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3a4fcc80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a4f8668"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a4f8668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3a590080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3a590080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3a58c2b0"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a590e50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3ae20910"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3ae20910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3a711168"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5f3a711168"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5f3a70a600"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3ae18138"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3adb0b70"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3adb0b70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ad97450"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f5f3ae10320"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f5f3adab8b0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f5f3adab8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f5f3ad94020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5f3ae17540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5f3a7ffc40"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5f3ae17540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5f3a712020"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5f3a712020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5f3a70b460"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5f3a7ffc40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5f3a7f5e10"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5f3ae09cc8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5f3a7fc480"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5f3a7fc480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3a7f46b8"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f5f3ae16a70"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3a7fb140"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3a7fb140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3a7f24b0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3ae07c58"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a691498"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3ae03020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5f3ae06d58"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5f3a5cd690"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5f3a5cd690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5f3a5c34c8"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f5f3adf83e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3a5c5bb0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5f3a5c5bb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3ab99790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3ae08518"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f5f3adf5988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f5f3adf6b30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f5f3adf7c00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f5f3ad9ab00"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f5f3ad93308"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f5f3ad90020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5f3acf2d38"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5f3acf2d38"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5f3acb6060"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5f3ad8b020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5f3acafe20"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5f3acafe20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3aca2020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5f3ad8a1b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f5f3acab378"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5f3acab378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac94720"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f5f3ad89378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f5f3aca9688"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f5f3aca9688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac8a720"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f5f3ad88578"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f5f3ac76bd8"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f5f3ac76bd8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f5f3ac559a0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5f3ad75b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3a9297d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3a9297d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ac16e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5f3ad77d78"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f5f3a926020"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5f3a926020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3ad76478"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a9242e8"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a9242e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3ad75480"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a9273a0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a9273a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3ad76b68"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a924900"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a924900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3ad7a9a8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a91ae10"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a91ae10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3ad7d240"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a918d60"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a918d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3ad7dab0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a916528"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a916528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3ad7c3d0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a920470"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a920470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3ad7cc58"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a920c10"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a920c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5f3ad85508"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f5f3a90a7c0"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5f3a90a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3ad7ea40"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a90a020"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a90a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3ad79548"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a91a470"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a91a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5f3ad79da8"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f5f3a91e470"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5f3a91e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3ad78690"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a91d470"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a91d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f5f3ad72858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3a8f9e60"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3a8f9e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ac16e78"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f5f3ad739e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3a8cc558"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3a8cc558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ac16e78"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5f3ad839e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5f3a89f690"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5f3ad8e5b0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5f3a8a1cc0"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5f3a8a1cc0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5f3a886190"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f5f3ad68e20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f5f3ad68020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3acf23c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3aceb7d8"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3aceb7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f39cdb020"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5f3acb6060"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5f39cdb808"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f39cdb020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f39cd5b88"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5f39cdb808"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5f39cc92d0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f39cd5b88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f39cb4020"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f5f39cc3688"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5f39cd44b8"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5f39cd44b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5f39cb4848"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f39cc5410"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3acd9cd8"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f3acd9cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3acd15a8"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39cb08c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39cb9020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39cb9020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39cae020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39cb85b8"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39cb85b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39cad2a8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39cb78c8"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39cb78c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5f3acce7f8"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5f3b428dd8"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f5f3acad020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac9d720"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f5f3acac1b8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac98020"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f5f3acf4c10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3aca77d0"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f5f3acaa4f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac8f020"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3aca6908"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5f3b625668"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3aca0120"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f5f3b5f8568"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac9c908"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f5f3b6277f0"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac97120"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5f3b62fd20"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac93908"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f5f3b5ef568"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac8e120"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f5f3b5fa668"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac89908"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f5f3b5f2568"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f5f3ac76020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5f3ac6c020"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5f3ac75898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f5f3ac52728"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3ac6ca90"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f5f3bb6c120"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f5f3ac5bd60"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f5f3bb5c020"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac5ab48"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f5f3b5fa668"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f5f3ac54480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5f3afa7568"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f5f3ac502e8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5f3afa95f8"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a9279b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a919d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a911470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a9185c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a9057c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5f3a9077c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a926c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5f3a90dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a9087c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a913c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5f3a914470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a928430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac13b38"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac13b38"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac0dde0"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a923638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5f3a923c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a90b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a9223a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a907020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a90d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a91ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a90e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a911c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a90ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a905020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5f3a906020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5f3a914c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a90f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a908020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a916cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a904020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5f3a928d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5f3a921c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a91dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a912470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a912c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a9195f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a9229b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5f3a921638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a923020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a90b800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5f3a9067c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a913470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a90fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5f3a926638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a9154f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5f3a921020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a915c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a90c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a904c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac09e50"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac06040"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac06d40"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3ac16e78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ac0ac10"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac05a98"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f5f3ac01838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3ab9e978"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5f3ab9e978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3ab99790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5f3ac041e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ab7dcf0"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3ab7dcf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f39bf07d0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ac03cf8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ab7c948"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ab7c948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5f39befb90"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3ac01020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3a94d020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3a94d020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5f39bedd18"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3ac00730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f5f3abf55d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5f3ab99790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3ab93020"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5f39bedd18"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3ab68c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5f39befb90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ab69640"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f39bf07d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ab6eb88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39bef430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39be58c8"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39be58c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3aa1e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ab69640"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ab0fb48"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5f39bed2a8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5f3ab69c88"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5f3ab69c88"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5f3ab0e2a8"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5f3ab65ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5f39bec4b0"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f39bd58c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3ab6ae68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5f3ab67a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f39be6b38"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f39be6b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3aa21ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3ab644f8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f39bdd020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f39bdd020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5f3aa22270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3ab6ae68"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3ab0f3c8"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3ab68c90"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3ab0ee38"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3ab6eb88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ab10608"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5f3ab0c550"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5f3ab65ce8"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5f3ab0d758"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f5f3ab67a40"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3ab06470"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3ab644f8"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f5f3ab0cb88"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3aaff810"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3aaff810"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5f3aaf7de8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3ab06bd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f5f3ab042e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5f3aaf8860"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5f3aaef0e8"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3aaf8020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5f3aaf0758"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5f3aac36e0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f5f3b5c9970"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f5f3aac1658"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f5f3b5c5660"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5f3aabf558"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f5f3b5c3560"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f5f3aabd558"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f5f3b5bc560"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f5f3aabb558"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f5f3b5be560"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f5f3aac8a48"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f5f3aa01348"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5f39bdd780"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5f3aa211c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5f39bddd58"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5f3aa0db20"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5f3aa0db20"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f5f3aa01348"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f39be47c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3aaff810"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f39be4060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa1e7f0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa1e7f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa14700"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3aa1d570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f39bd58c8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3aa1e020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3aa15388"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3aa15388"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39b51d58"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f5f3aa22270"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5f3aa1cb70"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3aa21ce8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3aa16558"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3aa16558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f39b51060"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5f3aa211c8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5f3aa1b590"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa14700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f39b4e0e0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3aa13020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3aa1d570"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa1aa48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa14700"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f5f3aa1bbc8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3aaf8020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5f3aa1a470"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5f3aaf8860"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f3aa15ac8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f39b4f4c0"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f39b4e980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3aa13020"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5f39b4d130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5f39b53020"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5f39b4b2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f5f3a9f9020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5f3aaf7de8"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5f3a9f5868"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f5f3b5c9970"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5f3a9f37e0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f5f3b5c3560"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a8eca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a8f5100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a8efa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a8e9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a8e2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a8e9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a8d52e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5f3a8d82e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a8f43a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5f3a8dd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a8d92e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5f3a8eea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a8eda88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a8e3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5f3a8e6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a8e8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a8f7a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac13b38"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a8f3c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5f3a8f22e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a8dca38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a8f2a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a8d9a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a8f3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a8dfc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a8ed2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a8ee2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a8f6a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a8e0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a8e1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a8df470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a8d7a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5f3a8d8a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5f3a8e5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a8e1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a8daa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a8e7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a8d5a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5f3a8f6470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5f3a8ef2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a8ec2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a8e3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a8e8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a8e2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a8ea470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5f3a8f5718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a8eac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a8f0060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5f3a8f0c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5f3a8da2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a8dba88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a8f3638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a8db2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5f3a8d72e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a8e5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a8e0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5f3a8f5d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a8f49b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a8e7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5f3a8f0678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a8e6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a8ddc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a8d4780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a8bf470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a8ca900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a8c2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a8bed98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a8b6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a8bd5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a8aa7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5f3a8ac7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a8c9c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5f3a8b2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a8ad7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5f3a8c1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a8c0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a8b8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5f3a8b9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a8bdd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a8cb2a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac13b38"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a8c6638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5f3a8c6c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a8b0060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a8c53a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a8ac020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a8c7900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a8b2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a8c1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a8c2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a8ca2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a8b3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a8b6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a8b3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a8aa020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5f3a8ab020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5f3a8b9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a8b4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a8ad020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a8bbcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a8a9020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5f3a8cbbd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5f3a8c4c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a8c0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a8b7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a8bb528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a8b7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a8bfe10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5f3a8c9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a8be5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a8c59b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5f3a8c4638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5f3a8af7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a8af020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a8c6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a8b0800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5f3a8ab7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a8b8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a8b4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5f3a8c9638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a8c72e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a8ba4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5f3a8c4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a8bac90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a8b1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a8a9c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f5f3a883608"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f5f3a889ab8"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f5f3a889ab8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f5f3a872a58"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f5f3a86c360"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f5f3a875b88"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f5f3a875b88"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f5f3a859108"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f5f3a86cba8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5f3a809020"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f5f3a85d530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f5f3a85e360"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f5f3a85e360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3a8114e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5f3a854748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f5f3a85bb60"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5f3a85bb60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f5f3a832bc8"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f5f3a859968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f5f3a85d530"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f3a823020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f5f3a81d3a8"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f5f3a81d3a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3a819980"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3a817928"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f5f3bb87b88"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3a80f5f8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f5f3b614568"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5f3a7faca8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5f3a7f1428"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f5f3a7f93d8"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f5f3a7f1b70"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f5f3a7f0648"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5f3acf2d38"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f5f3a7e5800"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f5f3acf4c10"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5f3a7dfb10"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5f3acafe20"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f5f3a7ddc98"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f5f3acaa4f0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f5f3a7e6ba8"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f5f3ac76020"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5f3a7dce68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3a7437d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3a7437d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ac16e78"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a7dbb28"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a742430"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a742430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac13b38"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5f3a7d8520"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f5f3a742d58"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5f3a742d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5f3a7d8bf0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f5f3a740638"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5f3a740638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a7d73c0"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a740c50"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a740c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a7d7ab0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a73d638"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a73d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a7d9c20"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a737470"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a737470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a7da528"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a720c58"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a720c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a7d93b0"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a7257c0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a7257c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a7d61e8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a73ac10"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a73ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a7d53d0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a7355f8"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a7355f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a7d5c58"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a735d98"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a735d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5f3a7d6c48"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f5f3a73b020"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5f3a73b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a7d15d0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a721020"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a721020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5f3a7d4500"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f5f3a7237c0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5f3a7237c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5f3a7d4d30"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f5f3a722020"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5f3a722020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f5f3a7cb5f0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f5f3a712808"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f5f3a712808"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f5f3a70bc48"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a7ec628"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a691498"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a7eb4d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5f3a7ea150"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3a68c130"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5f3a7e6020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5f3a685ac8"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5f3a685ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5f3a677ac8"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3a7cf020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a736470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a7419b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a73a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a72d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a7345c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a7217c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5f3a729c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5f3a738470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a72fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5f3a730470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a734d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5f3a73dc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a727060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a73c3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a723020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a73e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a729470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a738c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a7413a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a72a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a72dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a72ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5f3a730c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a72b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a725020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a733cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a720020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5f3a73bc50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a737c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a72e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a733528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a72ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a736e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5f3a740020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a73c9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5f3a73b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5f3a7267c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a726020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a73d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a727800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5f3a7227c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a72f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a72bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a73e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a7314f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a731c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a728470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f5f3a7118c0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f5f3a70ad58"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5f3a6f6a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5f3a709420"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5f3acafe20"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f5f3a708688"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f5f3acad020"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f5f3a707818"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f5f3acac1b8"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5f3a706a30"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5f3ac75898"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5f3a7056c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3a6170e0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5f3a6170e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5f3ac16e78"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a704518"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a5f5c10"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a5f5c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a703a88"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a613900"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a613900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5f3a703398"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f5f3a612638"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5f3a612638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a702328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a691498"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a701188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5f3a6ffb80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3a68c130"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3a701af0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3ada0aa8"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a6fbdc8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a609020"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a609020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a6fa6a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a6097c0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a6097c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a6fb6c8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a6103a0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a6103a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a6f7108"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a5f5470"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a5f5470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5f3a6f9020"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f5f3a5f8470"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5f3a5f8470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5f3a6f9850"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f5f3a5f8c10"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5f3a5f8c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a6f7970"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a5f9c10"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a5f9c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5f3a6f6210"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f5f3a616678"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5f3a616678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f5f3a6ebe38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5f3a624720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5f3acd9cd8"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f5f3a675520"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5f3a626528"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5f3a673788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5f3b166108"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5f3a620730"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a60bc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a6152e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a60fdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a601020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a608020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a614638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5f3a5fd7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a5f9470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5f3a60ed60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a60dcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a6037c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5f3a605020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a6087c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a617cd8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac13b38"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a612020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a5fcbc0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a612d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a6132e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a5fd020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a60d528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a60e5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a616c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a5ff020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a6017c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a5ff7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a5f6c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5f3a6057c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a600020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a5fac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a6077c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5f3a60f638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a60b4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a602020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a607020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a6027c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a60a838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5f3a615900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5f3a60f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5f3a5fa470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a5fbc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a5fb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5f3a5f6470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a603020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a6007c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5f3a614020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a614c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a606020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5f3a6109b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a6067c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a5fc020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a5f4908"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f5f3a5c7668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f5f3a5c43a0"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5f3a5d28b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5f3a5ccb20"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5f3a5a8578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5f3a5ad838"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5f3a5a72a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3a5aa468"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5f3a5aa468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3ab99790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5f3a5a6080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5f3a5cd690"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a5a6848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5f3a590748"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5f3a58c978"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a58a728"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a590e50"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a58ad68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5f3a553528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5f3a55d670"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a552358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a55d020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a552970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a691498"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a5517a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5f3a5501c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5f3a5062a8"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f5f3a526ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f5f3a4fa928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3a4f6d50"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5f3a4f6d50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5f3ab99790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3a4e33c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae26020"/></to>
    </wire>
    <wire loc="63:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f399fde48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f399ee020"/></to>
    </wire>
    <wire loc="64:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f399fba28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3ae73020"/></to>
    </wire>
    <wire loc="65:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f399fa700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae73c30"/></to>
    </wire>
    <wire loc="67:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5f3a409430"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5f399f9d60"/></to>
    </wire>
    <wire loc="66:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5f399f9d60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae71348"/></to>
    </wire>
    <wire loc="60:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f399eec38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3a427b78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f399ed888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae73c30"/></to>
    </wire>
    <wire loc="53:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5f3a427b78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5f3a422550"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5f3a4203e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5f3ae77c30"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a41f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae73c30"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3a41e578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3ae73020"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f5f3a41d2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f5f3a41da88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5f3a404c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5f3ae73020"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a3ff888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae73c30"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../tos/system/QueueC.nc">
      <documentation loc="33:../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SmacC" loc="20:SmacC.nc">
      <documentation loc="33:../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SmacAppC.Tsync" loc="44(SmacAppC.Tsync):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <value cst="I:11">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SmacAppC.Tdata" loc="44(SmacAppC.Tdata):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.Tsleep" loc="44(SmacAppC.Tsleep):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.Timeout" loc="44(SmacAppC.Timeout):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.Delay" loc="44(SmacAppC.Delay):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.Delay2" loc="44(SmacAppC.Delay2):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.Delay3" loc="44(SmacAppC.Delay3):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.Timesync" loc="44(SmacAppC.Timesync):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.TsyncTdma" loc="44(SmacAppC.TsyncTdma):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.Timer0" loc="44(SmacAppC.Timer0):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UserButtonC" loc="47:../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5f3b74e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5f3b74e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SmacAppC.AMSenderC" loc="47(SmacAppC.AMSenderC):../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.AMSenderC.SenderC" loc="47(SmacAppC.AMSenderC.SenderC):../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SmacAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SmacAppC.AMSenderC.SenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SmacAppC.AMReceiverC" loc="43(SmacAppC.AMReceiverC):../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f5f3bb53878" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f5f3bb53bf0" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f5f3bb52020" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f5f3bb52378" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f5f3bb526d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f5f3bb52a20" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f5f3bb52d88" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f5f3bb50150" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f5f3bb50500" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f5f3bb17928" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f5f3bb17cd8" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5f3bc01910" loc="47:../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5f3ba0e020" loc="43:../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f5f3b9eb2a8" loc="45:../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f5f3b593998" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f5f3b593d20" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f5f3b591108" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f5f3b591490" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f5f3b5917e0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5f3b423d10" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5f3b423d10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f5f3b388e28" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f5f3b379688" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f5f3b35e108" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f5f3b2af6a0" loc="42:../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f5f3b2af6a0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f5f3b2af9f8" loc="42:../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5f3b1277c0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5f3b1277c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5f3b0ee1f8" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5f3b0ee1f8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5f3b0ee960" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5f3b0ee960"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5f3b0eed28" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5f3b0eed28"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5f3b0ed4e8" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5f3b0ed4e8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5f3b0ed890" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f5f3b0eb068" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f5f3b0eb068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5f3b0f5bc0" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5f3b0f5bc0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5f3b0cc380" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5f3b0cc380"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5f3b0cc748" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5f3b0cc748"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5f3b0cb020" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5f3b0cb020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5f3b0cb3c8" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3b08f020" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3b08f020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3b05e4c0" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3b05e4c0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f5f3b05e7d0" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3b0104f0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3b0104f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3a833c30" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3a833c30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5f3a830380" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3a830380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5f3a43a838" loc="47:../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5f3a430348" loc="47:../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5f3a406518" loc="43:../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f5f3bc00ca8" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3bc00ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5f3bbfe6e8" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5f3bbfe6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5f3bbfea38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3bbffab8" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3bbffab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbffe08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f5f3bbf8a40" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f5f3bbf8a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbf8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3bbfbbc8" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3bbfbbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbf8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f5f3bbf83a0" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f5f3bbf83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbf86f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f5f3bbf7118" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f5f3bbf7118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbf7468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3bbfab38" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3bbfab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f5f3bbf9438" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f5f3bbf9438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbf9788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f5f3bbd0528" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5f3bbd0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5f3bbd64b8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5f3bbd0a00"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5f3bbd0b88"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5f3bbd0d10"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5f3bbd0878"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5f3bbd6020"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5f3bbd61a8"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5f3bbd6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3bbd7270" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3bbd7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbd75c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f5f3bbc1b60" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5f3bbc1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5f3bbc0ad8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5f3bbc01a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5f3bbc0330"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5f3bbc04b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5f3bbc0020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5f3bbc0640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5f3bbc07c8"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5f3bbc0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f5f3bbc0e08" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5f3bbc0e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5f3bbbf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3bbc14f0" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3bbc14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bbc1840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f5f3bb85a20" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f5f3bb85a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb85d70"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb7e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb7e1a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb7e330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb7e4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb7e640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb7e7c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb7e950"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb7ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f5f3bb6ed30" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f5f3bb6ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb6d0d8"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb6d260"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb6d3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb6d570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb6d6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb6d880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb6da08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb6db90"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb6dd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f5f3bb76558" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f5f3bb76558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb768a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb76a30"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb76bb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb76d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb75020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f5f3bb5a020" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f5f3bb5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb5a370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb5a4f8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb5a680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb5a808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb5a990"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb5ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f5f3bb7cd40" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f5f3bb7cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb7b0d8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb7b260"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb7b3e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb7b570"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb7b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f5f3bb616e0" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f5f3bb616e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb61a30"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb61bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb61d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb60020"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f5f3bb57020" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f5f3bb57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb57370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb574f8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb57680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb57808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb57990"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb57b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f5f3bb67060" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f5f3bb67060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb673b0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb67538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb676c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb67848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb679d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb67b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb67ce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb67e68"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f5f3bb7f1b0" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f5f3bb7f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb7f500"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb7f688"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb7f810"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb7f998"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb7fb20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb7fca8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb7fe30"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb86020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f5f3bb5c020" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f5f3bb5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb5c370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb5c4f8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb5c680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb5c808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb5c990"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb5cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f5f3bb63a70" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f5f3bb63a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb63dc0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb62020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb621a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb62330"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f5f3bb6c120" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f5f3bb6c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb6c570"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb6c6f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb6c880"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb6ca08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb6cb90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb6cd18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb6b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb6b1a8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb6b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f5f3bb75558" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f5f3bb75558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb758a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb75a30"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb75bb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb75d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb6f020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb6f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f5f3bb59020" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f5f3bb59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb59370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb594f8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb59680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb59808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb59990"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb59b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f5f3bb6b710" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f5f3bb6b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb6ba60"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb6bbe8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb6bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb6a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb6a1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb6a330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb6a4b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb6a640"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb6a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f5f3bb7baa8" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f5f3bb7baa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb7bdf8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb77020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb771a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb77330"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb774b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f5f3bb87b88" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f5f3bb87b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bb8f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3bb8f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb8f330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3bb8f4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb8f640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb8f7c8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3bb8f950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb8fad8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3bb8fc60"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3bb8fde8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3bb8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f5f3bb60558" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f5f3bb60558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb608a8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb60a30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb60bb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb60d40"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f5f3bb86588" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f5f3bb86588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb868d8"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb86a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb86be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb86d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb85020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb851a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb85330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb854b8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb85640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f5f3bb66400" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f5f3bb66400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb66750"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb668d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb66a60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb66be8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb66d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb65020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb651a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb65330"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f5f3bb70668" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f5f3bb70668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb709b8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb70b40"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb70cc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb70e50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb76020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f5f3bb5b020" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f5f3bb5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb5b370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb5b4f8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb5b680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb5b808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb5b990"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb5bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f5f3bb7c020" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f5f3bb7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb7c370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb7c4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb7c680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb7c808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb7c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f5f3bb62868" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f5f3bb62868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb62bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb62d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb61020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb611a8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb61330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f5f3bb58020" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f5f3bb58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb58370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb584f8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb58680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb58808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb58990"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb58b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f5f3bb6aba8" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f5f3bb6aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb68020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb681a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb68330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb684b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb68640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb687c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb68950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb68ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb68c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f5f3bb6f520" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f5f3bb6f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bb6f870"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3bb6f9f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb6fb80"/>
        <function-ref name="get" scoped="" ref="0x7f5f3bb6fd08"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb6e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb6e1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3bb6e330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb6e4b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3bb6e640"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3bb6e7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3bb6e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f5f3bb5f3d0" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f5f3bb5f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb5f720"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb5f8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb5fa30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb5fbb8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb5fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f5f3bb5d060" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f5f3bb5d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb5d3b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bb5d538"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bb5d6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb5d848"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb5d9d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bb5db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f5f3bb5e120" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f5f3bb5e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb5e670"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb5e7f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb5e980"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb5eb08"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb5ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f5f3bb64d00" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f5f3bb64d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bb630a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bb63228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bb633b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bb63538"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb636c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f5f3bb65898" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f5f3bb65898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bb65be8"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bb65d70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb64020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bb641a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bb64330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb644b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bb64640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bb647c8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bb64950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f5f3bb21c70" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5f3bb21c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f5f3bb21658" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5f3bb21658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb219a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f5f3bb202e8" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5f3bb202e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb20638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f5f3bb21020" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3bb21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb21390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3bb23798" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3bb23798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bb23ae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3bb23c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb23df8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3bb22020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb221a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb22330"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3bb224b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb22640"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3bb227c8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3bb22950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3bb22ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f5f3bb19638" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5f3bb19638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb19988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f5f3bb19020" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5f3bb19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb19370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f5f3bb19c50" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5f3bb19c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f5f3bb1a8a0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3bb1a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bb1ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3bb1b1e8" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3bb1b1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bb1b538"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3bb1b6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bb1b848"/>
        <function-ref name="get" scoped="" ref="0x7f5f3bb1b9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bb1bb58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bb1bce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3bb1be68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bb1a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3bb1a1a8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3bb1a330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3bb1a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3bad0c58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3bad0c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bacf020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bacf1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bacf330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bacf4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bacf640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bacf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3bb15c80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3bb15c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bad1020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bad11a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bad1330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bad14b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bad1640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bad17c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bad1950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bad1ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bad1c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3bacd100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3bacd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bacd450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3bad0020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3bad0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bad0370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bad04f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bad0680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bad0808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bad0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3bacfa90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3bacfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bacfde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3bace020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bace1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3bace330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bace4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bace640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3bace7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bace950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3bacead8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3bacec60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3bacede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3bac9c58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3bac9c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bac8020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bac81a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bac8330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bac84b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bac8640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bac87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3bacbc80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3bacbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3baca020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3baca1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3baca330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3baca4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3baca640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3baca7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3baca950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bacaad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bacac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3bac5100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3bac5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bac5450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3bac9020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3bac9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bac9370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bac94f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bac9680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bac9808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bac9990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3bac8a90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3bac8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bac8de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3bac6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bac61a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3bac6330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bac64b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bac6640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3bac67c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bac6950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3bac6ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3bac6c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3bac6de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3bac1c58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3bac1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bac0020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bac01a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bac0330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bac04b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bac0640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bac07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3bac3c80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3bac3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bac2020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bac21a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bac2330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bac24b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bac2640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bac27c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bac2950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bac2ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bac2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3babe100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3babe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3babe450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3bac1020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3bac1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bac1370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bac14f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bac1680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bac1808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bac1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3bac0a90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3bac0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bac0de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3babf020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3babf1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3babf330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3babf4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3babf640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3babf7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3babf950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3babfad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3babfc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3babfde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3babac58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3babac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bab9020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bab91a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bab9330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bab94b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bab9640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bab97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3babcc80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3babcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3babb020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3babb1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3babb330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3babb4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3babb640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3babb7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3babb950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3babbad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3babbc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3bab7100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3bab7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3bab7450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3baba020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3baba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3baba370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3baba4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3baba680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3baba808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3baba990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3bab9a90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3bab9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bab9de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3bab8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bab81a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3bab8330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bab84b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bab8640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3bab87c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bab8950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3bab8ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3bab8c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3bab8de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3bab2c58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3bab2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bab1020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3bab11a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3bab1330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bab14b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bab1640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3bab17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3bab4c80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3bab4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3bab3020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3bab31a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bab3330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3bab34b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3bab3640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bab37c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3bab3950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3bab3ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3bab3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3baaf100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3baaf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3baaf450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3bab2020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3bab2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3bab2370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3bab24f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3bab2680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3bab2808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3bab2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3bab1a90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3bab1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3bab1de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3bab0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3bab01a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3bab0330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3bab04b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3bab0640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3bab07c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3bab0950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3bab0ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3bab0c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3bab0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3baabc58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3baabc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3baaa020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3baaa1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3baaa330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3baaa4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3baaa640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3baaa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3baadc80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3baadc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3baac020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3baac1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3baac330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3baac4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3baac640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3baac7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3baac950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3baacad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3baacc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3baa8100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3baa8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3baa8450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3baab020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3baab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3baab370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3baab4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3baab680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3baab808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3baab990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3baaaa90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3baaaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3baaade0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3baa9020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3baa91a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3baa9330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3baa94b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3baa9640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3baa97c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3baa9950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3baa9ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3baa9c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3baa9de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3baa3c58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3baa3c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3baa2020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3baa21a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3baa2330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3baa24b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3baa2640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3baa27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3baa5c80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3baa5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3baa4020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3baa41a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3baa4330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3baa44b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3baa4640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3baa47c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3baa4950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3baa4ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3baa4c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3baa0100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3baa0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3baa0450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3baa3020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3baa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3baa3370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3baa34f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3baa3680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3baa3808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3baa3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3baa2a90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3baa2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3baa2de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3baa1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3baa11a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3baa1330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3baa14b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3baa1640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3baa17c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3baa1950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3baa1ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3baa1c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3baa1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3ba9cc58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3ba9cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3ba9b020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3ba9b1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3ba9b330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3ba9b4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3ba9b640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3ba9b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3ba9ec80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3ba9ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3ba9d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3ba9d1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3ba9d330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3ba9d4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3ba9d640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3ba9d7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3ba9d950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3ba9dad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3ba9dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3ba99100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3ba99100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba99450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3ba9c020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3ba9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3ba9c370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3ba9c4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3ba9c680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3ba9c808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba9c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3ba9ba90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3ba9ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3ba9bde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3ba9a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3ba9a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ba9a330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3ba9a4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3ba9a640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3ba9a7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3ba9a950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3ba9aad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3ba9ac60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3ba9ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3ba94c58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3ba94c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3ba93020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3ba931a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3ba93330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3ba934b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3ba93640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3ba937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3ba96c80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3ba96c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3ba95020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3ba951a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3ba95330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3ba954b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3ba95640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3ba957c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3ba95950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3ba95ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3ba95c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3ba91100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3ba91100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba91450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3ba94020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3ba94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3ba94370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3ba944f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3ba94680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3ba94808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba94990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3ba93a90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3ba93a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3ba93de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3ba92020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3ba921a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ba92330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3ba924b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3ba92640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3ba927c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3ba92950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3ba92ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3ba92c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3ba92de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3ba8dc58" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3ba8dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3ba8c020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3ba8c1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3ba8c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3ba8c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3ba8c640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3ba8c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5f3ba8fc80" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5f3ba8fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3ba8e020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3ba8e1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3ba8e330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3ba8e4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3ba8e640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3ba8e7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3ba8e950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3ba8ead8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3ba8ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5f3ba8a100" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5f3ba8a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba8a450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5f3ba8d020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5f3ba8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3ba8d370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3ba8d4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3ba8d680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3ba8d808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba8d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5f3ba8ca90" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3ba8ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3ba8cde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3ba8b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3ba8b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ba8b330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3ba8b4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3ba8b640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3ba8b7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3ba8b950"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3ba8bad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3ba8bc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3ba8bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f5f3ba84b60" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f5f3ba84b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f5f3ba864f8" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f5f3ba864f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba86848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f5f3ba86c40" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f5f3ba86c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f5f3ba84418" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f5f3ba84418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ba84768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f5f3bd0f4b0" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5f3bd0f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5f3bd0f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f5f3c0d9848" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f5f3c0d9848"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f5f3c0d9b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f5f3c055c78" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f5f3c055c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5f3bf7b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f5f3bbdaa98" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5f3bbdaa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5f3ba50950"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5f3ba50020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5f3ba501a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5f3ba50330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5f3bbdade8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5f3ba504b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5f3ba50640"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5f3ba507c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5f3ba44418" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5f3ba44418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3ba44768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5f3bbfdc28" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5f3bbfdc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5f3ba51020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f5f3ba51ce0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f5f3ba51ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3ba440a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f5f3ba51308" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5f3ba51308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3ba51658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5f3ba517e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5f3ba51968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5f3c0ccca0" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3c0ccca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3c10c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3c10c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5f3c0d7390" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5f3c0d7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3c0d76e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5f3c0d7868"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5f3c0d79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5f3bc9b7f8" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f5f3bc9b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3bc9bb48"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3bc9bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f5f3bc99d20" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f5f3bc99d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f5f3bc980a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5f3bc9c940" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5f3bc9c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3bc9cc90"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5f3bc9ce18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5f3bc9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f3b2b4550" loc="49:../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3b2b4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b2b48a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b2b4a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b2b4bb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b2b4d38"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b2b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f3b2b3268" loc="50:../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3b2b3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3b2b35b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3b2b3740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b2b38c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b2b3a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3b2b3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f3b2b3e20" loc="51:../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b2b3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3b2b21a8"/>
        <function-ref name="source" scoped="" ref="0x7f5f3b2b2330"/>
        <function-ref name="address" scoped="" ref="0x7f5f3b2b24b8"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3b2b2640"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3b2b27c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3b2b2950"/>
        <function-ref name="type" scoped="" ref="0x7f5f3b2b2ad8"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3b2b2c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3b2b2de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3b2b1020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3b2b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5f3b2b1430" loc="52:../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5f3b2b1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3b2b1780"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3b2b1908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3b2b1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f3a26b618" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3a26b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a26b968"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a26baf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a26bc78"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a26be00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a26a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5f3a26a2c8" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a26a2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a26a618"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a26a7a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a26a928"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a26aab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a26ac38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5f3a26ae80" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a26ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3a2691f8"/>
        <function-ref name="source" scoped="" ref="0x7f5f3a269380"/>
        <function-ref name="address" scoped="" ref="0x7f5f3a269508"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3a269690"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3a269818"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3a2699a0"/>
        <function-ref name="type" scoped="" ref="0x7f5f3a269b28"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3a269cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3a269e38"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3a268020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3a2681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3b9ef020" loc="44:../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3b9ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b9ef370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b9ef4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b9ef680"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b9ef808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b9ef990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5f3b9a7060" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3b9a7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b9a73d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b9a7558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b9a76e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b9a7868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b9a79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3b9a82c8" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3b9a82c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b9a8638"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b9a87c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b9a8948"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b9a8ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b9a8c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5f3b9a5268" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3b9a5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3b9a55b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3b9a5740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b9a58c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b9a5a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3b9a5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f5f3b9a3020" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f5f3b9a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b9a3370"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b9a34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f5f3b9a37c0" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f5f3b9a37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b9a3b10"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b9a3c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5f3b9a7c38" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b9a7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3b9a6020"/>
        <function-ref name="source" scoped="" ref="0x7f5f3b9a61a8"/>
        <function-ref name="address" scoped="" ref="0x7f5f3b9a6330"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3b9a64b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3b9a6640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3b9a67c8"/>
        <function-ref name="type" scoped="" ref="0x7f5f3b9a6950"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3b9a6ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3b9a6c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3b9a6de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3b9a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3b99ab00" loc="46:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3b99ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3b99ae50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3b99e020"/>
        <function-ref name="start" scoped="" ref="0x7f5f3b99e1a8"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b99e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f3b99eaa8" loc="47:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3b99eaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b99edf8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b99d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b99d1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b99d330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b99d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f3b995bb8" loc="49:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3b995bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3b998020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3b9981a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b998330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b9984b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3b998640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3b9955e0" loc="48:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3b9955e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3b995930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3b991020" loc="53:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b991020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b991370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b9914f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b991680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b991808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b991990"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b991b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b991ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b990330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b991e28"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b990020"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b9901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5f3b992020" loc="51:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3b992020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3b992370"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3b9924f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3b992680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f3b9988e0" loc="50:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b9988e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3b998c30"/>
        <function-ref name="source" scoped="" ref="0x7f5f3b998db8"/>
        <function-ref name="address" scoped="" ref="0x7f5f3b997020"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3b9971a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3b997330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3b9974b8"/>
        <function-ref name="type" scoped="" ref="0x7f5f3b997640"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3b9977c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3b997950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3b997ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3b997c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5f3b92f308" loc="54:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5f3b92f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b92f658"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b92f7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b92f968"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b92faf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b92fc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5f3b92e020" loc="55:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5f3b92e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3b92e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f3b985460" loc="47:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3b985460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b9857d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b985958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b985ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b985c68"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b985df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f3b931d20" loc="50:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3b931d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3b9300a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3b930228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b9303b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b930538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3b9306c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3b933180" loc="48:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3b933180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3b9334f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5f3b930908" loc="51:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3b930908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3b930c58"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3b930de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3b92f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f3b933738" loc="49:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b933738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3b933a88"/>
        <function-ref name="source" scoped="" ref="0x7f5f3b933c10"/>
        <function-ref name="address" scoped="" ref="0x7f5f3b933d98"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3b931020"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3b9311a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3b931330"/>
        <function-ref name="type" scoped="" ref="0x7f5f3b9314b8"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3b931640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3b9317c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3b931950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3b931ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3b92a728" loc="50:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3b92a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3b92aa78"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3b92ac00"/>
        <function-ref name="start" scoped="" ref="0x7f5f3b92ad88"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b929020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3b928208" loc="52:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3b928208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5f3bc1c408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b928558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b9286e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b928868"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b9289f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b928b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3b92a110" loc="49:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3b92a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3b92a460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3b929760" loc="51:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3b929760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5f3bc1c408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3b929ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3b9268f8" loc="56:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b9268f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b926c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b926dd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b925020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b9251a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b925330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b9254b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b925640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b925c60"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b9257c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b925950"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b925ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f5f3b926020" loc="55:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5f3b926020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5f3bc1c408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5f3b926370"/>
        <function-ref name="offset" scoped="" ref="0x7f5f3b9264f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5f3b926680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3b919020" loc="66:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3b919020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3b919370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3b9194f8"/>
        <function-ref name="start" scoped="" ref="0x7f5f3b919680"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b919808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f5f3b8b5b50" loc="332:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f5f3b8b5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b8b4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b8b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f5f3b905520" loc="74:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f5f3b905520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3b905870"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b9059f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f5f3b8ea3e8" loc="191:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f5f3b8ea3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b8ea738"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b8ea8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3b91b9b8" loc="65:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3b91b9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3b91bd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f5f3b908020" loc="75:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f5f3b908020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f5f3b908370"/>
        <function-ref name="flush" scoped="" ref="0x7f5f3b9084f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f5f3b8b8368" loc="322:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f5f3b8b8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b8b86b8"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b8b8840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f5f3b909578" loc="72:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5f3b909578"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f5f3b9098c8"/>
        <function-ref name="resetSend" scoped="" ref="0x7f5f3b909a50"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f5f3b909bd8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f5f3b909d60"/>
        <function-ref name="putData" scoped="" ref="0x7f5f3b916020"/>
        <function-ref name="putDone" scoped="" ref="0x7f5f3b9161a8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f5f3b916330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3b9165a8" loc="73:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b9165a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b9168f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b916a80"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b916c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b916d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b90e020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b90e1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b90e330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b90e950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b90e4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b90e640"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b90e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f5f3b8b2cf8" loc="341:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f5f3b8b2cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b8b10a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b8b1228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f5f3b913288" loc="67:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f5f3b913288"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f5f3b9135d8"/>
        <function-ref name="nextByte" scoped="" ref="0x7f5f3b913760"/>
        <function-ref name="startSend" scoped="" ref="0x7f5f3b9138e8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f5f3b913a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f5f3b90f528" loc="68:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5f3b90f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f5f3b90f878"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f5f3b90fa00"/>
        <function-ref name="endPacket" scoped="" ref="0x7f5f3b90fb88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f5f3b7ee908" loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f5f3b7ee908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b7eec58"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b7eede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3b7f26f8" loc="51:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3b7f26f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5f3bc1c408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b7f2a68"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b7f2bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b7f2d78"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b7f1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b7f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f5f3b7ec100" loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f5f3b7ec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b7ec450"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b7ec5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3b7f2020" loc="50:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3b7f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5f3bc1c408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3b7f2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f5f3b7f15b0" loc="54:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f5f3b7f15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5f3bc1c408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5f3b7f1920"/>
        <function-ref name="offset" scoped="" ref="0x7f5f3b7f1aa8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5f3b7f1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3b7ef268" loc="57:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b7ef268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b7ef5b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b7ef740"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b7ef8c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b7efa50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b7efbd8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b7efd60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b7ee020"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b7ee640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b7ee330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b7ee1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b7ee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f5f3b7f0750" loc="56:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f5f3b7f0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f5f3b7f0aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f5f3b7f0c28"/>
        <function-ref name="startSend" scoped="" ref="0x7f5f3b7f0db0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f5f3b7ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f5f3b7f1e78" loc="55:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5f3b7f1e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f5f3b7f01f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f5f3b7f0380"/>
        <function-ref name="endPacket" scoped="" ref="0x7f5f3b7f0508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f5f3b7dcc98" loc="50:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5f3b7dcc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b7e6020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5f3b7e61a8"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b7e6330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5f3b7e64b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5f3b7e6640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5f3b7e67c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b7e6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f5f3b7e8308" loc="48:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5f3b7e8308"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f5f3b7e8658"/>
        <function-ref name="resetSend" scoped="" ref="0x7f5f3b7e87e0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f5f3b7e8968"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f5f3b7e8af0"/>
        <function-ref name="putData" scoped="" ref="0x7f5f3b7e8c78"/>
        <function-ref name="putDone" scoped="" ref="0x7f5f3b7e8e00"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f5f3b7e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3b7e6bc8" loc="51:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b7e6bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b7e5020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b7e51a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b7e5330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b7e54b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b7e5640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b7e57c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b7e5950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b7db020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b7e5ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b7e5c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b7e5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5f3b7bdcc8" loc="6:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5f3b7bdcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b7c00a0"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b7c0228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5f3b7c29e8" loc="5:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5f3b7c29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b7c2d38"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5f3b7c1020"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b7c11a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5f3b7c1330"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5f3b7c14b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5f3b7c1640"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b7c17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5f3b7c2220" loc="4:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5f3b7c2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3b7c2570"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b7c26f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f3b2e3a68" loc="45:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3b2e3a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f3b2e3db8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3b2e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5f3b2e12a8" loc="47:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5f3b2e12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b2e15f8"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b2e1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5f3b2e1a08" loc="49:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b2e1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5f3b2e1d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5f3b2e22a8" loc="46:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5f3b2e22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b2e25f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5f3b2e2780"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b2e2908"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5f3b2e2a90"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5f3b2e2c18"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5f3b2e2da0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b2e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3b2e4e40" loc="44:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3b2e4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b2e31c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3b2e3348"/>
        <function-ref name="request" scoped="" ref="0x7f5f3b2e34d0"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b2e3658"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b2e37e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5f3b75ab90" loc="42:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b75ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3b75c020"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3b75c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5f3b75be10" loc="44:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5f3b75be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b7591a8"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b759330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5f3b757e78" loc="47:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b757e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5f3b7561f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5f3b75c988" loc="43:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5f3b75c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b75ccd8"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5f3b75ce60"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b75b020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5f3b75b1a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5f3b75b330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5f3b75b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b75b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5f3b759bc8" loc="46:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5f3b759bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b757020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3b7571a8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3b757330"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b7574b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b757640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3b75f270" loc="41:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3b75f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b75f5c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3b75f748"/>
        <function-ref name="request" scoped="" ref="0x7f5f3b75f8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b75fa58"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b75fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5f3b7552b0" loc="48:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3b7552b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3b755600"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3b755788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5f3b6d1060" loc="44:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b6d1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3b6d13d0"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3b6d1558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5f3b6d09e8" loc="46:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5f3b6d09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b6d0d58"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b6cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5f3b6cd180" loc="49:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b6cd180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5f3b6cd4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f5f3b6cd7b8" loc="50:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5f3b6cd7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f3b6cdb08"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f3b6cdc90"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f3b6cde18"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f3b6cc020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f3b6cc1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f3b6cc330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f3b6cc4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f3b6cc640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f3b6cc7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f3b6cc950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f3b6ccad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f3b6ccc60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f3b6ccde8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f3b6cb120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f3b6cb2a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f3b6cb430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f3b6cb5b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f3b6cb740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f3b6cb8c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f3b6cba50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f3b6cbbd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f3b6cbd60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f3b6ca020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f3b6ca1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3b6ca330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f3b6ca6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f3b6ca840"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f3b6ca9c8"/>
        <function-ref name="tx" scoped="" ref="0x7f5f3b6cab50"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f3b6cacd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f3b6cae60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f3b6c9020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f3b6c91a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f3b6c9330"/>
        <function-ref name="rx" scoped="" ref="0x7f5f3b6c94b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f3b6c9640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f3b6c97c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f3b6c9950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f3b6c9ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f3b6c9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5f3b6d1900" loc="45:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5f3b6d1900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b6d1c70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5f3b6d1df8"/>
        <function-ref name="receive" scoped="" ref="0x7f5f3b6d0020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5f3b6d01a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5f3b6d0330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5f3b6d04b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b6d0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5f3b6c8a58" loc="52:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3b6c8a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b6c7828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b6c6190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b6c7cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b6c6618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5f3b6cf408" loc="48:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5f3b6cf408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b6cf778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3b6cf900"/>
        <function-ref name="request" scoped="" ref="0x7f5f3b6cfa88"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b6cfc10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b6cfd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3b6d22e8" loc="43:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3b6d22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b6d2658"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3b6d27e0"/>
        <function-ref name="request" scoped="" ref="0x7f5f3b6d2968"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b6d2af0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b6d2c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5f3b6c80c8" loc="51:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3b6c80c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3b6c8438"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3b6c85c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3b6c6a30" loc="53:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b6c6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b6c6d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b6c5020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b6c51a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b6c5330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b6c54b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6c5640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b6c57c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b6c5de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b6c5ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b6c5950"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b6c5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5f3b6b6528" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3b6b6528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3b6b6878"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3b6b6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5f3b6b9448" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f3b6b9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3b6b9798"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b6b9920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5f3b6b9c38" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3b6b9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f3b6bd020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f3b6bd1a8"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f3b6bd330"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f3b6bd4b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f3b6bd640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f3b6bd7c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f3b6bd950"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f3b6bdad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f3b6bdc60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f3b6bdde8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f3b6bc020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f3b6bc1a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f3b6bc330"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f3b6bc5b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f3b6bc740"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f3b6bc8c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f3b6bca50"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f3b6bcbd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f3b6bcd60"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f3b6b8020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f3b6b81a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f3b6b8330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f3b6b84b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f3b6b8640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3b6b87c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f3b6b8b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f3b6b8cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f3b6b8e60"/>
        <function-ref name="tx" scoped="" ref="0x7f5f3b6b7020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f3b6b71a8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f3b6b7330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f3b6b74b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f3b6b7640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f3b6b77c8"/>
        <function-ref name="rx" scoped="" ref="0x7f5f3b6b7950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f3b6b7ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f3b6b7c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f3b6b7de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f3b6b6020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f3b6b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5f3b6a0658" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5f3b6a0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6a09a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b6a0b30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b6a0cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b6a0e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b69f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b69f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b69f330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b69f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b69f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b69f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b69f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b69fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b69fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b69e020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b69e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5f3b6ae8e0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5f3b6ae8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3b6aec30"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3b6aedb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f5f3b69e558" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f5f3b69e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b69e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b69ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b69ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b69ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b69d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b69d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b69d330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b69d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b69d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b69d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b69d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b69dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b69dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b69c020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b69c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f5f3b69c558" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f5f3b69c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b69c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b69ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b69cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b69cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b69b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b69b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b69b330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b69b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b69b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b69b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b69b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b69bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b69bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b69a020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b69a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f5f3b6b2060" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5f3b6b2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f3b6b23b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f3b6b2538"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f3b6b26c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f3b6b2848"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f3b6b29d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f3b6b2b58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f3b6b2ce0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f3b6b2e68"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f3b6b1020"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f3b6b11a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f3b6b1330"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f3b6b14b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f3b6b1640"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f3b6b18c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f3b6b1a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f3b6b1bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f3b6b1d60"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f3b6b0020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f3b6b01a8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f3b6b0330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f3b6b04b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f3b6b0640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f3b6b07c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f3b6b0950"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3b6b0ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f3b6b0e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f3b6af020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f3b6af1a8"/>
        <function-ref name="tx" scoped="" ref="0x7f5f3b6af330"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f3b6af4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f3b6af640"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f3b6af7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f3b6af950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f3b6afad8"/>
        <function-ref name="rx" scoped="" ref="0x7f5f3b6afc60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f3b6afde8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f3b6ae020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f3b6ae1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f3b6ae330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f3b6ae4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5f3b6b57c0" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f3b6b57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3b6b5b10"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b6b5c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f5f3b6ab7e0" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f5f3b6ab7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6abb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b6abcb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b6abe40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b6a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b6a11a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6a1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b6a14b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6a1640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b6a17c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6a1950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b6a1ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b6a1c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b6a1de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b6a0120"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6a02a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5f3b6a28c8" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5f3b6a28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6a2c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b6a2da0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b6ac020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b6ac1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b6ac330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6ac4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b6ac640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6ac7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b6ac950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6acad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b6acc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b6acde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b6ab020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b6ab2a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6ab430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5f3b625668" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5f3b625668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6259b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b625b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b625cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b625e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b624020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6241a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b624330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6244b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b624640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6247c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b624950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b624ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b624c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b623020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5f3b610568" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5f3b610568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6108b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b610a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b610bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b610d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b60f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b60f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b60f330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b60f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b60f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b60f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b60f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b60fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b60fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b60e020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b60e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f5f3b5c77d0" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f5f3b5c77d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5c7b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5c7ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5c7e30"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5c6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5c61a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5c6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5c64b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5c6640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5c67c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5c6950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5c6ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5c6c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5c6de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5c5120"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5c52a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f5f3b5a2558" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f5f3b5a2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5a28a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5a2a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5a2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5a2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5a1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5a1330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5a14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5a1640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5a17c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5a1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5a1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5a1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5a0020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f5f3b5c5660" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f5f3b5c5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5c59b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5c5b38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5c5cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5c5e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5c4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5c4330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5c44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5c4640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5c47c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5c4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5c4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5c4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5c3020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f5f3b60c568" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f5f3b60c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b60c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b60ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b60cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b60cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b60b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b60b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b60b330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b60b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b60b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b60b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b60b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b60bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b60bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b60a020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b60a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f5f3b5f8568" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f5f3b5f8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5f88b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5f8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5f8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5f8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5f7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5f7330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5f74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5f7640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5f77c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5f7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5f7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5f7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5f6020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f5f3b5e3568" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f5f3b5e3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5e38b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5e3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5e3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5e3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5e2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5e21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5e2330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5e24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5e2640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5e27c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5e2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5e2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5e2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5e1020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f5f3b5d3568" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f5f3b5d3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5d38b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5d3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5d3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5d3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5d2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5d21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5d2330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5d24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5d2640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5d27c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5d2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5d2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5d2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5d1020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f5f3b5be560" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f5f3b5be560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5be8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5bea38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5bebc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5bed48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5bd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5bd330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5bd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5bd640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5bd7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5bd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5bdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5bdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5bc020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f5f3b5ae558" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f5f3b5ae558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5ae8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5aea30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5aebb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5aed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5ad020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5ad1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5ad330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5ad4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5ad640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5ad7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5ad950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5adad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5adc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5ac020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f5f3b59a560" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f5f3b59a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b59a8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b59aa38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b59abc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b59ad48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b599020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b599330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b599640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5997c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b599950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b599ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b599c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b598020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5f3b61e568" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5f3b61e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b61e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b61ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b61ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b61ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b61d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b61d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b61d330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b61d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b61d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b61d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b61d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b61dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b61dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b61c020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b61c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f5f3b5bc560" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f5f3b5bc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5bc8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5bca38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5bcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5bcd48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5bb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5bb330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5bb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5bb640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5bb7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5bb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5bbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5bbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5ba020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5f3b61a568" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5f3b61a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b61a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b61aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b61abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b61ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b619020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b619330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6194b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b619640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6197c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b619950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b619ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b619c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b618020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f5f3b606568" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f5f3b606568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6068b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b606a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b606bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b606d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b605020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b605330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6054b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b605640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6057c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b605950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b605ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b605c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b604020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f5f3b5f2568" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f5f3b5f2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5f28b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5f2a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5f2bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5f2d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5f0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5f01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5f0330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5f04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5f0640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5f07c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5f0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5f0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5f0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5ef020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f5f3b5dd568" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f5f3b5dd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5dd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5dda40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5ddbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5ddd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5dc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5dc330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5dc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5dc640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5dc7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5dc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5dcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5dcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5db020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f5f3b5cd568" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f5f3b5cd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5cd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5cda40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5cdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5cdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5cc330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5cc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5cc640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5cc7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5cc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5ccad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5ccc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5cb020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5f3b629978" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5f3b629978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b629cc8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b629e50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b628020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b6281a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b628330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6284b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b628640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6287c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b628950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b628ad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b628c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b628de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b627020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b6272a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b627430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5f3b614568" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5f3b614568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6149b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b614b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b614cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b614e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b613020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b613330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6134b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b613640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6137c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b613950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b613ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b613c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b612020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f5f3b600568" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f5f3b600568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6008b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b600a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b600bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b600d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5ff020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5ff330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5ff4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5ff640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5ff7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5ff950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5ffad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5ffc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5fe020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f5f3b5c9970" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f5f3b5c9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5c9cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5c9e48"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5c81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5c8330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5c84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5c8640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5c87c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5c8950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5c8ad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5c8c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5c8de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5c7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5c72a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5c7430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f5f3b5a8558" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f5f3b5a8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5a88a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5a8a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5a8bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5a8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5a7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5a7330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5a74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5a7640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5a77c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5a7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5a7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5a7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5a6020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f5f3b59c558" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f5f3b59c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b59c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b59ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b59cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b59cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b59b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b59b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b59b330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b59b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b59b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b59b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b59b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b59bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b59bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b59a020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b59a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f5f3b5b4560" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f5f3b5b4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5b48b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5b4a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5b4bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5b4d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5b3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5b31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5b3330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5b34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5b3640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5b37c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5b3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5b3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5b3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5b2020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5b21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f5f3b5fc568" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f5f3b5fc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5fcab8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5fcc40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5fcdc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5fb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5fb1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5fb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5fb4b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5fb640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5fb7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5fb950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5fbad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5fbc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5fbde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5fa120"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5fa2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f5f3b5e7568" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f5f3b5e7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5e78b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5e7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5e7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5e7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5e61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5e6330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5e64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5e6640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5e67c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5e6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5e6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5e6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5e5020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f5f3b5d7568" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f5f3b5d7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5d78b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5d7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5d7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5d7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5d6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5d6330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5d64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5d6640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5d67c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5d6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5d6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5d6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5d5020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f5f3b5a6558" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f5f3b5a6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5a68a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5a6a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5a6bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5a6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5a5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5a5330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5a54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5a5640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5a57c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5a5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5a5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5a5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5a4020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f5f3b5ba558" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f5f3b5ba558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5ba8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5baa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5babb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5bad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5b9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5b91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5b9330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5b94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5b9640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5b97c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5b9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5b9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5b9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5b8020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5f3b623568" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5f3b623568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6238b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b623a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b623bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b623d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b622020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b622330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6224b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b622640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6227c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b622950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b622ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b622c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b621020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5f3b60e568" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5f3b60e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b60e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b60ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b60ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b60ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b60d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b60d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b60d330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b60d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b60d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b60d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b60d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b60dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b60dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b60c020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b60c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f5f3b5db568" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f5f3b5db568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5db8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5dba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5dbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5dbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5da020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5da1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5da330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5da4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5da640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5da7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5da950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5daad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5dac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5d9020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f5f3b60a568" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f5f3b60a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b60a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b60aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b60abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b60ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b609020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b609330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6094b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b609640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6097c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b609950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b609ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b609c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b608020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f5f3b5f6568" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f5f3b5f6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5f68b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5f6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5f6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5f6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5f5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5f5330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5f54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5f5640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5f57c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5f5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5f5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5f5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5f4020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f5f3b5e1568" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f5f3b5e1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5e18b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5e1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5e1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5e1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5e0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5e01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5e0330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5e04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5e0640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5e07c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5e0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5e0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5e0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5df020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f5f3b5d1568" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f5f3b5d1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5d18b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5d1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5d1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5d1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5d0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5d0330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5d04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5d0640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5d07c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5d0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5d0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5d0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5cf020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f5f3b5b6560" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f5f3b5b6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5b68b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5b6a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5b6bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5b6d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5b5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5b51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5b5330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5b54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5b5640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5b57c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5b5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5b5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5b5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5b4020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5f3b62fd20" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5f3b62fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b62c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b62c228"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b62c3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b62c538"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b62c6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b62c848"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b62c9d0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b62cb58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b62cce0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b62ce68"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b62b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b62b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b62b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b62b5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b62b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5f3b618568" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5f3b618568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6188b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b618a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b618bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b618d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b617020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b617330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6174b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b617640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6177c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b617950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b617ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b617c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b616020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f5f3b604568" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f5f3b604568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6048b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b604a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b604bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b604d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b603020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b603330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6034b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b603640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6037c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b603950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b603ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b603c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b602020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f5f3b5ef568" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f5f3b5ef568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5ef8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5efa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5efbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5efd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5ee330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5ee4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5ee640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5ee7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5ee950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5eead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5eec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5ed020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f5f3b5b2560" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f5f3b5b2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5b28b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5b2a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5b2bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5b2d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5b1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5b1330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5b14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5b1640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5b17c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5b1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5b1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5b1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5b0020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f5f3b5ac558" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f5f3b5ac558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5ac8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5aca30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5acbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5acd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5ab020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5ab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5ab330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5ab4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5ab640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5ab7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5ab950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5abad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5abc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5aa020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f5f3b5a0558" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f5f3b5a0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5a08a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5a0a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5a0bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5a0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b59f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b59f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b59f330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b59f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b59f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b59f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b59f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b59fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b59fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b59e020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b59e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f5f3b5eb568" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f5f3b5eb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5eb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5eba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5ebbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5ebd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5ea330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5ea4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5ea640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5ea7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5ea950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5eaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5eac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5e9020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f5f3b5b0560" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f5f3b5b0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5b08b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5b0a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5b0bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5b0d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5af020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5af330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5af4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5af640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5af7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5af950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5afad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5afc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5ae020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5f3b6277f0" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5f3b6277f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b627b40"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b627cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b627e50"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b626020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b6261a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b626330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b6264b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b626640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b6267c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b626950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b626ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b626c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b626de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b625120"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6252a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5f3b612568" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5f3b612568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6128b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b612a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b612bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b612d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b611020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b611330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6114b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b611640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6117c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b611950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b611ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b611c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b610020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f5f3b5fe568" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f5f3b5fe568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5fe8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5fea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5febc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5fed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5fd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5fd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5fd330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5fd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5fd640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5fd7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5fd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5fdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5fdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5fc020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f5f3b5b8560" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f5f3b5b8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5b88b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5b8a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5b8bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5b8d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5b7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5b7330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5b74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5b7640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5b77c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5b7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5b7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5b7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5b6020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f5f3b5a4558" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f5f3b5a4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5a48a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5a4a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5a4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5a4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5a3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5a3330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5a34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5a3640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5a37c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5a3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5a3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5a3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5a2020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f5f3b5fa668" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f5f3b5fa668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5fa9b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5fab40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5facc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5fae50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5f9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5f9330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5f94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5f9640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5f97c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5f9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5f9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5f9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5f8020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f5f3b5e5568" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f5f3b5e5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5e58b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5e5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5e5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5e5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5e41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5e4330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5e44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5e4640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5e47c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5e4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5e4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5e4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5e3020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f5f3b5d5568" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f5f3b5d5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5d58b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5d5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5d5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5d5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5d4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5d41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5d4330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5d44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5d4640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5d47c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5d4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5d4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5d4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5d3020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5f3b621568" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5f3b621568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6218b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b621a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b621bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b621d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b61f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b61f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b61f330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b61f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b61f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b61f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b61f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b61fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b61fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b61e020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b61e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f5f3b5d9568" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f5f3b5d9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5d98b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5d9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5d9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5d9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5d8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5d8330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5d84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5d8640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5d87c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5d8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5d8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5d8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5d7020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5f3b61c568" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5f3b61c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b61c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b61ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b61cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b61cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b61b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b61b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b61b330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b61b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b61b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b61b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b61b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b61bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b61bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b61a020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b61a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f5f3b608568" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f5f3b608568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6088b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b608a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b608bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b608d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b607020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b607330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6074b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b607640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6077c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b607950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b607ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b607c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b606020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f5f3b5f4568" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f5f3b5f4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5f48b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5f4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5f4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5f4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5f3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5f31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5f3330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5f34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5f3640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5f37c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5f3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5f3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5f3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5f2020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f5f3b5df568" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f5f3b5df568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5df8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5dfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5dfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5dfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5de020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5de1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5de330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5de4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5de640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5de7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5de950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5dead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5dec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5dd020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f5f3b5cf568" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f5f3b5cf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5cf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5cfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5cfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5cfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5ce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5ce330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5ce4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5ce640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5ce7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5ce950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5cead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5cec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5cd020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5f3b62bb00" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5f3b62bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b62be50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b62a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b62a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b62a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b62a4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b62a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b62a7c8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b62a950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b62aad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b62ac60"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b62ade8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b629020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b6291a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b629430"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6295b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5f3b616568" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5f3b616568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6168b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b616a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b616bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b616d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b615020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b615330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6154b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b615640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6157c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b615950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b615ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b615c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b614020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f5f3b602568" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f5f3b602568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b6028b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b602a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b602bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b602d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b601020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b6011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b601330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b6014b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b601640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b6017c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b601950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b601ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b601c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b600020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b6001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f5f3b5ed568" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f5f3b5ed568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5ed8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5eda40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5edbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5edd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5ec330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5ec4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5ec640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5ec7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5ec950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5ecad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5ecc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5eb020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f5f3b5c0548" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f5f3b5c0548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5c0898"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5c0a20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5c0ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5c0d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5bf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5bf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5bf330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5bf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5bf640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5bf7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5bf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5bfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5bfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5be020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f5f3b5aa558" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f5f3b5aa558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5aa8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5aaa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5aabb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5aad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5a9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5a91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5a9330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5a94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5a9640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5a97c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5a9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5a9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5a9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5a8020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f5f3b5c3560" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f5f3b5c3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5c38b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5c3a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5c3bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5c3d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5c1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5c1330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5c14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5c1640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5c17c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5c1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5c1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5c1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5c0020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f5f3b5e9568" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f5f3b5e9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5e98b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5e9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5e9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5e9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5e8330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5e84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5e8640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5e87c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5e8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5e8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5e8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5e7020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f5f3b59e558" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f5f3b59e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b59e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b59ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b59ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b59ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b59d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b59d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b59d330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b59d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b59d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b59d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b59d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b59dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b59dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b59c020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b59c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f5f3b598568" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f5f3b598568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5988b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b598a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b598bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b598d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b597020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b597330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b597640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5977c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b597950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b597ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b597c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b596020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f5f3b5cb5b8" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f5f3b5cb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5cbd08"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5ca020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5ca1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5ca330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5ca4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5ca640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5ca7c8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b5ca950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5caad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b5cac60"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5cade8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5c9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b5c91a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5c9430"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b5c95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b594e18" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b594e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b56d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b56d330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b56d4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b56d640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b56d7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b56d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b56dad8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b56dc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b56dde8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b56c020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b56c1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b56c330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b56c4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b56c740"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b56c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b569478" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b569478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5697c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b569950"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b569ad8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b569c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b569de8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b568020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5681a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b568330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5684b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b568640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5687c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b568950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b568ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b568d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b567020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b565ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b565ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b564020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5641a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b564330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5644b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b564640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5647c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b564950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b564ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b564c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b564de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b563020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5631a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b563330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5635b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b563740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b5603d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b5603d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b560728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5608b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b560a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b560bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b560d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b55f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b55f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b55f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b55f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b55f640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b55f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b55f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b55fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b55fd60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b55e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b55cca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b55cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b55b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b55b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b55b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b55b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b55b640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b55b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b55b950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b55bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b55bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b55bde8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b55a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b55a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b55a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b55a5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b55a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b5573d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b5573d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b557728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5578b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b557a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b557bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b557d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b556020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5561a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b556330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5564b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b556640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5567c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b556950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b556ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b556d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b555020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b553ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b553ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b552020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5521a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b552330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5524b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b552640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5527c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b552950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b552ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b552c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b552de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b551020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5511a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b551330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5515b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b551740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b54e3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b54e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b54e728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b54e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b54ea38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b54ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b54ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b54c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b54c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b54c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b54c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b54c640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b54c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b54c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b54cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b54cd60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b54b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b549ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b549ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b548020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5481a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b548330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5484b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b548640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5487c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b548950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b548ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b548c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b548de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b547020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5471a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b547330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5475b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b547740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b5443d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b5443d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b544728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5448b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b544a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b544bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b544d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b543020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5431a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b543330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5434b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b543640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5437c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b543950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b543ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b543d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b542020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b540ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b540ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b53f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b53f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b53f330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b53f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b53f640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b53f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b53f950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b53fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b53fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b53fde8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b53e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b53e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b53e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b53e5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b53e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b53b3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b53b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b53b728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b53b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b53ba38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b53bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b53bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b53a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b53a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b53a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b53a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b53a640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b53a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b53a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b53aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b53ad60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b539020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b537d08" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b537d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b5360a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b536228"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b5363b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b536538"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b5366c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b536848"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5369d0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b536b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b536ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b536e68"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b535020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5351a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b535330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5355b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b535740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b5323d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b5323d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b532728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5328b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b532a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b532bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b532d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b531020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5311a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b531330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5314b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b531640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5317c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b531950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b531ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b531d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b530020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b52eca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b52eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b52d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b52d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b52d330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b52d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b52d640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b52d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b52d950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b52dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b52dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b52dde8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b52c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b52c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b52c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b52c5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b52c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b5283d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b5283d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b528728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5288b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b528a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b528bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b528d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b527020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5271a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b527330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5274b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b527640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5277c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b527950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b527ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b527d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b526020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b524ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b524ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b523020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5231a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b523330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5234b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b523640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5237c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b523950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b523ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b523c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b523de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b522020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5221a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b522330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5225b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b522740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b51f3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b51f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b51f728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b51f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b51fa38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b51fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b51fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b51e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b51e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b51e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b51e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b51e640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b51e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b51e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b51ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b51ed60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b51d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b51bca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b51bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b51a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b51a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b51a330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b51a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b51a640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b51a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b51a950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b51aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b51ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b51ade8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b519020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5191a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b519330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5195b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b519740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b5163d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b5163d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b516728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5168b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b516a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b516bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b516d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b515020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5151a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b515330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5154b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b515640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5157c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b515950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b515ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b515d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b514020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b512ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b512ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b511020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5111a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b511330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5114b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b511640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5117c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b511950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b511ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b511c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b511de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b510020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5101a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b510330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5105b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b510740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b50d3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b50d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b50d728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b50d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b50da38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b50dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b50dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b50c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b50c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b50c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b50c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b50c640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b50c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b50c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b50cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b50cd60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b50b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b509ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b509ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b507020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5071a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b507330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b5074b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b507640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b5077c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b507950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b507ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b507c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b507de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b506020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b5061a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b506330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b5065b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b506740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b5033d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b5033d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b503728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b5038b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b503a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b503bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b503d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b502020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b5021a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b502330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b5024b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b502640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b5027c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b502950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b502ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b502d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b501020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4ffdd8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4ffdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4fe170"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4fe2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4fe480"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4fe608"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4fe790"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4fe918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4feaa0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4fec28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4fedb0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4fd020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4fd1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4fd330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4fd4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4fd740"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4fd8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4fa478" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4fa478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4fa7c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4fa950"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4faad8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4fac60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4fade8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4f9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4f91a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4f9330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4f94b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4f9640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4f97c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4f9950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4f9ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4f9d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4f6ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4f6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4f5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4f51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4f5330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4f54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4f5640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4f57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4f5950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4f5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4f5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4f5de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4f4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4f41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4f4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4f45b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4f4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4f13d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4f13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4f1728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4f18b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4f1a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4f1bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4f1d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4f0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4f01a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4f0330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4f04b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4f0640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4f07c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4f0950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4f0ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4f0d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4edca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4edca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4ec020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4ec1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4ec330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4ec4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4ec640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4ec7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4ec950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4ecad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4ecc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4ecde8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4eb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4eb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4eb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4eb5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4eb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4e83d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4e83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4e8728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4e88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4e8a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4e8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4e8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4e7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4e71a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4e7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4e74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4e7640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4e77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4e7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4e7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4e7d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4e4ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4e4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4e2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4e21a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4e2330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4e24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4e2640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4e27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4e2950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4e2ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4e2c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4e2de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4e1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4e11a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4e1330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4e15b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4e1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4de3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4de3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4de728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4de8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4dea38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4debc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4ded48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4dd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4dd1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4dd330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4dd4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4dd640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4dd7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4dd950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4ddad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4ddd60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4daca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4daca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4d9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4d91a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4d9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4d94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4d9640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4d97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4d9950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4d9ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4d9c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4d9de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4d8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4d81a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4d8330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4d85b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4d8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4d53d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4d53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4d5728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4d58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4d5a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4d5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4d5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4d4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4d41a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4d4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4d44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4d4640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4d47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4d4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4d4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4d4d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4d1ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4d1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4d0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4d01a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4d0330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4d04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4d0640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4d07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4d0950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4d0ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4d0c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4d0de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4cf020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4cf1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4cf330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4cf5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4cf740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4cc3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4cc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4cc728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4cc8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4cca38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4ccbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4ccd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4cb1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4cb330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4cb4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4cb640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4cb7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4cb950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4cbad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4cbd60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4c8ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4c8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4c7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4c71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4c7330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4c74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4c7640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4c77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4c7950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4c7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4c7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4c7de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4c6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4c61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4c6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4c65b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4c6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4c33d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4c33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4c3728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4c38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4c3a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4c3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4c3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4c2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4c21a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4c2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4c24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4c2640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4c27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4c2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4c2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4c2d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4beca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4beca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4bd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4bd1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4bd330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4bd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4bd640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4bd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4bd950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4bdad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4bdc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4bdde8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4bc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4bc1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4bc330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4bc5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4bc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4b93d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4b93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4b9728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4b98b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4b9a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4b9bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4b9d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4b8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4b81a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4b8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4b84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4b8640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4b87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4b8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4b8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4b8d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4b5ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4b5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4b4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4b41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4b4330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4b44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4b4640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4b47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4b4950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4b4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4b4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4b4de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4b3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4b31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4b3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4b35b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4b3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4b03d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4b03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4b0728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4b08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4b0a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4b0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4b0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4af1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4af330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4af4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4af640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4af7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4af950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4afad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4afd60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4acca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4acca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4ab020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4ab1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4ab330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4ab4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4ab640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4ab7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4ab950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4abad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4abc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4abde8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4aa020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4aa1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4aa330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4aa5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4aa740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4a73d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4a73d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4a7728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4a78b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4a7a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4a7bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4a7d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4a61a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4a6330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4a64b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4a6640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4a67c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4a6950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4a6ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4a6d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4a3ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4a3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4a2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4a21a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b4a2330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4a24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b4a2640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4a27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4a2950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4a2ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4a2c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b4a2de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4a1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4a11a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b4a1330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4a15b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4a1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b49e3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b49e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b49e728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b49e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b49ea38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b49ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b49ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b49c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b49c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b49c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b49c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b49c640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b49c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b49c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b49cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b49cd60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b49b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b499ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b499ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b498020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4981a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b498330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b4984b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b498640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b4987c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b498950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b498ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b498c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b498de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b497020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b4971a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b497330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b4975b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b497740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5f3b4943d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5f3b4943d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b494728"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b4948b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b494a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b494bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b494d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b493020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4931a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b493330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b4934b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b493640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4937c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b493950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b493ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b493d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b492020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5f3b42b020" loc="43:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3b42b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b42bd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b42a6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b42a230"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b42ab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f5f3b428dd8" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5f3b428dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b425be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b424548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b4240c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b4249d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5f3b4112a0" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b4112a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3b4115f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3b411778"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3b411900"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b411a88"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3b411c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b411d98"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3b410020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b4101a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b410330"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3b4104b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3b410640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5f3b421330" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3b421330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b4140c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b4149d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b414548"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b414e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5f3b42db88" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b42db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b40d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b40d1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b40d330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b40d4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b40d640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b40d7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b40d950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b40c020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b40dad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b40dc60"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b40dde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f5f3b401650" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f5f3b401650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b4019a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b401b28"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b401cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b401e38"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b407020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b4071a8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b407330"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b4074b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3b40ce80" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3b40ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3b4091f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f5f3b4077d0" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f5f3b4077d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b407b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b407ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b407e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b400020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b4001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b400330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b4004b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b400640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5f3b409470" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b409470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b4097c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b409948"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b409ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b409c58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b409de0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b408020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b4081a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b4087c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b408330"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b4084b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b408640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f5f3b400958" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f5f3b400958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b400ca8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b400e30"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3ff1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3ff330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3ff4b8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3ff640"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3ff7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f5f3b40acf0" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f5f3b40acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3e50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3e5228"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3e53b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3e5538"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3e56c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3e5848"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3e59d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3e5b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f5f3b3e4020" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f5f3b3e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3e4370"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3e44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3e4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3e4808"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3e4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3e4b18"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3e4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3e4e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f5f3b3e22d8" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3b3e22d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3b3e2628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f5f3b3e31b0" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f5f3b3e31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3e3500"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3e3688"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3e3810"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3e3998"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3e3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3e3ca8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3e3e30"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3b3cf5f8" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3b3cf5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3cf948"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3cfad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b3cfc58"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3cfde0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3ce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b3ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3ce330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3ce4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b3ce640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b3ce7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3ce950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b3cead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b3cec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b3cd020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3b3df4e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3b3df4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3df830"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3df9b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3dfb40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3dfcc8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3dfe50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3cf020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3cf1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3cf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3b3cae20" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3b3cae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3c91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3c9330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b3c94b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3c9640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3c97c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b3c9950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3c9ad8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3c9c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b3c9de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b3c8020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3c81a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b3c8330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b3c84b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b3c8740"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3c88c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3b3cccd0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3b3cccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3ca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3ca228"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3ca3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3ca538"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3ca6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3ca848"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3ca9d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3cab58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3b3c55f8" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3b3c55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3c5948"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3c5ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3b3c5c58"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3c5de0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3c4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3b3c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3c4330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3c44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3b3c4640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3b3c47c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3c4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3b3c4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3b3c4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3b3c3020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3b3c6448" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3b3c6448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3b3c6798"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3b3c6920"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3b3c6aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3b3c6c30"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b3c6db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3b3c5020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b3c51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3b3c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f3a1b38c8" loc="43:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3a1b38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f3a1b3c18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3a1b3da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5f3a1ad780" loc="48:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3a1ad780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3a1adad0"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3a1adc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5f3a1ad020" loc="46:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3a1ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3a1ad370"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3a1ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3a1b4bd0" loc="42:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3a1b4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a1b3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a1b31a8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a1b3330"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a1b34b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a1b3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5f3a1b27c0" loc="45:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3a1b27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f3a1b2b10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f3a1b2c98"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f3a1b2e20"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f3a1b1020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f3a1b11a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f3a1b1330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f3a1b14b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f3a1b1640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f3a1b17c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f3a1b1950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f3a1b1ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f3a1b1c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f3a1b1de8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f3a1b0120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f3a1b02a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f3a1b0430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f3a1b05b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f3a1b0740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f3a1b08c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f3a1b0a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f3a1b0bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f3a1b0d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f3a1af020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f3a1af1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3a1af330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f3a1af6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f3a1af840"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f3a1af9c8"/>
        <function-ref name="tx" scoped="" ref="0x7f5f3a1afb50"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f3a1afcd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f3a1afe60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f3a1ae020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f3a1ae1a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f3a1ae330"/>
        <function-ref name="rx" scoped="" ref="0x7f5f3a1ae4b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f3a1ae640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f3a1ae7c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f3a1ae950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f3a1aead8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f3a1aec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5f3a1b2060" loc="44:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3a1b2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f3a1b23b0"/>
        <function-ref name="userId" scoped="" ref="0x7f5f3a1b2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f3b3a1ce0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3b3a1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f3b3a00a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3b3a0228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5f3b39f270" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b39f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3b39f5c0"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3b39f748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5f3b3a6d38" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5f3b3a6d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3b3a30d8"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3b3a3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3b3a3a30" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3b3a3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b3a3d80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3b3a1020"/>
        <function-ref name="request" scoped="" ref="0x7f5f3b3a11a8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b3a1330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b3a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5f3b3a0520" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b3a0520"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f3b3a0870"/>
        <function-ref name="userId" scoped="" ref="0x7f5f3b3a09f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5f3b38a5f8" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b38a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f3b38a948"/>
        <function-ref name="userId" scoped="" ref="0x7f5f3b38aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5f3b39d888" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5f3b39d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3b39dbf8"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3b39dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f5f3b38a020" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5f3b38a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3b38a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5f3b39c1c0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5f3b39c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3b39c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f5f3b39c7f8" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f5f3b39c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3b39cb48"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3b39ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f3b3150c8" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3b3150c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f3b315438"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3b3155c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5f3b314c70" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3b314c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3b312020"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3b3121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5f3b315808" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f3b315808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b315b58"/>
        <function-ref name="requested" scoped="" ref="0x7f5f3b315ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b315e68"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b314020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3b3141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3b316378" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3b316378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b3166e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3b316870"/>
        <function-ref name="request" scoped="" ref="0x7f5f3b3169f8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b316b80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b316d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5f3b3143f0" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b3143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f3b314740"/>
        <function-ref name="userId" scoped="" ref="0x7f5f3b3148c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f39e19828" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f39e19828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f39e19b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5f39e19e00" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5f39e19e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5f39e181a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5f39e18330"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5f39e184b8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5f39e18640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f39e16b48" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39e16b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f39e14020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f39e141a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5f39e138c0" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f39e138c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f39e13c30"/>
        <function-ref name="configure" scoped="" ref="0x7f5f39e13db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5f39e120a0" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5f39e120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5f39e123f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5f39e12578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5f39e12700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5f39e12888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5f39e143f0" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f39e143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f39e14740"/>
        <function-ref name="requested" scoped="" ref="0x7f5f39e148c8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f39e14a50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f39e14bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f39e14d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f39e12ad0" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f39e12ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f39e12e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f39e11020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f39e111a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f39e11330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f39e114b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f39e11640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f39e117c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f39e11de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f39e11ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f39e11950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f39e11c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f39e17e20" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f39e17e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f39e161c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f39e16348"/>
        <function-ref name="request" scoped="" ref="0x7f5f39e164d0"/>
        <function-ref name="granted" scoped="" ref="0x7f5f39e16658"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f39e167e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5f39e13020" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f39e13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f39e13370"/>
        <function-ref name="userId" scoped="" ref="0x7f5f39e134f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5f39e10100" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f5f39e10100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f39e10450"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f39e105d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f5f3b2fa0e0" loc="72:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5f3b2fa0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f5f3b2fa430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f5f3b2fa678" loc="73:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f3b2fa678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b2fa9c8"/>
        <function-ref name="requested" scoped="" ref="0x7f5f3b2fab50"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b2facd8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b2fae60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3b2f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f5f3b30e988" loc="70:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f3b30e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3b30ecd8"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b30ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5f3b2f9268" loc="74:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3b2f9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f3b2f95b8"/>
        <function-ref name="userId" scoped="" ref="0x7f5f3b2f9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f5f39de25b8" loc="62:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5f39de25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f5f39de2908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f5f39de2b50" loc="63:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f39de2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f39de0020"/>
        <function-ref name="requested" scoped="" ref="0x7f5f39de01a8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f39de0330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f39de04b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f39de0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f5f39de3e50" loc="60:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5f39de3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f39de21e8"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39de2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5f39de0888" loc="64:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f39de0888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f39de0bd8"/>
        <function-ref name="userId" scoped="" ref="0x7f5f39de0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f5f3b2db080" loc="3:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5f3b2db080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5f3b2db3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5f3b2db6b0" loc="4:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3b2db6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3b2dba00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3b2dbb88"/>
        <function-ref name="request" scoped="" ref="0x7f5f3b2dbd10"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3b2da020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3b2da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5f3b2de800" loc="2:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5f3b2de800"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3b2deb50"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b2decd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f5f3b2cad20" loc="47:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f5f3b2cad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5f3b2c70a0"/>
        <function-ref name="offset" scoped="" ref="0x7f5f3b2c7228"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5f3b2c73b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f5f3b2ad020" loc="43:../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5f3b2ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5f3b28bd10"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5f3b28aa30"/>
        <function-ref name="element" scoped="" ref="0x7f5f3b288088"/>
        <function-ref name="full" scoped="" ref="0x7f5f3b28b020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5f3b28b8c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5f3b28a3d0"/>
        <function-ref name="empty" scoped="" ref="0x7f5f3b2adb68"/>
        <function-ref name="size" scoped="" ref="0x7f5f3b28b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5f3b283838" loc="93:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5f3b283838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5f3b280548"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5f3b27f240"/>
        <function-ref name="element" scoped="" ref="0x7f5f3b27f870"/>
        <function-ref name="full" scoped="" ref="0x7f5f3b282828"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5f3b2800f8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5f3b280ba8"/>
        <function-ref name="empty" scoped="" ref="0x7f5f3b2823d8"/>
        <function-ref name="size" scoped="" ref="0x7f5f3b282c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5f3b27e020" loc="94:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3b27e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b27e370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b27e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b27e680"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b27e808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b27e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5f3b27ec18" loc="95:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3b27ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3b27d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3b27d1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b27d330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b27d4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3b27d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f5f3b278c78" loc="114:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f5f3b278c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b277020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b2771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3b287978" loc="89:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3b287978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3b287cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3b27d8b8" loc="96:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b27d8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b27dc08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b27dd90"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b27b020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b27b1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b27b330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b27b4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b27b640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b27bc60"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b27b7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b27b950"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b27bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f5f3b283020" loc="90:../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f5f3b283020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f5f3b283370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f5f3b261468" loc="43:../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f5f3b261468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f5f3b2617b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3b25e748" loc="94:../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3b25e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3b25ea98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f5f3b25ed68" loc="95:../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f5f3b25ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f5f3b25b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5f3b2562b0" loc="39:../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5f3b2562b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5f3b256600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f5f3b256990" loc="40:../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f5f3b256990"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3b256ce0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3b256e68"/>
        <function-ref name="start" scoped="" ref="0x7f5f3b253020"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b2531a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f5f3b213188" loc="37:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7f5f3b213188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b20f5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b211a88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b2108c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b210470"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b20e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b20fa40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b210020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b213cd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b20f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b211198"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b211638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timeout" ref="0x7f5f3b2327a0" loc="29:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timeout" scoped="" ref="0x7f5f3b2327a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b22fa18"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b230158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b230e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b2309f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b22d2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b22fe68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b2305a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b231370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b22f448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b231810"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b231cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Delay2" ref="0x7f5f3b228ab0" loc="32:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Delay2" scoped="" ref="0x7f5f3b228ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b224d60"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b226470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b2241c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b226d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b223648"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b2231f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b2268c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b227620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b224790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b227ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b226020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5f3b24de60" loc="24:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5f3b24de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5f3b24c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f5f3b204cb8" loc="49:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f5f3b204cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3b2030a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3b203228"/>
        <function-ref name="start" scoped="" ref="0x7f5f3b2033b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b203538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tdata" ref="0x7f5f3b23c1c8" loc="27:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tdata" scoped="" ref="0x7f5f3b23c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b2395f0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b23baf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b23a8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b23a470"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b237020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b239a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b23a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b23cd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b239020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b23b200"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b23b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5f3b206978" loc="47:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3b206978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3b206cc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3b206e50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b205020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b2051a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3b205330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5f3b203da0" loc="51:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3b203da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3b202170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3b2022f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3b202480"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3b202608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3b202790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tstamp" ref="0x7f5f3b201020" loc="52:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tstamp" scoped="" ref="0x7f5f3b201020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3b200478"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3b200b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3b201d70"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b1f8278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timesync" ref="0x7f5f3b223c38" loc="33:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timesync" scoped="" ref="0x7f5f3b223c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b21fe78"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b2215a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b21f2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b221e48"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b21e748"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b21e2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b2219f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b2227e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b21f8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b222c88"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b221158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Delay3" ref="0x7f5f3b218020" loc="35:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Delay3" scoped="" ref="0x7f5f3b218020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b2142b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b217978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b2156c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b215278"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b214b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b214708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b217dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b218b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b215c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b217088"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b217528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f5f3b2037c8" loc="50:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3b2037c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3b203b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7f5f3b20c020" loc="43:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f5f3b20c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5f3b24d020"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f5f3b24d910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f5f3b206020"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3b20cb68"/>
        <function-ref name="notify" scoped="" ref="0x7f5f3b206470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TsyncTdma" ref="0x7f5f3b21ed40" loc="34:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TsyncTdma" scoped="" ref="0x7f5f3b21ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b219088"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b21c688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b21a470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b21a020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b219928"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b2194d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b21cad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b21d8b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b21aa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b21dd58"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b21c238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7f5f3b20a7e0" loc="42:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f5f3b20a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5f3b24d020"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f5f3b24d910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b20d458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3b24c460" loc="25:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3b24c460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3b24c7b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3b24c938"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3b24cac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3b24cc48"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3b24cdd0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b24b020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3b24b1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3b24b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3b24b330"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3b24b4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3b24b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tsleep" ref="0x7f5f3b2375f8" loc="28:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tsleep" scoped="" ref="0x7f5f3b2375f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b2348f0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b235020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b235d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b2358c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b2321c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b234d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b235470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b236198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b234320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b236638"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b236ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tsync" ref="0x7f5f3b24a0f8" loc="26:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tsync" scoped="" ref="0x7f5f3b24a0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b23e320"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b249a08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b23f728"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b23f2d8"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b23ebc0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b23e770"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b249e58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b24ac40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b23fcf8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b249118"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b2495b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Delay" ref="0x7f5f3b22d8d8" loc="31:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Delay" scoped="" ref="0x7f5f3b22d8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b229bc0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b22b238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b229020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b22bad8"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b2284d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b228088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b22b688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b22c458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b2295f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b22c8f8"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b22cd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5f3b2055d0" loc="48:SmacC.nc">
      <component-ref qname="SmacC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3b2055d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3b205920"/>
        <function-ref name="source" scoped="" ref="0x7f5f3b205aa8"/>
        <function-ref name="address" scoped="" ref="0x7f5f3b205c30"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3b205db8"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3b204020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3b2041a8"/>
        <function-ref name="type" scoped="" ref="0x7f5f3b204330"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3b2044b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3b204640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3b2047c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3b204950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3b17fa60" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Tsync"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3b17fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3affdd60"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afff470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3affd1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3afffd10"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3affc648"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3affc1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3afff8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b000620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3affd790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b000ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3afff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5f3b1764e8" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b1764e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b172768"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b175e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b173b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b173728"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b171088"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b172bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b1732d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b175088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b172198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b175528"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b1759c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5f3b16db50" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f5f3b16db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b16ad98"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b16b4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b16a1f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b16bd78"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b168688"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b168238"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b16b928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b16c6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b16a7c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b16cb90"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b16b088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5f3b166108" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5f3b166108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b166c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3b171e30" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3b171e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3b16d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5f3b097c00" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f3b097c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b093410"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b0954a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f3b095db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b095930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f3b093898"/>
        <function-ref name="start" scoped="" ref="0x7f5f3b0969f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b095020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3b097418" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3b097418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3b097768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5f39dc7990" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f39dc7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39dc3020"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39dc40c0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39dc49d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39dc4548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39dc34a8"/>
        <function-ref name="start" scoped="" ref="0x7f5f39dc5730"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39dc5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f39dc71a8" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f39dc71a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f39dc74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5f39dae020" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39dae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f39dae370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f39dae4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f39dae680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f39dae808"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39dae990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5f39db15e0" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39db15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f39db1930"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f39db1ab8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f39db1c40"/>
        <function-ref name="get" scoped="" ref="0x7f5f39db1dc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f39db0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f39db01a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f39db0330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f39db04b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f39db0640"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f39db07c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f39db0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5f39db0bd8" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39db0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f39daf020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f39daf1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f39daf330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f39daf4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f39daf640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f39daf7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f39daf950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f39dafad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f39dafc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5f3b141300" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f3b141300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3b141650"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f3b1417d8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f3b141960"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f3b141ae8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b141c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5f3b148d88" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3b148d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3b145170"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3b1452f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3b145480"/>
        <function-ref name="get" scoped="" ref="0x7f5f3b145608"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3b145790"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b145918"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3b145aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b145c28"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b145db0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3b144020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3b1441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5f3b1449d8" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3b1449d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3b144d28"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3b142020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3b1421a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3b142330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3b1424b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3b142640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3b1427c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3b142950"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3b142ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f5f39da58c8" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39da58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f39da5c18"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f39da5da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f39da4020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f39da41a8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39da4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5f39da7020" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39da7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f39da7370"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f39da74f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f39da7680"/>
        <function-ref name="get" scoped="" ref="0x7f5f39da7808"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f39da7990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f39da7b18"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f39da7ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f39da7e28"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f39da6020"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f39da61a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f39da6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5f39dab020" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f39dab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39da9690"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39daa6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39da9088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39daab80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39da9b18"/>
        <function-ref name="start" scoped="" ref="0x7f5f39dabd70"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39daa270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f39dac7a8" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f39dac7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f39dacaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5f39da65b8" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39da65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f39da6908"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f39da6a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f39da6c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f39da6da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f39da5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f39da51a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f39da5330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f39da54b8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f39da5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5f3b0f7718" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3b0f7718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b0f4578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b0f2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b0f4a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b0f24a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5f3b0d3b10" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f5f3b0d3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b0d28f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b0d1230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b0d2d80"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b0d16b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5f3b0ef878" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3b0ef878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b0d5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b0d3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b0d5ae8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b0d34a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5f39dc1830" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f39dc1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39dbd020"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39dbf020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39dbf930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39dbf4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39dbd4a8"/>
        <function-ref name="start" scoped="" ref="0x7f5f39dc05e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39dc0ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f5f39dbbce8" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f5f39dbbce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39db7410"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39db94a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39db9db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39db9930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39db7898"/>
        <function-ref name="start" scoped="" ref="0x7f5f39dbaac0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39db9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5f39dbdad0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f39dbdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f39dbc860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f39dbb1f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f39dbcce8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f39dbb680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f5f3b063020" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f5f3b063020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b063370"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b0634f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5f3b066020" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f3b066020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b064690"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b0656f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f3b064088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b065b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f3b064b18"/>
        <function-ref name="start" scoped="" ref="0x7f5f3b066d70"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b065270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3b090d88" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3b090d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b068088"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b06a6c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b069470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b069020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b068928"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b0684d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b06ab18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b06b908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b069a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b06bda8"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b06a278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f5f3b014478" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f5f3b014478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3b0147c8"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3b014950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f5f3b019208" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f5f3b019208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b0165f0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b018b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b0178c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b017470"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b014020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b016a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b017020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b019d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b016020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b018238"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b0186d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3b01f020" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3b01f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3b01b358"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3b01e9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3b01c748"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3b01c2d8"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3b01bc38"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3b01b7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3b01ee28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3b01fb88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3b01cd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3b01e088"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3b01e548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5f3b012c38" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5f3b012c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b011820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5f3b011e48" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3b011e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3b007be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3b006548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3b0060c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3b0069d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3affa020" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Tdata"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3affa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3aff62b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3aff9978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3aff76c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3aff7278"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3aff6b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3aff6708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3aff9dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3affab68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3aff7c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3aff9088"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3aff9528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3aff4550" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Tsleep"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3aff4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3aff0768"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3aff3e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3aff1b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3aff1728"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3afef088"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3aff0bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3aff12d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3aff30c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3aff0198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3aff3560"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3aff3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3afeea60" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Timeout"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3afeea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3afead60"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afeb470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3afea1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3afebd10"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3afe9648"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3afe91f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3afeb8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3afec620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3afea790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3afecac0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3afeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3afe6020" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Delay"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3afe6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3afe32b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afe5978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3afe46c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3afe4278"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3afe3b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3afe3708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3afe5dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3afe6b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3afe4c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3afe5088"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3afe5528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3afe0550" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Delay2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3afe0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3afdd768"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afdfe50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3afdeb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3afde728"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3afdb088"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3afddbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3afde2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3afdf0c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3afdd198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3afdf560"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3afdfa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3afdaa60" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Delay3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3afdaa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3afd7d60"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afd8470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3afd71c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3afd8d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3afd5648"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3afd51f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3afd88c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3afd9620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3afd7790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3afd9ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3afd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3afd3058" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Timesync"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3afd3058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3afcf2b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afd2978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3afd16c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3afd1278"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3afcfb58"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3afcf708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3afd2dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3afd3ba0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3afd1c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3afd2088"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3afd2528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3afcd568" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.TsyncTdma"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3afcd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3afc98f0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afcb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3afcbd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3afcb8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3afc81c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3afc9d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3afcb470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3afcc0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3afc9320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3afcc598"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3afcca38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3afc7aa0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="SmacAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3afc7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3afc3d60"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afc5470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3afc31c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3afc5d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3afc2648"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3afc21f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3afc58c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3afc6620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3afc3790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3afc6ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3afc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f5f3afbb188" loc="49:../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f5f3afbb188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5f3b24d020"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f5f3b24d910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f5f3afba158"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afbbcd0"/>
        <function-ref name="notify" scoped="" ref="0x7f5f3afba5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f5f3afbc020" loc="48:../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f5f3afbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5f3b24d020"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f5f3b24d910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3afbcb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f5f3afb18d8" loc="41:../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f5f3afb18d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3afb1c28"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afb1db0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3afb4020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3afb41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3afb6318" loc="40:../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3afb6318"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3afb6668"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3afb67f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3afb6978"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3afb6b00"/>
        <function-ref name="get" scoped="" ref="0x7f5f3afb6c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3afb6e10"/>
        <function-ref name="set" scoped="" ref="0x7f5f3afb5020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3afb51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5f3afa7568" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5f3afa7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa78b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa7a40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa7bc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa7d50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afa6020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afa61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5f3af9c568" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5f3af9c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af9c8b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af9ca40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af9cbc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af9cd50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af9b020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5f3afa4568" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5f3afa4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa48b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa4a40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa4bc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa4d50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afa2020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afa21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5f3afa1568" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5f3afa1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa18b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa1a40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa1bc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa1d50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afa0020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afa01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5f3afad568" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5f3afad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afad8b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afada40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afadbc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afadd50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afa8020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afa81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5f3af9e568" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5f3af9e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af9e9b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af9eb40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af9ecc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af9ee50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af9d020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af9d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5f3afa6568" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5f3afa6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa68b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa6a40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa6bc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa6d50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afa5020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afa51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5f3af9b568" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5f3af9b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af9b8b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af9ba40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af9bbc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af9bd50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af9a020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5f3afa95f8" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5f3afa95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa9948"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa9ad0"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa9c58"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa9de0"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afae020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5f3afa0568" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5f3afa0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa08b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa0a40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa0bc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa0d50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af9f020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af9f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5f3afa8568" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5f3afa8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa88b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa8a40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa8bc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa8d50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afa7020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afa71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5f3af9d568" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5f3af9d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af9d8b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af9da40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af9dbc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af9dd50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af9c020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5f3afa5568" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5f3afa5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa58b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa5a40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa5bc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa5d50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afa4020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afa41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5f3afa2568" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5f3afa2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afa28b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afa2a40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afa2bc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afa2d50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afa1020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afa11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5f3afae568" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5f3afae568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3afae8b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3afaea40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3afaebc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3afaed50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3afad020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3afad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5f3af9f568" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5f3af9f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af9f8b8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af9fa40"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af9fbc8"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af9fd50"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af9e020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5f3af93020" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5f3af93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af93370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af934f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af93680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af93808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af93990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af93b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5f3af88020" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5f3af88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af88370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af884f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af88680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af88808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af88990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af88b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5f3af90020" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5f3af90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af90370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af904f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af90680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af90808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af90990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af90b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5f3af8e020" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5f3af8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af8e370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af8e4f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af8e680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af8e808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af8e990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af8eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5f3af95100" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5f3af95100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af95450"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af955d8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af95760"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af958e8"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af95a70"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af95bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5f3af8b020" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5f3af8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af8b470"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af8b5f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af8b780"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af8b908"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af8ba90"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af8bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5f3af92020" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5f3af92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af92370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af924f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af92680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af92808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af92990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af92b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5f3af87020" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5f3af87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af87370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af874f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af87680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af87808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af87990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af87b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5f3af972c0" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5f3af972c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af97610"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af97798"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af97920"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af97aa8"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af97c30"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af97db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5f3af8d020" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5f3af8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af8d370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af8d4f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af8d680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af8d808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af8d990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af8db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5f3af94020" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5f3af94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af94370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af944f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af94680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af94808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af94990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af94b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5f3af89020" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5f3af89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af89370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af894f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af89680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af89808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af89990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af89b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5f3af91020" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5f3af91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af91370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af914f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af91680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af91808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af91990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af91b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5f3af8f020" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5f3af8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af8f370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af8f4f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af8f680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af8f808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af8f990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af8fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5f3af961f8" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5f3af961f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af96548"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af966d0"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af96858"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af969e0"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af96b68"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af96cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5f3af8c020" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5f3af8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3af8c370"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3af8c4f8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3af8c680"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3af8c808"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3af8c990"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3af8cb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3aebd780" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3aebd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aebdad0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aebdc58"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3aebdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aebc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aebc1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3aebc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aebc4b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aebc640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3aebc7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3aebc950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aebcad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3aebcc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3aebcde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3aebb120"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aebb2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3aebe5d8" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3aebe5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aebe928"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aebeab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aebec38"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aebedc0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aebd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aebd1a8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aebd330"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aebd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f5f3aeb8780" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f5f3aeb8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3aeb8ad0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3aeb8c58"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3aeb8de0"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3aeaa020"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3aeaa1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3aeaa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f5f3aeb9b58" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f5f3aeb9b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3aeb8020"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3aeb81a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3aeb8330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3aeb84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f5f3ae8e470" loc="51:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f5f3ae8e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3ae8e7c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3ae8e948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f5f3ae8f8c8" loc="46:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f5f3ae8f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ae8fc18"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ae8fda0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3ae8e020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3ae8e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f5f3ae93dd8" loc="43:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f5f3ae93dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f5f3ae92e30"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3ae929e0"/>
        <function-ref name="notify" scoped="" ref="0x7f5f3ae902d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f5f3aea6cd8" loc="42:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f5f3aea6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3ae938b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f5f3ae90740" loc="45:../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ae90740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ae90a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ae90c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ae90da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ae8f020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ae8f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ae8f330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ae8f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ae8f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7f5f3ae87718" loc="45:../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7f5f3ae87718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3ae85370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f5f3ae89c60" loc="43:../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f5f3ae89c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5f3b24d020"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f5f3b24d910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f5f3ae88c38"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3ae887e8"/>
        <function-ref name="notify" scoped="" ref="0x7f5f3ae870c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f5f3ae859b0" loc="46:../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f5f3ae859b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f5f3ae84978"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3ae84528"/>
        <function-ref name="notify" scoped="" ref="0x7f5f3ae84dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f5f3ae8caf8" loc="42:../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f5f3ae8caf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5f3b24d020"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f5f3b24d910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3ae89670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3ae8ab70" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae8ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3ae77020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3ae771a8"/>
        <function-ref name="start" scoped="" ref="0x7f5f3ae77330"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3ae774b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f3ae77c30" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3ae77c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ae76020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae761a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae76330"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3ae764b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ae76640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5f3ae74968" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5f3ae74968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3ae74cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f3ae73020" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3ae73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3ae73370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3ae734f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae73680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae73808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3ae73990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5f3ae70060" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3ae70060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3ae6f4b8"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3ae6fb98"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3ae70db0"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ae6d2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5f3ae62848" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3ae62848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5f3ae62b98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5f3ae62d20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5f3ae68020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5f3ae681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3ae76dc0" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3ae76dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3ae74170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5f3ae71348" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae71348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3ae71698"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3ae71820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3ae719a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f3ae73c30" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae73c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3ae72020"/>
        <function-ref name="source" scoped="" ref="0x7f5f3ae721a8"/>
        <function-ref name="address" scoped="" ref="0x7f5f3ae72330"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3ae724b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3ae72640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3ae727c8"/>
        <function-ref name="type" scoped="" ref="0x7f5f3ae72950"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3ae72ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3ae72c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3ae72de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3ae71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5f3ae6c020" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5f3ae6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3ae6b478"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3ae6bb58"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3ae6cd70"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ae69278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3ae56310" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae56310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3ae56660"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3ae567e8"/>
        <function-ref name="start" scoped="" ref="0x7f5f3ae56970"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3ae56af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5f3ae3c700" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3ae3c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5f3ae3ca50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5f3ae3cbd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5f3ae3cd60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5f3ae42020"/>
        <function-ref name="setCca" scoped="" ref="0x7f5f3ae421a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5f3ae42330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5f3ae391c8" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f5f3ae391c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5f3ae39618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f3ae51bd8" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3ae51bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3ae50020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3ae501a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae50330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae504b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3ae50640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f3ae552b0" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3ae552b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ae55600"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae55788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae55910"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3ae55a98"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ae55c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5f3ae52020" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5f3ae52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3ae52370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5f3ae47888" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3ae47888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3ae47bd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3ae47d60"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3ae4f020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3ae4f1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3ae4f330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3ae4f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5f3ae42628" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3ae42628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5f3ae42978"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5f3ae42b00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5f3ae42c88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5f3ae42e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3ae533c8" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3ae533c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3ae53718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5f3ae4f7e0" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae4f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3ae4fb30"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3ae4fcb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3ae4fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5f3ae31450" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5f3ae31450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5f3ae317a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5f3ae31928"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5f3ae31ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5f3ae31c38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5f3ae31dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f3ae52610" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3ae52610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3ae52960"/>
        <function-ref name="source" scoped="" ref="0x7f5f3ae52ae8"/>
        <function-ref name="address" scoped="" ref="0x7f5f3ae52c70"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3ae52df8"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3ae51020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3ae511a8"/>
        <function-ref name="type" scoped="" ref="0x7f5f3ae51330"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3ae514b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3ae51640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3ae517c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3ae51950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5f3ae437b0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3ae437b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5f3ae43b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3ae2d020" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3ae2d370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3ae2d4f8"/>
        <function-ref name="start" scoped="" ref="0x7f5f3ae2d680"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3ae2d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5f3ae26980" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3ae26980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5f3ae26cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5f3ae25ab8" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5f3ae25ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5f3ae25e08"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5f3ae24020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5f3ae241a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5f3ae24330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5f3ae244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5f3ae27080" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3ae27080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3ae273d0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3ae27558"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3ae276e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3ae27868"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3ae279f0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3ae27b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5f3ae29cf0" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5f3ae29cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ae280a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae28228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae283b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3ae28538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ae286c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5f3ae25020" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3ae25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5f3ae25370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5f3ae254f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5f3ae25680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5f3ae25808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5f3ae2a980" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5f3ae2a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3ae2acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5f3ae26020" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3ae26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3ae26370"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3ae264f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3ae26680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3ae2b020" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3ae2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ae2b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ae2b4f8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ae2b680"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ae2b808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ae2b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5f3ae2bca0" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5f3ae2bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ae2a020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae2a1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae2a330"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3ae2a4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ae2a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5f3ae29060" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5f3ae29060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3ae293b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3ae29538"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae296c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae29848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3ae299d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5f3ae28a18" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5f3ae28a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3ae28d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3ae21160" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae21160"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3ae214b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3ae21638"/>
        <function-ref name="start" scoped="" ref="0x7f5f3ae217c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3ae21948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5f3ae1f020" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3ae1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5f3ae1f370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5f3ae1f4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5f3ae1f680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5f3ae1f808"/>
        <function-ref name="setCca" scoped="" ref="0x7f5f3ae1f990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5f3ae1fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3ae21c00" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3ae21c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ae20020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae201a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae20330"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3ae204b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ae20640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3ae20910" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3ae20910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3ae20c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3ae1ea68" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3ae1ea68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3ae1edb8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3ae1b020"/>
        <function-ref name="start" scoped="" ref="0x7f5f3ae1b1a8"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3ae1b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5f3ae19328" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3ae19328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5f3ae19678"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5f3ae19800"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5f3ae19988"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5f3ae19b10"/>
        <function-ref name="setCca" scoped="" ref="0x7f5f3ae19c98"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5f3ae19e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f5f3ae16a70" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f5f3ae16a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5f3ae16dc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5f3ae0f020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5f3ae0f1a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5f3ae0f330"/>
        <function-ref name="setCca" scoped="" ref="0x7f5f3ae0f4b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5f3ae0f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5f3ae07c58" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3ae07c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3ae04020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3ae041a8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3ae04330"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3ae044b8"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3ae04640"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3ae047c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f5f3ae09cc8" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5f3ae09cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ae160a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3ae16228"/>
        <function-ref name="modify" scoped="" ref="0x7f5f3ae163b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ae16538"/>
        <function-ref name="resend" scoped="" ref="0x7f5f3ae166c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3ae1b5e8" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3ae1b5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ae1b938"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae1bac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3ae1bc48"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3ae1bdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ae19020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5f3ae06d58" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5f3ae06d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5f3ae080d8"/>
        <function-ref name="rand32" scoped="" ref="0x7f5f3ae08260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5f3ae17540" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f5f3ae17540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3ae17890"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3ae17a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5f3ae03020" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3ae03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3ae03370"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3ae034f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3ae03680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f5f3ae10320" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5f3ae10320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5f3ae10670"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5f3ae107f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5f3ae10980"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5f3ae10b08"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5f3ae10c90"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5f3ae10e18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5f3ae17020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5f3ae171a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3ae08518" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3ae08518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3ae08868"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3ae089f0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3ae08b78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3ae08d00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3ae07020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ae071a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3ae07330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3ae07950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ae074b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3ae07640"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3ae077c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5f3ae18138" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3ae18138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ae18488"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ae18610"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ae18798"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ae18920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ae18aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f5f3adf83e8" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f5f3adf83e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3adf8838"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3adf89c0"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3adf8b48"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3adf8cd0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3adf8e58"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3ae02020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f5f3adf5988" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f5f3adf5988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3adf5cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3adf5e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f5f3adf6b30" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f5f3adf6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3adf6e80"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3adf5030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f5f3adf7c00" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f5f3adf7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3adf6020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3adf61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f5f3ada0aa8" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3ada0aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5f3ada0df8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5f3adac020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5f3adac1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5f3adac330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5f3adac4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5f3adac640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5f3adac7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5f3adac950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5f3adacad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5f3adacc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5f3adacde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5f3adab020"/>
        <function-ref name="sync" scoped="" ref="0x7f5f3adab1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5f3adab430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5f3adab5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f5f3ad9ab00" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f5f3ad9ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad9e670"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3ad9eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f5f3adab8b0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5f3adab8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5f3adabc00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5f3adabd88"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5f3ad9f020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5f3ad9f1a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5f3ad9f330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5f3ad9f4b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5f3ad9f640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5f3ad9f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3adb0b70" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3adb0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3adad020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3adad1a8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3adad330"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3adad4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3adad640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f5f3ad96140" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3ad96140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5f3ad96490"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5f3ad96618"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5f3ad967a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5f3ad96928"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5f3ad96ab0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5f3ad96c38"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5f3ad96dc0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5f3ad95020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5f3ad951a8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5f3ad95330"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5f3ad954b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5f3ad95640"/>
        <function-ref name="sync" scoped="" ref="0x7f5f3ad957c8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5f3ad95a50"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5f3ad95bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f5f3ad79548" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3ad79548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad79898"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad79a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f5f3ad8e5b0" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5f3ad8e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5f3ad8e900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f5f3ad90020" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f5f3ad90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3ad8d690"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3ad8f6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f3ad8d088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3ad8fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f3ad8db18"/>
        <function-ref name="start" scoped="" ref="0x7f5f3ad90d70"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3ad8f270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f5f3ad7c3d0" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3ad7c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad7c720"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad7c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f5f3ad8a1b0" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f5f3ad8a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ad8a500"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ad8a688"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ad8a810"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ad8a998"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ad8ab20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ad8aca8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ad8ae30"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ad89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f5f3ad93308" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f5f3ad93308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad93e50"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3ad922d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f5f3ad68e20" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f5f3ad68e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3ad671a8"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3ad67330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f5f3ad79da8" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5f3ad79da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad78170"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad782f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f5f3ad78690" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3ad78690"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad789e0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad78b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f5f3ad7d240" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3ad7d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad7d590"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad7d718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5f3ad839e8" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5f3ad839e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5f3ad83d38"/>
        <function-ref name="changed" scoped="" ref="0x7f5f3ad86020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5f3ad861a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5f3ad86330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5f3ad8b020" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5f3ad8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ad8b370"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ad8b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ad8b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ad8b808"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ad8b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ad8bb18"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ad8bca0"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ad8be28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f5f3ad76b68" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3ad76b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3ad750f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f5f3ad89378" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f5f3ad89378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ad896c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ad89850"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ad899d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ad89b60"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ad89ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ad89e70"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ad88020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ad881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3ad9ddc8" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3ad9ddc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3ad97170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f5f3ad7cc58" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3ad7cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad79020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad791a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f5f3ad75480" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3ad75480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3ad757d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5f3ad75b60" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5f3ad75b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ad73020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ad731a8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ad73330"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ad734b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ad73640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f5f3ad72858" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f5f3ad72858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ad72ba8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ad72d30"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ad71020"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ad711a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ad71330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f5f3ad94020" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5f3ad94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5f3ad94370"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5f3ad944f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5f3ad94680"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5f3ad94808"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5f3ad94990"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5f3ad94b18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5f3ad94ca0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5f3ad94e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f5f3ad7dab0" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3ad7dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad7de00"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f5f3ad7a9a8" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3ad7a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad7acf8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad7ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f5f3ad77d78" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5f3ad77d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3ad760f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3ad715e8" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3ad715e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3ad71938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3ad71ac0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3ad71c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3ad71dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3ad70020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ad701a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3ad70330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3ad70950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ad704b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3ad70640"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3ad707c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f5f3ad68020" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f5f3ad68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3ad68370"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3ad684f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3ad97450" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3ad97450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ad977a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ad97928"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ad97ab0"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ad97c38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ad97dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f5f3ad85508" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5f3ad85508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad85858"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad859e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f5f3ad7ea40" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3ad7ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ad85020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ad851a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f5f3ad88578" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f5f3ad88578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ad888c8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ad88a50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3ad88bd8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3ad88d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f5f3ad739e0" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f5f3ad739e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ad73d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ad72020"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ad721a8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ad72330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ad724b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f5f3ad76478" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3ad76478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3ad767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3acf23c0" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3acf23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3acf2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f5f3acf2d38" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5f3acf2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3acee410"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3acf04a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f3acf0db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3acf0930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f3acee898"/>
        <function-ref name="start" scoped="" ref="0x7f5f3acf1ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3acf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3aceb7d8" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3aceb7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3acebb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f5f3acb6060" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5f3acb6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3acb3690"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3acb5738"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f3acb3088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3acb5bc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f3acb3b18"/>
        <function-ref name="start" scoped="" ref="0x7f5f3acb6db0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3acb52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5f39cdb808" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f39cdb808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39cd8020"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39cd9020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39cd9930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39cd94a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39cd84a8"/>
        <function-ref name="start" scoped="" ref="0x7f5f39cda598"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39cdaa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f39cdb020" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f39cdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f39cdb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5f39cd44b8" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f39cd44b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39cccb18"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39cd2b90"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39ccc510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39ccc088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39ccb020"/>
        <function-ref name="start" scoped="" ref="0x7f5f39cd2230"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39cd2708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f39cd5b88" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f39cd5b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f39cd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5f39cb78c8" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39cb78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f39cb7c18"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f39cb7da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f39cb6020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f39cb61a8"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39cb6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5f39cb9020" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39cb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f39cb9370"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f39cb94f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f39cb9680"/>
        <function-ref name="get" scoped="" ref="0x7f5f39cb9808"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f39cb9990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f39cb9b18"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f39cb9ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f39cb9e28"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f39cb8020"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f39cb81a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f39cb8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5f39cb85b8" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39cb85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f39cb8908"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f39cb8a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f39cb8c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f39cb8da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f39cb7020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f39cb71a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f39cb7330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f39cb74b8"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f39cb7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f5f39cad2a8" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5f39cad2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f39cad5f8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5f39cad780"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5f39cad908"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5f39cada90"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39cadc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5f39cb08c0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f39cb08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f39cb0c10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f39cb0d98"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f39caf020"/>
        <function-ref name="get" scoped="" ref="0x7f5f39caf1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f39caf330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f39caf4b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f39caf640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f39caf7c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f39caf950"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f39cafad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f39cafc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5f39cb4848" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f39cb4848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39cb0020"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39cb2020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39cb2930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39cb24a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39cb04a8"/>
        <function-ref name="start" scoped="" ref="0x7f5f39cb35e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39cb3ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f39cb4020" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f39cb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f39cb4370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5f39cae020" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f39cae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f39cae370"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f39cae4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f39cae680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f39cae808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f39cae990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f39caeb18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f39caeca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f39caee28"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f39cad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5f3acd9cd8" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3acd9cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3acd6ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3acd54a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3acd5020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3acd5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5f3acce7f8" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f5f3acce7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3accd578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3accc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3accda00"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3accc4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5f3acd15a8" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3acd15a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3acd03a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3acd0cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3acd0830"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3acce190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5f39cc92d0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5f39cc92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39cc7928"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39cc89e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39cc7320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39cc8e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39cc7db0"/>
        <function-ref name="start" scoped="" ref="0x7f5f39cc8088"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39cc8560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f5f39cc3688" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f5f39cc3688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f39cc0cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f39cc2d60"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f39cc06b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f39cc0230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f39cbf190"/>
        <function-ref name="start" scoped="" ref="0x7f5f39cc2400"/>
        <function-ref name="stop" scoped="" ref="0x7f5f39cc28d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5f39cc5410" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f39cc5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f39cc4190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f39cc4aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f39cc4618"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f39cc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f5f3acad020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f5f3acad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3acad370"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3acad4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3acad680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3acad808"/>
        <function-ref name="get" scoped="" ref="0x7f5f3acad990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3acadb18"/>
        <function-ref name="set" scoped="" ref="0x7f5f3acadca0"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3acade28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f5f3acac1b8" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f5f3acac1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3acac508"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3acac690"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3acac818"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3acac9a0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3acacb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3acaccb0"/>
        <function-ref name="set" scoped="" ref="0x7f5f3acace38"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3acab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f5f3acab378" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f5f3acab378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3acab6c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3acab850"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3acab9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3acabb60"/>
        <function-ref name="get" scoped="" ref="0x7f5f3acabce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3acabe70"/>
        <function-ref name="set" scoped="" ref="0x7f5f3acaa020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3acaa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f5f3acafe20" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5f3acafe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3acae1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3acae330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3acae4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3acae640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3acae7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3acae950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3acaead8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3acaec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f5f3aca9688" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f5f3aca9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aca99d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aca9b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aca9ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aca9e70"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aca8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aca81a8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aca8330"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aca84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f5f3acf4c10" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f5f3acf4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3acaf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3acaf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3acaf330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3acaf4b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3acaf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3acaf7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3acaf950"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3acafad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f5f3acaa4f0" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f5f3acaa4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3acaa840"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3acaa9c8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3acaab50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3acaacd8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3acaae60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aca9020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aca91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aca9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3aca6908" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3aca6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aca6c58"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aca6de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3aca5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aca51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aca5330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3aca54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aca5640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aca57c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3aca5950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3aca5ad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aca5c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3aca5de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3aca4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3aca42a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aca4430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3aca77d0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3aca77d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aca7b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aca7ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aca7e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aca6020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aca61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aca6330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aca64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aca6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3aca0120" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3aca0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aca0470"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aca05f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3aca0780"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aca0908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aca0a90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3aca0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aca0da0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac9f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3ac9f1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3ac9f330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac9f4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3ac9f640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3ac9f7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3ac9fa50"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac9fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3aca2020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3aca2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aca2370"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aca24f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aca2680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aca2808"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aca2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aca2b18"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aca2ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aca2e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3ac9c908" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac9c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac9cc58"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac9cde0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3ac9b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac9b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac9b330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3ac9b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac9b640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac9b7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3ac9b950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3ac9bad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac9bc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3ac9bde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3ac9a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3ac9a2a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac9a430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3ac9d720" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac9d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac9da70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac9dbf8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac9dd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac9c020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac9c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac9c330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac9c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac9c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3ac97120" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac97120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac97470"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac975f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3ac97780"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac97908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac97a90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3ac97c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac97da0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac96020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3ac961a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3ac96330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac964b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3ac96640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3ac967c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3ac96a50"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac96bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3ac98020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac98370"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac984f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac98680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac98808"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac98990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac98b18"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac98ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac98e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3ac93908" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac93908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac93c58"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac93de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3ac92020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac921a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac92330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3ac924b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac92640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac927c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3ac92950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3ac92ad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac92c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3ac92de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3ac91020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3ac912a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac91430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3ac94720" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac94720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac94a70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac94bf8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac94d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac93020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac93330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac934b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac93640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3ac8e120" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac8e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac8e470"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac8e5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3ac8e780"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac8e908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac8ea90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3ac8ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac8eda0"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac8d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3ac8d1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3ac8d330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac8d4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3ac8d640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3ac8d7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3ac8da50"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac8dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3ac8f020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac8f370"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac8f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac8f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac8f808"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac8f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac8fb18"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac8fca0"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac8fe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3ac89908" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3ac89908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac89c58"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac89de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3ac88020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac881a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac88330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3ac884b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac88640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac887c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3ac88950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3ac88ad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac88c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3ac88de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3ac87020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3ac872a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac87430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3ac8a720" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac8a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac8aa70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac8abf8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac8ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac89020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac89330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac894b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac89640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f5f3ac76020" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f5f3ac76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5f3ac76370"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ac764f8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3ac76680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5f3ac76808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f5f3ac76bd8" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f5f3ac76bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ac75020"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ac751a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3ac75330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3ac754b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f5f3ac75898" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5f3ac75898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ac75be8"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ac75d70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3ac72020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3ac721a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f5f3ac5bd60" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f5f3ac5bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5f3ac5a0d8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5f3ac5a260"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3ac5a3e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3ac5a570"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3ac5a6f8"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5f3ac5a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5f3ac6c020" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5f3ac6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5f3ac6c370"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ac6c4f8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3ac6c680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5f3ac6c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5f3ac6ca90" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5f3ac6ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5f3ac6cde0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5f3ac5b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3ac5b1a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5f3ac5b330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5f3ac5b4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3ac5b640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5f3ac5b7c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5f3ac5b950"/>
        <function-ref name="setControl" scoped="" ref="0x7f5f3ac5bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f5f3ac5ab48" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3ac5ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3ac59020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3ac591a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3ac59330"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3ac594b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3ac59640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3ac597c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3ac59950"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ac59ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3ac59c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3ac59de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ac58020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3ac581a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3ac58330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3ac585b8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3ac58740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f5f3ac54480" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f5f3ac54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3ac547d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3ac54958"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ac54ae0"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3ac54c68"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3ac54df0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3ac53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f5f3ac559a0" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f5f3ac559a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ac55cf0"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ac55e78"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3ac54030"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3ac541b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f5f3ac502e8" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f5f3ac502e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3ac50638"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3ac507c0"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ac50948"/>
        <function-ref name="edge" scoped="" ref="0x7f5f3ac50ad0"/>
        <function-ref name="enable" scoped="" ref="0x7f5f3ac50c58"/>
        <function-ref name="getValue" scoped="" ref="0x7f5f3ac50de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f5f3ac52728" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f5f3ac52728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3ac52a78"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3ac52c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3ac52d88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3ac50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5f3a91a470" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a91a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a91a9c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a91ab48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5f3a9279b8" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a9279b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a927d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5f3a920470" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a920470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a9207c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a920948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5f3a919d98" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a919d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a918170"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9182f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5f3a911470" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a911470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a9117c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a911948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5f3a9185c0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a9185c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a918910"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a918a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5f3a9057c0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a9057c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a905b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a905c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5f3a9077c0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5f3a9077c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a907b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a907c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5f3a926c50" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a926c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a924020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5f3a90dc10" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5f3a90dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90c020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5f3a9087c0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a9087c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a908b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a908c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5f3a91e470" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5f3a91e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a91e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a91e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5f3a91d470" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a91d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a91d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a91d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5f3a913c10" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a913c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a912020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5f3a914470" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5f3a914470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a9147c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a914948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5f3a918d60" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a918d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a9160d8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a916260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5f3a928430" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a928430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5f3a928780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5f3a928908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5f3a928a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5f3a923638" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a923638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a923988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5f3a923c50" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5f3a923c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a9220d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5f3a90b060" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a90b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90b3b0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5f3a9223a0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a9223a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a9226f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5f3a907020" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a907020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a907370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9074f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5f3a924900" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a924900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a924c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5f3a90d470" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a90d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5f3a91ec10" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a91ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a91d020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a91d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5f3a920c10" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a920c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a91e020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a91e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5f3a9273a0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a9273a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a9276f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5f3a90e470" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a90e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5f3a911c10" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a911c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90f020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5f3a90ec10" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a90ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90d020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5f3a905020" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a905020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a905370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9054f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5f3a906020" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5f3a906020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a906370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9064f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5f3a914c10" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5f3a914c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a913020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5f3a90f470" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a90f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5f3a908020" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a908020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a908370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9084f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5f3a916cc8" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a916cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a9150a0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a915228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5f3a904020" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a904020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a904370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a9044f8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a904680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a904808"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a904990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5f3a928d58" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5f3a928d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a9270d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5f3a921c50" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5f3a921c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a920020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5f3a91dc10" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a91dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a91a020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a91a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5f3a912470" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a912470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a9127c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a912948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5f3a916528" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a916528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a916878"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a916a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5f3a912c10" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a912c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a911020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5f3a91ae10" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a91ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a9191a8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a919330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5f3a926020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5f3a926020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a926370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5f3a9195f8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a9195f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a919948"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a919ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3a9297d0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3a9297d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a929b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a929ca8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a929e30"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a928020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a9281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5f3a9229b8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a9229b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a922d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5f3a921638" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5f3a921638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a921988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5f3a90a7c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5f3a90a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90ab10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5f3a90a020" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a90a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90a370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5f3a923020" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a923020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a923370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5f3a90b800" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a90b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90bb50"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90bcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5f3a9067c0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5f3a9067c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a906b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a906c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5f3a913470" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a913470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a9137c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a913948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5f3a90fc10" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a90fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90e020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5f3a926638" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5f3a926638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a926988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5f3a9242e8" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a9242e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a924638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5f3a9154f0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a9154f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a915840"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9159c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5f3a921020" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5f3a921020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a921370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5f3a915c90" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a915c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a914020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a9141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5f3a90c470" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a90c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a90cbc0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a90cd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5f3a904c58" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a904c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a903020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a9031a8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a903330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a9034b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a903640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f5f3ac12b80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac12b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3ac11020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3ac111a8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ac11330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3ac114b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3ac11640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5f3ac13b38" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac13b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5f3ac12020"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5f3ac121a8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5f3ac12330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f5f3ac0f020" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f5f3ac0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ac0f370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ac0f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f5f3ac0fd60" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f5f3ac0fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ac0e0d8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ac0e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3ac16e78" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3ac16e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ac131f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ac13380"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ac13508"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ac13690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ac13818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f5f3ac0ead8" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac0ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3ac0ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f5f3ac01020" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3ac01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ac01370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ac014f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f5f3ac09e50" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f5f3ac09e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3ac081e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3ac08370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ac084f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3ac08680"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3ac08808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5f3ac0dde0" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3ac0dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5f3ac0a170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5f3ac0a2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5f3ac0a480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f5f3ac03cf8" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ac03cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5f3ac020a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f5f3ac01838" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f5f3ac01838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3ac01b88"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3ac01d10"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3ac00020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3ac001a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3ac00330"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3ac004b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5f3ac041e8" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5f3ac041e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ac04538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ac046c0"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ac04848"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ac049d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ac04b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f5f3ac06040" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f5f3ac06040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ac06390"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ac06518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f5f3ac06d40" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f5f3ac06d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3ac050d8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ac05260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3ac00730" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3ac00730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3ac00a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3ac00c08"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3ac00d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3abfa020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3abfa1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3abfa330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3abfa4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3abfaad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3abfa640"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3abfa7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3abfa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3ac0ac10" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3ac0ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ac09020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ac091a8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ac09330"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ac094b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ac09640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f5f3abf55d0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f5f3abf55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3abf5920"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3abf5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f5f3ac05a98" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f5f3ac05a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3ac05de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5f3ab9e978" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5f3ab9e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3ab9ecc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3ab9ee50"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3ab9d020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3ab9d1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3ab9d330"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3ab9d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5f3ab99790" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5f3ab99790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3ab99ae0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3ab99c68"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3ab99df0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3ab98020"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3ab981a8"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3ab98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3ab94438" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3ab94438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3ab94788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5f3ab93020" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5f3ab93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3ab93370"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3ab934f8"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3ab93680"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3ab93808"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3ab93990"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3ab93b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5f3a94d020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3a94d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a94d370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a94d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5f3ab7c948" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ab7c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5f3ab7cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3ab7dcf0" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3ab7dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ab7c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ab7c228"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ab7c3b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ab7c538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ab7c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f39bef430" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39bef430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f39bef780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f39bef908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5f39bedd18" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5f39bedd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f39bec0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f39bec228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5f39bec4b0" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5f39bec4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5f39bec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5f39befb90" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5f39befb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5f39bed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f39bf07d0" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f39bf07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f39bf0b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f39bf0ca8"/>
        <function-ref name="request" scoped="" ref="0x7f5f39bf0e30"/>
        <function-ref name="granted" scoped="" ref="0x7f5f39bef020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f39bef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5f39bed2a8" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5f39bed2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5f39bed5f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5f39bed780"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5f39bed908"/>
        <function-ref name="write" scoped="" ref="0x7f5f39beda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5f3ab6ae68" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3ab6ae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3ab691e8"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3ab69370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5f3ab68c90" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3ab68c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ab67020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ab671a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5f3ab65ce8" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5f3ab65ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5f3ab640a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5f3ab69640" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ab69640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5f3ab69990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5f3ab67a40" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5f3ab67a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ab67d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ab65020"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ab651a8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ab65330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ab654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3ab6eb88" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3ab6eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ab6a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ab6a1a8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ab6a330"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ab6a4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ab6a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5f3ab69c88" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5f3ab69c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5f3ab68020"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5f3ab681a8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5f3ab68330"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ab684b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5f3ab644f8" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3ab644f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3ab64848"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3ab649d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5f3ab0f3c8" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3ab0f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3ab0f738"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3ab0f8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5f3ab0ee38" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5f3ab0ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3ab0d1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3ab0d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5f3ab0c550" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5f3ab0c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5f3ab0c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5f3ab0fb48" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5f3ab0fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5f3ab0e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f5f3ab0cb88" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5f3ab0cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f3ab0a020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f3ab0a1a8"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f3ab0a330"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f3ab0a4b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f3ab0a640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f3ab0a7c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f3ab0a950"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f3ab0aad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f3ab0ac60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f3ab0ade8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f3ab09020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f3ab091a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f3ab09330"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f3ab095b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f3ab09740"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f3ab098c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f3ab09a50"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f3ab09bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f3ab09d60"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f3ab08020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f3ab081a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f3ab08330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f3ab084b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f3ab08640"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3ab087c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f3ab08b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f3ab08cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f3ab08e60"/>
        <function-ref name="tx" scoped="" ref="0x7f5f3ab07020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f3ab071a8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f3ab07330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f3ab074b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f3ab07640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f3ab077c8"/>
        <function-ref name="rx" scoped="" ref="0x7f5f3ab07950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f3ab07ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f3ab07c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f3ab07de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f3ab06020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f3ab061a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3ab06bd0" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3ab06bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3ab05020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3ab051a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3ab05330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3ab054b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3ab05640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3ab057c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3ab05950"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3ab04020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3ab05c60"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3ab05ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3ab05de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5f3ab0d758" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5f3ab0d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ab0dac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ab0dc50"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ab0ddd8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ab0c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ab0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3ab10608" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3ab10608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3ab10978"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3ab10b00"/>
        <function-ref name="request" scoped="" ref="0x7f5f3ab10c88"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3ab10e10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3ab0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5f3ab0e2a8" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5f3ab0e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5f3ab0e5f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5f3ab0e780"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5f3ab0e908"/>
        <function-ref name="write" scoped="" ref="0x7f5f3ab0ea90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5f3ab06470" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5f3ab06470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3ab067c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3ab06948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f5f3ab042e8" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f5f3ab042e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3ab04638"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3ab047c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f5f3aaf8860" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5f3aaf8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3aaf8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5f3aaf8020" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f3aaf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3aaf8370"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3aaf84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5f3aaff810" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f3aaff810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f3aaffb60"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f3aaffce8"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f3aaffe70"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f3aafc020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f3aafc1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f3aafc330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f3aafc4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f3aafc640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f3aafc7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f3aafc950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f3aafcad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f3aafcc60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f3aafcde8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f3aafb120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f3aafb2a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f3aafb430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f3aafb5b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f3aafb740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f3aafb8c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f3aafba50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f3aafbbd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f3aafbd60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f3aafa020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f3aafa1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3aafa330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f3aafa6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f3aafa840"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f3aafa9c8"/>
        <function-ref name="tx" scoped="" ref="0x7f5f3aafab50"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f3aafacd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f3aafae60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f3aaf9020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f3aaf91a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f3aaf9330"/>
        <function-ref name="rx" scoped="" ref="0x7f5f3aaf94b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f3aaf9640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f3aaf97c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f3aaf9950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f3aaf9ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f3aaf9c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5f3aabf558" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5f3aabf558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aabf8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aabfa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3aabfbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aabfd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aabe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3aabe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aabe330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aabe4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3aabe640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3aabe7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aabe950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3aabead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3aabec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3aabd020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aabd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5f3aaf0758" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5f3aaf0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3aaf0aa8"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3aaf0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f5f3aabd558" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f5f3aabd558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aabd8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aabda30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3aabdbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aabdd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aabc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3aabc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aabc330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aabc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3aabc640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3aabc7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aabc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3aabcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3aabcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3aabb020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aabb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f5f3aabb558" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f5f3aabb558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aabb8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aabba30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3aabbbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aabbd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aab9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3aab91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aab9330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aab94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3aab9640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3aab97c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aab9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3aab9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3aab9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3aab8020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aab81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f5f3aaf7de8" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5f3aaf7de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f3aaf4170"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f3aaf42f8"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f3aaf4480"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f3aaf4608"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f3aaf4790"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f3aaf4918"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f3aaf4aa0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f3aaf4c28"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f3aaf4db0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f3aaf3020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f3aaf31a8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f3aaf3330"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f3aaf34b8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f3aaf3740"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f3aaf38c8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f3aaf3a50"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f3aaf3bd8"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f3aaf3d60"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f3aaf2020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f3aaf21a8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f3aaf2330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f3aaf24b8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f3aaf2640"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f3aaf27c8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3aaf2950"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f3aaf2cd8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f3aaf2e60"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f3aaf1020"/>
        <function-ref name="tx" scoped="" ref="0x7f5f3aaf11a8"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f3aaf1330"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f3aaf14b8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f3aaf1640"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f3aaf17c8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f3aaf1950"/>
        <function-ref name="rx" scoped="" ref="0x7f5f3aaf1ad8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f3aaf1c60"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f3aaf1de8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f3aaf0020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f3aaf01a8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f3aaf0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f5f3aac8a48" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f5f3aac8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5f3aac8d98"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5f3aaee020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5f3aaee1a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5f3aaee330"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5f3aaee4b8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5f3aaee640"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5f3aaee7c8"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5f3aaee950"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3aaeead8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5f3aaeec60"/>
        <function-ref name="getData" scoped="" ref="0x7f5f3aaeede8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5f3aaed020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5f3aaed1a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5f3aaed430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5f3aaed5b8"/>
        <function-ref name="getIV" scoped="" ref="0x7f5f3aaed740"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5f3aaed8c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5f3aaeda50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5f3aaedbd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5f3aaedd60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5f3aac7020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5f3aac71a8"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5f3aac7330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5f3aac74b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5f3aac7640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5f3aac79c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5f3aac7b50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5f3aac7cd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5f3aac7e60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5f3aac6020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5f3aac61a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5f3aac6330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5f3aac64b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5f3aac6640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5f3aac67c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5f3aac6950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5f3aac6ad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5f3aac6c60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5f3aac6de8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5f3aac5020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5f3aac51a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5f3aac5330"/>
        <function-ref name="setData" scoped="" ref="0x7f5f3aac54b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5f3aac5640"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5f3aac57c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5f3aac5950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5f3aac5ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5f3aac5c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5f3aac5de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5f3aac4420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5f3aac45a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5f3aac4730"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5f3aac48b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5f3aac4a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5f3aac4bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5f3aac4d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5f3aac3020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5f3aac31a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5f3aac3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f5f3aac1658" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f5f3aac1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aac19a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aac1b30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3aac1cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aac1e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aac0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3aac01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aac0330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aac04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3aac0640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3aac07c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aac0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3aac0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3aac0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3aabf020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aabf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5f3aaef0e8" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5f3aaef0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3aaef438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5f3aac36e0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5f3aac36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3aac3a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3aac3bb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3aac3d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3aac2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3aac21a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3aac2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3aac24b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3aac2640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3aac27c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3aac2950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3aac2ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3aac2c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3aac2de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3aac1120"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3aac12a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f39be58c8" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39be58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f39be5c18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f39be5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f5f39bdd780" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5f39bdd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f39bddad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5f39bd58c8" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f39bd58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f39bd5c18"/>
        <function-ref name="configure" scoped="" ref="0x7f5f39bd5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f5f39bddd58" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5f39bddd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5f39bdb0d8"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5f39bdb260"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5f39bdb3e8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5f39bdb570"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5f39bdb6f8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5f39bdb880"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5f39bdba08"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5f39bdbb90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f39bdbd18"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5f39bda020"/>
        <function-ref name="getData" scoped="" ref="0x7f5f39bda1a8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5f39bda330"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5f39bda4b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5f39bda740"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5f39bda8c8"/>
        <function-ref name="getIV" scoped="" ref="0x7f5f39bdaa50"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5f39bdabd8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5f39bdad60"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5f39bd9020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5f39bd91a8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5f39bd9330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5f39bd94b8"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5f39bd9640"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5f39bd97c8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5f39bd9950"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5f39bd9cd8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5f39bd9e60"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5f39bd8020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5f39bd81a8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5f39bd8330"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5f39bd84b8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5f39bd8640"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5f39bd87c8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5f39bd8950"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5f39bd8ad8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5f39bd8c60"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5f39bd8de8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5f39bd7020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5f39bd71a8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5f39bd7330"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5f39bd74b8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5f39bd7640"/>
        <function-ref name="setData" scoped="" ref="0x7f5f39bd77c8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5f39bd7950"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5f39bd7ad8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5f39bd7c60"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5f39bd7de8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5f39bd6020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5f39bd61a8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5f39bd6730"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5f39bd68b8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5f39bd6a40"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5f39bd6bc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5f39bd6d50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5f39bd5020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5f39bd51a8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5f39bd5330"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5f39bd54b8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5f39bd5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5f39bdd020" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5f39bdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f39bdd370"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f39bdd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f39be6b38" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f39be6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f39be5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f39be51a8"/>
        <function-ref name="request" scoped="" ref="0x7f5f39be5330"/>
        <function-ref name="granted" scoped="" ref="0x7f5f39be54b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f39be5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5f39be47c0" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5f39be47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f39be4b10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f39be4c98"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f39be4e20"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f39be3020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f39be31a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f39be3330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f39be34b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f39be3640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f39be37c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f39be3950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f39be3ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f39be3c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f39be3de8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f39be2120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f39be22a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f39be2430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f39be25b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f39be2740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f39be28c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f39be2a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f39be2bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f39be2d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f39bdf020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f39bdf1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f39bdf330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f39bdf6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f39bdf840"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f39bdf9c8"/>
        <function-ref name="tx" scoped="" ref="0x7f5f39bdfb50"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f39bdfcd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f39bdfe60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f39bde020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f39bde1a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f39bde330"/>
        <function-ref name="rx" scoped="" ref="0x7f5f39bde4b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f39bde640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f39bde7c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f39bde950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f39bdead8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f39bdec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5f39be4060" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f39be4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f39be43b0"/>
        <function-ref name="userId" scoped="" ref="0x7f5f39be4538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f3aa1e020" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3aa1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f3aa1e370"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3aa1e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5f3aa1d570" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3aa1d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3aa1d8c0"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3aa1da48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5f3aa22270" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5f3aa22270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3aa225c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3aa22748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3aa21ce8" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3aa21ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3aa200a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3aa20228"/>
        <function-ref name="request" scoped="" ref="0x7f5f3aa203b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3aa20538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3aa206c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5f3aa211c8" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5f3aa211c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3aa21518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5f3aa1e7f0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa1e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f3aa1eb40"/>
        <function-ref name="userId" scoped="" ref="0x7f5f3aa1ecc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5f3aa1aa48" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa1aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f3aa1ad98"/>
        <function-ref name="userId" scoped="" ref="0x7f5f3aa19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5f3aa1cb70" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5f3aa1cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3aa1b020"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3aa1b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f5f3aa1a470" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5f3aa1a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3aa1a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5f3aa1b590" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5f3aa1b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3aa1b900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f5f3aa1bbc8" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f5f3aa1bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5f3aa1a020"/>
        <function-ref name="txDone" scoped="" ref="0x7f5f3aa1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f3aa15388" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f3aa15388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f3aa156f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3aa15880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5f3aa13020" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f3aa13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f3aa13390"/>
        <function-ref name="configure" scoped="" ref="0x7f5f3aa13518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5f3aa15ac8" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f3aa15ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3aa15e18"/>
        <function-ref name="requested" scoped="" ref="0x7f5f3aa14020"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3aa141a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3aa14330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f3aa144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3aa16558" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3aa16558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3aa168c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3aa16a50"/>
        <function-ref name="request" scoped="" ref="0x7f5f3aa16bd8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3aa16d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3aa15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5f3aa14700" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f3aa14700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f3aa14a50"/>
        <function-ref name="userId" scoped="" ref="0x7f5f3aa14bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f39b548e0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f39b548e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f39b54c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5f39b53020" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5f39b53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5f39b53370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5f39b534f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5f39b53680"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5f39b53808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5f39b51d58" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5f39b51d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5f39b4f0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f39b4f278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5f39b4e980" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5f39b4e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5f39b4ecf0"/>
        <function-ref name="configure" scoped="" ref="0x7f5f39b4ee78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5f39b4d130" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5f39b4d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5f39b4d480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5f39b4d608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5f39b4d790"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5f39b4d918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5f39b4f4c0" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5f39b4f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f39b4f810"/>
        <function-ref name="requested" scoped="" ref="0x7f5f39b4f998"/>
        <function-ref name="granted" scoped="" ref="0x7f5f39b4fb20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f39b4fca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5f39b4fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f39b4db60" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f39b4db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f39b4c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f39b4c1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f39b4c330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f39b4c4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f39b4c640"/>
        <function-ref name="get" scoped="" ref="0x7f5f39b4c7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f39b4c950"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f39b4b020"/>
        <function-ref name="set" scoped="" ref="0x7f5f39b4cc60"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f39b4cad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f39b4cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f39b51060" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f39b51060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f39b513d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f39b51558"/>
        <function-ref name="request" scoped="" ref="0x7f5f39b516e0"/>
        <function-ref name="granted" scoped="" ref="0x7f5f39b51868"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f39b519f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5f39b4e0e0" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5f39b4e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5f39b4e430"/>
        <function-ref name="userId" scoped="" ref="0x7f5f39b4e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5f39b4b2e8" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f5f39b4b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f39b4b638"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f39b4b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f5f3aa0db20" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5f3aa0db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5f3aa0de70"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5f3aa0a020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5f3aa0a1a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5f3aa0a330"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5f3aa0a4b8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5f3aa0a640"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5f3aa0a7c8"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5f3aa0a950"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3aa0aad8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5f3aa0ac60"/>
        <function-ref name="getData" scoped="" ref="0x7f5f3aa0ade8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5f3aa09020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5f3aa091a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5f3aa09430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5f3aa095b8"/>
        <function-ref name="getIV" scoped="" ref="0x7f5f3aa09740"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5f3aa098c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5f3aa09a50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5f3aa09bd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5f3aa09d60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5f3aa08020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5f3aa081a8"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5f3aa08330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5f3aa084b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5f3aa08640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5f3aa089c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5f3aa08b50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5f3aa08cd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5f3aa08e60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5f3aa07020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5f3aa071a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5f3aa07330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5f3aa074b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5f3aa07640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5f3aa077c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5f3aa07950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5f3aa07ad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5f3aa07c60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5f3aa07de8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5f3aa06020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5f3aa061a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5f3aa06330"/>
        <function-ref name="setData" scoped="" ref="0x7f5f3aa064b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5f3aa06640"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5f3aa067c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5f3aa06950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5f3aa06ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5f3aa06c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5f3aa06de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5f3aa05420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5f3aa055a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5f3aa05730"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5f3aa058b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5f3aa05a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5f3aa05bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5f3aa05d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5f3aa04020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5f3aa041a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5f3aa04330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f5f3a9f9020" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f5f3a9f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5f3a9f9370"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5f3a9f94f8"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5f3a9f9680"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5f3a9f9808"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5f3a9f9990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5f3a9f9b18"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5f3a9f9ca0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5f3a9f9e28"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5f3a9f8020"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5f3a9f81a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5f3a9f8330"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5f3a9f84b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5f3a9f8640"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5f3a9f88c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5f3a9f8a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5f3a9f8bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5f3a9f8d60"/>
        <function-ref name="isUart" scoped="" ref="0x7f5f3a9f7020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5f3a9f71a8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5f3a9f7330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5f3a9f74b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5f3a9f7640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5f3a9f77c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5f3a9f7950"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3a9f7ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5f3a9f7e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5f3a9f6020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5f3a9f61a8"/>
        <function-ref name="tx" scoped="" ref="0x7f5f3a9f6330"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5f3a9f64b8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5f3a9f6640"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5f3a9f67c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5f3a9f6950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5f3a9f6ad8"/>
        <function-ref name="rx" scoped="" ref="0x7f5f3a9f6c60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5f3a9f6de8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5f3a9f5020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5f3a9f51a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5f3a9f5330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5f3a9f54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5f3a9f37e0" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5f3a9f37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a9f3b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a9f3cb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3a9f3e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a9f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a9f21a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3a9f2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a9f24b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a9f2640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3a9f27c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3a9f2950"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a9f2ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3a9f2c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3a9f2de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3a9f1120"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a9f12a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f5f3aa01348" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f5f3aa01348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5f3aa01698"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5f3aa01820"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5f3aa019a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5f3aa01b30"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5f3aa01cb8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5f3aa01e40"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5f3a9ff020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5f3a9ff1a8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3a9ff330"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5f3a9ff4b8"/>
        <function-ref name="getData" scoped="" ref="0x7f5f3a9ff640"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5f3a9ff7c8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5f3a9ff950"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5f3a9ffbd8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5f3a9ffd60"/>
        <function-ref name="getIV" scoped="" ref="0x7f5f3a9fe020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5f3a9fe1a8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5f3a9fe330"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5f3a9fe4b8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5f3a9fe640"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5f3a9fe7c8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5f3a9fe950"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5f3a9fead8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5f3a9fec60"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5f3a9fede8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5f3a9fd220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5f3a9fd3a8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5f3a9fd530"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5f3a9fd6b8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5f3a9fd840"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5f3a9fd9c8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5f3a9fdb50"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5f3a9fdcd8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5f3a9fde60"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5f3a9fc020"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5f3a9fc1a8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5f3a9fc330"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5f3a9fc4b8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5f3a9fc640"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5f3a9fc7c8"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5f3a9fc950"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5f3a9fcad8"/>
        <function-ref name="setData" scoped="" ref="0x7f5f3a9fcc60"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5f3a9fcde8"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5f3a9fb020"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5f3a9fb1a8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5f3a9fb330"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5f3a9fb4b8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5f3a9fb640"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5f3a9fbbc8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5f3a9fbd50"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5f3a9fa020"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5f3a9fa1a8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5f3a9fa330"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5f3a9fa4b8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5f3a9fa640"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5f3a9fa7c8"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5f3a9fa950"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5f3a9faad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5f3a9f5868" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5f3a9f5868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a9f5bb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a9f5d40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3a9f4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a9f41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a9f4330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3a9f44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a9f4640"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a9f47c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3a9f4950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3a9f4ad8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a9f4c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3a9f4de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3a9f3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3a9f32a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a9f3430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5f3a8eca88" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a8eca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ea020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5f3a8f5100" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a8f5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f5450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5f3a8efa88" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a8efa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8efdd8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5f3a8e9470" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a8e9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e97c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5f3a8e2c10" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a8e2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e1020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5f3a8e9c10" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a8e9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e8020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5f3a8d52e8" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a8d52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8d5638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5f3a8d82e8" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5f3a8d82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8d8638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5f3a8f43a0" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a8f43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5f3a8dd470" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5f3a8dd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8dd7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8dd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5f3a8d92e8" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a8d92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8d9638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5f3a8eea88" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5f3a8eea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8eedd8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5f3a8eda88" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a8eda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8eddd8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5f3a8e3470" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a8e3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e37c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5f3a8e6c10" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5f3a8e6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e5020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5f3a8e8470" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a8e8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e87c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5f3a8f7a90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a8f7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5f3a8f7de0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5f3a8f6020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5f3a8f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5f3a8f3c50" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a8f3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5f3a8f22e8" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5f3a8f22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f2738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5f3a8dca38" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a8dca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8dcd88"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5f3a8f2a00" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a8f2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5f3a8d9a88" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a8d9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8d9dd8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5f3a8f3020" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a8f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5f3a8dfc10" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a8dfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8dd020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5f3a8ed2e8" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a8ed2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ed638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ed7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5f3a8ee2e8" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a8ee2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ee638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ee7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5f3a8f6a88" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a8f6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5f3a8e0c10" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a8e0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8df020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5f3a8e1470" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a8e1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e17c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5f3a8df470" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a8df470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8df7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8df948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5f3a8d7a88" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a8d7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8d7dd8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5f3a8d8a88" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5f3a8d8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8d8dd8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5f3a8e5470" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5f3a8e5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e57c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5f3a8e1c10" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a8e1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e0020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5f3a8daa88" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a8daa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8dadd8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5f3a8e7470" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a8e7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e77c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5f3a8d5a88" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a8d5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a8d5dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a8d4020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d41a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a8d4330"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a8d44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5f3a8f6470" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5f3a8f6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5f3a8ef2e8" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5f3a8ef2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ef638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ef7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5f3a8ec2e8" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a8ec2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ec638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ec7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5f3a8e3c10" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a8e3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e2020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5f3a8e8c10" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a8e8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e7020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5f3a8e2470" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a8e2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e27c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5f3a8ea470" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a8ea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ea7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ea948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5f3a8f5718" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5f3a8f5718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f5a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5f3a8eac10" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a8eac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e9020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3a8f9e60" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3a8f9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a8f71e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a8f7370"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a8f74f8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a8f7680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a8f7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5f3a8f0060" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a8f0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5f3a8f0c90" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5f3a8f0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5f3a8da2e8" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5f3a8da2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8da638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8da7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5f3a8dba88" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a8dba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8dbdd8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5f3a8f3638" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a8f3638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5f3a8db2e8" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a8db2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8db638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8db7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5f3a8d72e8" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5f3a8d72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8d7638"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5f3a8e5c10" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a8e5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e3020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5f3a8e0470" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a8e0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e07c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5f3a8f5d30" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5f3a8f5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f40d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5f3a8f49b8" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a8f49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5f3a8e7c10" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a8e7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e6020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5f3a8f0678" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5f3a8f0678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8f09c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5f3a8e6470" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a8e6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8e67c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8e6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5f3a8ddc10" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a8ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8dc5e8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8dc770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5f3a8d4780" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a8d4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a8d4ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a8d4c58"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8d4de0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a8d3020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a8d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5f3a8bf470" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a8bf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8bf9c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8bfb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5f3a8ca900" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a8ca900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8cac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5f3a8c2470" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a8c2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8c27c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8c2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5f3a8bed98" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a8bed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8bd170"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8bd2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5f3a8b6470" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a8b6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b67c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5f3a8bd5c0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a8bd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8bd910"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8bda98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5f3a8aa7c0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a8aa7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8aab10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8aac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5f3a8ac7c0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5f3a8ac7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8acb10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8acc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5f3a8c9c50" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a8c9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5f3a8b2c10" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5f3a8b2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b1020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5f3a8ad7c0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a8ad7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8adb10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8adc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5f3a8c1470" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5f3a8c1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8c17c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8c1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5f3a8c0470" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a8c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8c07c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8c0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5f3a8b8c10" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a8b8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b7020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5f3a8b9470" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5f3a8b9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b97c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5f3a8bdd60" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a8bdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8bb0d8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8bb260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5f3a8cb2a8" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a8cb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5f3a8cb5f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5f3a8cb780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5f3a8cb908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5f3a8c6638" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a8c6638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c6988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5f3a8c6c50" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5f3a8c6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c50d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5f3a8b0060" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a8b0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b03b0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b0538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5f3a8c53a0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a8c53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5f3a8ac020" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a8ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ac370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5f3a8c7900" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a8c7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5f3a8b2470" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a8b2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b27c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5f3a8c1c10" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a8c1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8c0020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5f3a8c2c10" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a8c2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8c1020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5f3a8ca2e8" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a8ca2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8ca638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5f3a8b3470" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a8b3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b37c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5f3a8b6c10" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a8b6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b4020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5f3a8b3c10" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a8b3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b2020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5f3a8aa020" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a8aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8aa370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8aa4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5f3a8ab020" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5f3a8ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ab370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ab4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5f3a8b9c10" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5f3a8b9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b8020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5f3a8b4470" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a8b4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b47c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5f3a8ad020" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a8ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ad370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5f3a8bbcc8" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a8bbcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ba0a0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ba228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5f3a8a9020" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a8a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a8a9370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a8a94f8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8a9680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a8a9808"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a8a9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5f3a8cbbd0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5f3a8cbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5f3a8c4c50" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5f3a8c4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8c2020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5f3a8c0c10" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a8c0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8bf020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5f3a8b7470" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a8b7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b77c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5f3a8bb528" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a8bb528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8bb878"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8bba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5f3a8b7c10" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a8b7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b6020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5f3a8bfe10" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a8bfe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8be1a8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5f3a8c9020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5f3a8c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5f3a8be5f8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a8be5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8be948"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8bead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3a8cc558" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3a8cc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a8cc8a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a8cca30"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a8ccbb8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a8ccd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a8cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5f3a8c59b8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a8c59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5f3a8c4638" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5f3a8c4638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c4988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5f3a8af7c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5f3a8af7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8afb10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8afc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5f3a8af020" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a8af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8af370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8af4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5f3a8c6020" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a8c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5f3a8b0800" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a8b0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b0b50"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b0cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5f3a8ab7c0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5f3a8ab7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8abb10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8abc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5f3a8b8470" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a8b8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b87c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5f3a8b4c10" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a8b4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b3020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5f3a8c9638" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5f3a8c9638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c9988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5f3a8c72e8" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a8c72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c7638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5f3a8ba4f0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a8ba4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8ba840"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8ba9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5f3a8c4020" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5f3a8c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a8c4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5f3a8bac90" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a8bac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b9020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5f3a8b1470" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a8b1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a8b1bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8b1d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5f3a8a9c58" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a8a9c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a8a8020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a8a81a8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8a8330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a8a84b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a8a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f5f3a89f690" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5f3a89f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5f3a89f9e0"/>
        <function-ref name="changed" scoped="" ref="0x7f5f3a89fb68"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5f3a89fcf0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5f3a89fe78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f5f3a8a1cc0" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5f3a8a1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5f3a88a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f5f3a886190" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5f3a886190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5f3a8864e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f5f3a883608" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f5f3a883608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a883958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f5f3a889ab8" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f5f3a889ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a889e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f5f3a86c360" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f5f3a86c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a86c6b0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a86c838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f5f3a86cba8" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f5f3a86cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3a870020"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a8701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f5f3a872a58" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f5f3a872a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a872da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f5f3a875b88" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f5f3a875b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a85d020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a85d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f5f3a85d530" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f5f3a85d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a85d880"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a85da08"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a85db90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a85dd18"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a85c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a85c1a8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a85c330"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a85c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f5f3a854748" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f5f3a854748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5f3b74e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5f3a857578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f5f3a859108" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f5f3a859108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a859458"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a8595e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f5f3a859968" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f5f3a859968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a859cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a859e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a858020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a8581a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a858330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a8584b8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a858640"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a8587c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f5f3a85bb60" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f5f3a85bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5f3b74e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5f3a8348f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f5f3a832bc8" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f5f3a832bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5f3b74e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5f3a824948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5f3a823020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3a823020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5f3b74e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a823d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3a8216b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3a821230"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3a821b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f5f3a81d3a8" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f5f3a81d3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5f3b74e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a81c130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3a81ca40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3a81c5b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3a81b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5f3a817928" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5f3a817928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3a817c78"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5f3a817e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5f3a816020"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a8161a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5f3a816330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3a8164b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f5f3a816640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3a8167c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3a816950"/>
        <function-ref name="setMode" scoped="" ref="0x7f5f3a816ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5f3a816c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5f3a819980" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3a819980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5f3b74e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a818730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3a817088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3a818bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3a817510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f5f3a85e360" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f5f3a85e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a85e6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a85e838"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a85e9c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a85eb48"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a85ecd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a85ee58"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a812020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a8121a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5f3a80f5f8" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5f3a80f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a80f948"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a80fad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5f3a80fc58"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a80fde0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a80e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5f3a80e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a80e330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a80e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5f3a80e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5f3a80e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a80e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5f3a80ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5f3a80ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5f3a80d020"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a80d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5f3a8114e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5f3a8114e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a811830"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a8119b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a811b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a811cc8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a811e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a80f020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a80f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a80f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5f3a809020" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5f3a809020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3a809370"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a8094f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5f3a7fb140" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3a7fb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5f3a7fb490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5f3a7fb618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5f3a7fb7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5f3a7fb928"/>
        <function-ref name="setCca" scoped="" ref="0x7f5f3a7fbab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5f3a7fbc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f5f3a7faca8" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5f3a7faca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5f3a7f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f5f3a7fc480" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5f3a7fc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a7fc7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a7fc958"/>
        <function-ref name="modify" scoped="" ref="0x7f5f3a7fcae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a7fcc68"/>
        <function-ref name="resend" scoped="" ref="0x7f5f3a7fcdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5f3a7ffc40" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5f3a7ffc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3a7fc020"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a7fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f5f3a7f93d8" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f5f3a7f93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5f3a7f9728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5f3a7f24b0" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3a7f24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5f3a7f2800"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5f3a7f2988"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5f3a7f2b10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5f3a7f2c98"/>
        <function-ref name="setCca" scoped="" ref="0x7f5f3a7f2e20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5f3a7f1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5f3a7ea150" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5f3a7ea150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3a7e9700"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3a7e9de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3a7e9020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a7e74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f5f3a7d5c58" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a7d5c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7d4020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f5f3a7d4500" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5f3a7d4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7d4850"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7d49d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f5f3a7f1428" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5f3a7f1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5f3a7f1778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f5f3a7d73c0" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a7d73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a7d7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f5f3a7e6ba8" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f5f3a7e6ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5f3a7e5020"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3a7e51a8"/>
        <function-ref name="captured" scoped="" ref="0x7f5f3a7e5330"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5f3a7e54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f5f3a7f0648" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f5f3a7f0648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3a7eecc0"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3a7efd50"/>
        <function-ref name="startAt" scoped="" ref="0x7f5f3a7ee6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3a7ee230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5f3a7ec190"/>
        <function-ref name="start" scoped="" ref="0x7f5f3a7ef3f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a7ef8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5f3a7ec628" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a7ec628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3a7ec978"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3a7ecb00"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3a7ecc88"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3a7ece10"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3a7eb020"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3a7eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f5f3a7d93b0" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a7d93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7d9700"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7d9888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f5f3a7d9c20" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a7d9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7d8020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f5f3a7cb5f0" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5f3a7cb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a7cb940"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5f3a7cbac8"/>
        <function-ref name="sfd" scoped="" ref="0x7f5f3a7cbc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3a7f46b8" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a7f46b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a7f4a08"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a7f4b90"/>
        <function-ref name="modify" scoped="" ref="0x7f5f3a7f4d18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a7f2020"/>
        <function-ref name="resend" scoped="" ref="0x7f5f3a7f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f5f3a7dbb28" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a7dbb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5f3a7dbe78"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5f3a7da030"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5f3a7da1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f5f3a7d7ab0" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a7d7ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a7d7e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5f3a7dfb10" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5f3a7dfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a7dfe60"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a7dd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a7dd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a7dd330"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a7dd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a7dd640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a7dd7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a7dd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3a7f57d0" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3a7f57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a7f5b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5f3a7eb4d8" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a7eb4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a7eb828"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3a7eb9b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3a7ebb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f5f3a7e6020" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5f3a7e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a7e6370"/>
        <function-ref name="isSet" scoped="" ref="0x7f5f3a7e64f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a7e6680"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a7e6808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f5f3a7d61e8" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a7d61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7d6738"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7d68c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5f3a7dce68" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5f3a7dce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a7db1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a7db370"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a7db4f8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a7db680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a7db808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f5f3a7e5800" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f5f3a7e5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a7e5c50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a7e5dd8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a7df020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a7df1a8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a7df330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a7df4b8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a7df640"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a7df7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f5f3a7d4d30" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5f3a7d4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7d10d8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7d1260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f5f3a7d15d0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a7d15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7d1920"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7d1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f5f3a7d8520" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5f3a7d8520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a7d8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f5f3a7ddc98" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f5f3a7ddc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a7dc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a7dc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a7dc330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a7dc4b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a7dc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a7dc7c8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a7dc950"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a7dcad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3a7cf020" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3a7cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3a7cf370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3a7cf4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3a7cf680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3a7cf808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3a7cf990"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a7cfb18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3a7cfca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3a7ce330"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a7cfe28"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3a7ce020"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3a7ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f5f3a7d53d0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a7d53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7d5720"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7d58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5f3a7f5e10" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5f3a7f5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3a7f41a8"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a7f4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f5f3a7da528" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a7da528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a7da878"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a7daa00"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7dab88"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a7dad10"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a7d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f5f3a7d8bf0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5f3a7d8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a7d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f5f3a7d6c48" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5f3a7d6c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a7d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f5f3a7f1b70" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f5f3a7f1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5f3a7f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5f3a736470" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a736470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7369c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a736b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5f3a7419b8" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a7419b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a741d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5f3a73a470" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a73a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a73a7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a73a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5f3a735d98" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a735d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a734170"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7342f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5f3a72d470" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a72d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5f3a7345c0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a7345c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a734910"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a734a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5f3a7217c0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a7217c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a721b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a721c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5f3a7237c0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5f3a7237c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a723b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a723c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5f3a740c50" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a740c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5f3a729c10" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5f3a729c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a728020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5f3a7257c0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a7257c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a725b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a725c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5f3a738470" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5f3a738470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7387c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a738948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5f3a737470" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a737470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7377c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a737948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5f3a72fc10" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a72fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72e020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5f3a730470" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5f3a730470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7307c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a730948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5f3a734d60" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a734d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7330d8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a733260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5f3a742430" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a742430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5f3a742780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5f3a742908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5f3a742a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5f3a73d638" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a73d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5f3a73dc50" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5f3a73dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5f3a727060" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a727060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7273b0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a727538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5f3a73c3a0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a73c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5f3a723020" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a723020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a723370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7234f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5f3a73e900" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a73e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5f3a729470" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a729470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7297c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a729948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5f3a738c10" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a738c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a737020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5f3a73ac10" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a73ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a738020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5f3a7413a0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a7413a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a7416f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5f3a72a470" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a72a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72a7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5f3a72dc10" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a72dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72b020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5f3a72ac10" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a72ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a729020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5f3a721020" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a721020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a721370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7214f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5f3a722020" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5f3a722020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a722370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7224f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5f3a730c10" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5f3a730c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72f020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5f3a72b470" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a72b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5f3a725020" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a725020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a725370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7254f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5f3a733cc8" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a733cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7310a0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a731228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5f3a720020" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a720020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a720370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a7204f8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a720680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a720808"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a720990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5f3a742d58" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5f3a742d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a7410d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5f3a73bc50" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5f3a73bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a73a020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a73a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5f3a737c10" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a737c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a736020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5f3a72e470" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a72e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5f3a733528" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a733528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a733878"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a733a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5f3a72ec10" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a72ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72d020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5f3a736e10" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a736e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a7351a8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a735330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5f3a740020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5f3a740020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a740370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5f3a7355f8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a7355f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a735948"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a735ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3a7437d0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3a7437d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a743b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a743ca8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a743e30"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a742020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a7421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5f3a73c9b8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a73c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5f3a73b638" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5f3a73b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5f3a7267c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5f3a7267c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a726b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a726c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5f3a726020" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a726020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a726370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7264f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5f3a73d020" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a73d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5f3a727800" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a727800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a727b50"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a727cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5f3a7227c0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5f3a7227c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a722b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a722c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5f3a72f470" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a72f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5f3a72bc10" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a72bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a72a020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a72a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5f3a740638" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5f3a740638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a740988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5f3a73e2e8" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a73e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5f3a7314f0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a7314f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a731840"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7319c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5f3a73b020" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5f3a73b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a73b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5f3a731c90" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a731c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a730020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a7301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5f3a728470" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a728470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a728bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a728d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5f3a720c58" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a720c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a71f020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a71f1a8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a71f330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a71f4b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a71f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f5f3a712808" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5f3a712808"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a712b58"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5f3a712ce0"/>
        <function-ref name="sfd" scoped="" ref="0x7f5f3a712e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3a711168" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3a711168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a7114b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f5f3a7118c0" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f5f3a7118c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5f3a711c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5f3a712020" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5f3a712020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3a712370"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a7124f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f5f3a708688" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f5f3a708688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a7089d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a708b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a708ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a708e70"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a707020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a7071a8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a707330"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a7074b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f5f3a701af0" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3a701af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5f3a701e40"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5f3a700020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5f3a7001a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5f3a700330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5f3a7004b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5f3a700640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5f3a7007c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5f3a700950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5f3a700ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5f3a700c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5f3a700de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5f3a6ff020"/>
        <function-ref name="sync" scoped="" ref="0x7f5f3a6ff1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5f3a6ff430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5f3a6ff5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f5f3a6ebe38" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f5f3a6ebe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3a6e91c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3a6e9348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5f3a6ffb80" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5f3a6ffb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3a6fc020"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3a6fc700"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3a6fe8f8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a6fcde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f5f3a707818" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f5f3a707818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a707b68"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a707cf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a707e78"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a706030"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a7061b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a706340"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a7064c8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a706650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f5f3a6fa6a8" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a6fa6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a6fa9f8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6fab80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f5f3a6f9020" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5f3a6f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a6f9370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6f94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f5f3a6f7108" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a6f7108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a6f7458"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6f75e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5f3a702328" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a702328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3a702678"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3a702800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3a702988"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3a702b10"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3a702c98"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3a702e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f5f3a70bc48" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5f3a70bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a70a020"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5f3a70a1a8"/>
        <function-ref name="sfd" scoped="" ref="0x7f5f3a70a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f5f3a703398" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5f3a703398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a7036e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5f3a709420" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5f3a709420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5f3a709770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5f3a7098f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f5f3a709a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5f3a709c08"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a709d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5f3a708020"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a7081a8"/>
        <function-ref name="clr" scoped="" ref="0x7f5f3a708330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f5f3a6f7970" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a6f7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a6f7cc0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6f7e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3a70fde8" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3a70fde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a70b170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5f3a701188" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a701188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a7014d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3a701660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3a7017e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3a70a600" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3a70a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a70a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5f3a7056c0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5f3a7056c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a705a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a705b98"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a705d20"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a704020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a7041a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f5f3a6f9850" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5f3a6f9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a6f9ba0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6f9d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f5f3a704518" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a704518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a704868"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a7049f0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a704b78"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a704d00"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a703020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f5f3a6f6210" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5f3a6f6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a6f6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f5f3a70ad58" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f5f3a70ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5f3a7090d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3a6f6a18" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3a6f6a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3a6f6d68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3a6f5020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3a6f51a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3a6f5330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3a6f54b8"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a6f5640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3a6f57c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3a6f5de8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a6f5950"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3a6f5ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3a6f5c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f5f3a6fbdc8" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a6fbdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a6fa170"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6fa2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f5f3a6fb6c8" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a6fb6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a6fba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f5f3a706a30" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5f3a706a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5f3a706d80"/>
        <function-ref name="disable" scoped="" ref="0x7f5f3a705020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5f3a7051a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5f3a705330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f5f3a703a88" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a703a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a702020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5f3a70b460" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5f3a70b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5f3a70b7b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a70b938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5f3a68d6b0" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3a68d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5f3a68da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5f3a691498" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a691498"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3a6917e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3a691970"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3a691af8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3a691c80"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3a691e08"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3a68e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5f3a68c130" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3a68c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3a68b588"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3a68bc68"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3a68ce80"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a689380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f5f3a68ed08" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a68ed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a68d0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3a68d228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3a68d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5f3a685ac8" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5f3a685ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a685e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f5f3a684020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a6841a8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a684330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5f3a688020" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5f3a688020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3a686478"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3a686b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3a688d70"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a685278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5f3a68e3b8" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5f3a68e3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3a68e708"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3a68e890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3a68ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5f3a67f630" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5f3a67f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5f3a67f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5f3a6812e8" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a6812e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3a681638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3a6817c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3a681948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3a681ad0"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3a681c58"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3a681de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5f3a676618" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3a676618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3a676968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3a676af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a676c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a676e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3a675020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5f3a67d060" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5f3a67d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3a67c4b8"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3a67cb98"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3a67ddb0"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a67b2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f5f3a680b60" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a680b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a67f020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3a67f1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3a67f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5f3a677ac8" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5f3a677ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a677e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f5f3a676020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a6761a8"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a676330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f5f3a675520" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f5f3a675520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a6730f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f5f3a673788" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5f3a673788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a6723a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5f3a679020" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5f3a679020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5f3a678478"/>
        <function-ref name="clear" scoped="" ref="0x7f5f3a678b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f5f3a679d70"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a677278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5f3a680210" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5f3a680210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3a680560"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3a6806e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3a680870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5f3a626528" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5f3a626528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a6240f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5f3a624720" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5f3a624720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b74f430"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5f3b74f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5f3a623578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5f3a622020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5f3a623a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f5f3a6224a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5f3a620730" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5f3a620730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5f3b754bb8"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5f3b74f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5f3a61ca18"/>
        <function-ref name="fired" scoped="" ref="0x7f5f3a61d158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5f3a61de48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5f3a61d9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f5f3a61b2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f5f3a61ce68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5f3a61d5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5f3a61f370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5f3a61c448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5f3a61f810"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a61fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5f3a60bc90" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5f3a60bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60a3e8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5f3a6152e8" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5f3a6152e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a615638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5f3a60fdd8" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5f3a60fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60e170"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5f3a6097c0" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5f3a6097c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a609b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a609c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5f3a601020" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5f3a601020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a601370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6014f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5f3a608020" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5f3a608020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a608370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6084f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5f3a5f5470" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5f3a5f5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5f57c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5f3a5f8470" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5f3a5f8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5f87c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5f3a614638" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5f3a614638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a614988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5f3a5fd7c0" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5f3a5fd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5fdb10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5fdc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5f3a5f9470" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5f3a5f9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5f97c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5f3a60ed60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5f3a60ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60d0d8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60d260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5f3a60dcc8" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5f3a60dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60b228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5f3a6037c0" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5f3a6037c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a603b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a603c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5f3a605020" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5f3a605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a605370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6054f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5f3a6087c0" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5f3a6087c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a608b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a608c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5f3a617cd8" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5f3a617cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5f3a6160a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5f3a616228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5f3a6163b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5f3a612020" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5f3a612020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a612370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5f3a612638" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5f3a612638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a612a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5f3a5fcbc0" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5f3a5fcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5fb020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5fb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5f3a612d50" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5f3a612d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a6100d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5f3a5f9c10" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5f3a5f9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5f8020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5f3a6132e8" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5f3a6132e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a613638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5f3a5fd020" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5f3a5fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5fd370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5fd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5f3a60d528" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5f3a60d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60d878"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5f3a60e5c0" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5f3a60e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60e910"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5f3a616c90" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5f3a616c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a615020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5f3a5ff020" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5f3a5ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5ff370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5ff4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5f3a6017c0" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5f3a6017c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a601b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a601c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5f3a5ff7c0" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5f3a5ff7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5ffb10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5ffc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5f3a5f6c10" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5f3a5f6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5f5020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5f3a5f8c10" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5f3a5f8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5f6020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5f3a6057c0" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5f3a6057c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a605b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a605c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5f3a600020" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5f3a600020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a600370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6004f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5f3a5fac10" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5f3a5fac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5f9020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5f3a6077c0" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5f3a6077c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a607b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a607c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5f3a5f5c10" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5f3a5f5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a5f4020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a5f41a8"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f4330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a5f44b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a5f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5f3a616678" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5f3a616678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a6169c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5f3a60f638" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5f3a60f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60f988"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5f3a60b4f0" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5f3a60b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60b840"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5f3a602020" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5f3a602020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a602370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6024f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5f3a607020" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5f3a607020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a607370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6074f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5f3a6027c0" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5f3a6027c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a602b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a602c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5f3a60a838" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5f3a60a838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a60ab88"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a60ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5f3a615900" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5f3a615900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a615c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5f3a609020" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5f3a609020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a609370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6094f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3a6170e0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3a6170e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a617430"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a6175b8"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a617740"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a6178c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a617a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5f3a6103a0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5f3a6103a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a6106f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5f3a60f020" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5f3a60f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a60f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5f3a5fa470" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5f3a5fa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5fa7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5fa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5f3a5fbc10" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5f3a5fbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5fa020"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5f3a613900" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5f3a613900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a613c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5f3a5fb470" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5f3a5fb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5fb7c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5fb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5f3a5f6470" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5f3a5f6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5f67c0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5f3a603020" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5f3a603020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a603370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6034f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5f3a6007c0" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5f3a6007c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a600b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a600c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5f3a614020" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5f3a614020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a614370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5f3a614c50" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5f3a614c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a613020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5f3a606020" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5f3a606020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a606370"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a6064f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5f3a6109b8" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5f3a6109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5f3a610d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5f3a6067c0" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5f3a6067c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a606b10"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a606c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5f3a5fc020" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5f3a5fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5f3a5fc770"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5fc8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5f3a5f4908" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5f3a5f4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5f3a5f4c58"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5f3a5f4de0"/>
        <function-ref name="write" scoped="" ref="0x7f5f3a5f3020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5f3a5f31a8"/>
        <function-ref name="readDone" scoped="" ref="0x7f5f3a5f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5f3a5cd690" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5f3a5cd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5f3a5cd9e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5f3a5cdb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5f3a5c7668" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f5f3a5c7668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a5cd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3a5d28b8" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3a5d28b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a5d2c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5f3a5c34c8" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5f3a5c34c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5f3a5c3818"/>
        <function-ref name="rand32" scoped="" ref="0x7f5f3a5c39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5f3a5c43a0" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f5f3a5c43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a5c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3a5ccb20" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3a5ccb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a5cce70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5f3a5c5bb0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5f3a5c5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3a5b6020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3a5b61a8"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3a5b6330"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3a5b64b8"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3a5b6640"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3a5b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5f3a5ad838" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5f3a5ad838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a5adb88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a5add10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a5ac020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a5ac1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a5ac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3a5b0a60" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a5b0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a5b0db0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a5ad020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a5ad1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a5ad330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a5ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5f3a5a8578" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5f3a5a8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a5a88c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a5a8a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a5a8bd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a5a8d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a5a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3a5a9298" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a5a9298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a5a95e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a5a9770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a5a98f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a5a9a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a5a9c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5f3a5a6080" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5f3a5a6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5f3a5a63d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5f3a5a6558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3a5a9e80" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3a5a9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a5a81f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5f3a5a6848" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a5a6848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a5a6b98"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3a5a6d20"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3a5a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f5f3a5a72a0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5f3a5a72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3a5a75f0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3a5a7778"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3a5a7900"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3a5a7a88"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3a5a7c10"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3a5a7d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5f3a5aa468" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5f3a5aa468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3a5aa7b8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3a5aa940"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3a5aaac8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3a5aac50"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3a5aadd8"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3a595020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5f3a590e50" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a590e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a58f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3a590080" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3a590080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a5903d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f5f3a590748" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5f3a590748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a590a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5f3a58a728" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a58a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a58aa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3a58a020" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3a58a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a58a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3a58c2b0" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3a58c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a58c600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5f3a58ad68" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a58ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a5890f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3a589278"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3a589400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f5f3a58c978" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5f3a58c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a58ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5f3a55d020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a55d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a55d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5f3a55d670" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5f3a55d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a55d9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a55db48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a55dcd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a55de58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a55c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3a561a40" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a561a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a561d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a560020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a5601a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a560330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a5604b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5f3a560db8" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5f3a560db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a55f170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a55f2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a55f480"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a55f608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a55f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3a560748" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3a560748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a560a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3a591e10" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3a591e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a5611a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a561330"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a5614b8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a561640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a5617c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5f3a55fae8" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5f3a55fae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a55fe38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5f3a55e1a8" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5f3a55e1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3a55e4f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3a55e680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a55e808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a55e990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3a55eb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5f3a553528" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5f3a553528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a553878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a553a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a553b88"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a553d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a552020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5f3a552358" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a552358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a5526a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f5f3a526ac0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f5f3a526ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3a526e10"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3a525020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5f3a552970" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a552970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3a552cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3a552e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3a551020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3a5511a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3a551330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3a5514b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5f3a555490" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5f3a555490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a5557e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a555968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a555af0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a555c78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a555e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5f3a5501c0" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5f3a5501c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5f3a550510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5f3a550698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5f3a550820"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5f3a5509a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5f3a5517a8" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a5517a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a551af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3a551c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3a551e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5f3a556dc8" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5f3a556dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a555170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5f3a558428" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5f3a558428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a558778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a558900"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a558a88"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a558c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a558d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5f3a556118" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5f3a556118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a556468"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a5565f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a556778"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a556900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a556a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5f3a554188" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5f3a554188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a5544d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5f3a554808" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5f3a554808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3a554b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3a554ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a554e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a553020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3a5531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5f3a507c28" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5f3a507c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5f3a506020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5f3a5062a8" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5f3a5062a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5f3a5065f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5f3a506780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5f3a506908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5f3a506a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5f3a4fbdc8" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5f3a4fbdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3a4fa170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3a4fa2f8"/>
        <function-ref name="start" scoped="" ref="0x7f5f3a4fa480"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a4fa608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5f3a4f9838" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5f3a4f9838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a4f9b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4f9d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a4f8020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a4f81a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a4f8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5f3a4f8668" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a4f8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a4f89b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3a4fc080" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a4fc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a4fc3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4fc558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a4fc6e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a4fc868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a4fc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5f3a4fb318" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3a4fb318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5f3a4fb668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5f3a4fb7f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5f3a4fb978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5f3a4fbb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f5f3a4fa928" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f5f3a4fa928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3a4fac78"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3a4fae00"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3a4f9020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3a4f91a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3a4f9330"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3a4f94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5f3a4f8d28" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f5f3a4f8d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5f3a4f70a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5f3a4f7228"/>
        <function-ref name="start" scoped="" ref="0x7f5f3a4f73b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5f3a4f7538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3a4fcc80" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3a4fcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a4fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5f3a4f4170" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5f3a4f4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5f3a4f44c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5f3a4f4648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5f3a4f47d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5f3a4f4958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5f3a4f6d50" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5f3a4f6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5f3a4f50d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5f3a4f5260"/>
        <function-ref name="isState" scoped="" ref="0x7f5f3a4f53e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5f3a4f5570"/>
        <function-ref name="requestState" scoped="" ref="0x7f5f3a4f56f8"/>
        <function-ref name="forceState" scoped="" ref="0x7f5f3a4f5880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5f3a4e7020" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5f3a4e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a4e7370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4e74f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a4e7680"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a4e7808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a4e7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3a4eb5b8" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a4eb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a4eb908"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4eba90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a4ebc18"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a4ebda0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a4e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5f3a4e82d0" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5f3a4e82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5f3a4e8620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5f3a4e87a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5f3a4e8930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5f3a4e8ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5f3a4e8c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f5f3a4e33c8" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5f3a4e33c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3a4e3718"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3a4e38a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3a4e3a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5f3a4e6530" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5f3a4e6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5f3a4e6880"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5f3a4e6a08"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5f3a4e6b90"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5f3a4e6d18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5f3a4e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5f3a4c5cc8" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5f3a4c5cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a4c40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5f3a4c5020" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5f3a4c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a4c5370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4c54f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a4c5680"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a4c5808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a4c5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f5f3a4c3ab0" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5f3a4c3ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5f3a4c3e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5f3a4c2020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5f3a4c21a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5f3a4c2330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5f3a4c24b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5f3a4c2640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5f3a4c27c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5f3a4c2950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5f3a4c2ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5f3a4c2c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5f3a4c2de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5f3a4c1020"/>
        <function-ref name="sync" scoped="" ref="0x7f5f3a4c11a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5f3a4c1430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5f3a4c15b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5f3a4c6020" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5f3a4c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5f3a4c6370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5f3a4c64f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5f3a4c6680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5f3a4c6808"/>
        <function-ref name="setCca" scoped="" ref="0x7f5f3a4c6990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5f3a4c6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5f3a4c7400" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f5f3a4c7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5f3a4c7750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f5f3a4c06a0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f5f3a4c06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5f3a4c09f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5f3a4c0b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5f3a4c0d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5f3a4be020"/>
        <function-ref name="setCca" scoped="" ref="0x7f5f3a4be1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5f3a4be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f3a4c82a8" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3a4c82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3a4c85f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3a4c8780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4c8908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a4c8a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3a4c8c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f3a4cd938" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3a4cd938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a4cdc88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4cde10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a4cc020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a4cc1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a4cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5f3a4ca628" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5f3a4ca628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a4ca978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5f3a4c4368" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5f3a4c4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5f3a4c46b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5f3a4c4840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5f3a4c49c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5f3a4c4b50"/>
        <function-ref name="getPower" scoped="" ref="0x7f5f3a4c4cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5f3a4c4e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5f3a4c18d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5f3a4c18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5f3a4c1d20"/>
        <function-ref name="changed" scoped="" ref="0x7f5f3a4c0020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5f3a4c01a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5f3a4c0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5f3a4c3188" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5f3a4c3188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4c34d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5f3a4c3660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5f3a4c37e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3a4ccab0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3a4ccab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a4cce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5f3a4bd2a8" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5f3a4bd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5f3a4bd5f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5f3a4bd780"/>
        <function-ref name="led1On" scoped="" ref="0x7f5f3a4bd908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5f3a4bda90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5f3a4bdc18"/>
        <function-ref name="get" scoped="" ref="0x7f5f3a4bdda0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5f3a4bc020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5f3a4bc640"/>
        <function-ref name="set" scoped="" ref="0x7f5f3a4bc1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f5f3a4bc330"/>
        <function-ref name="led2On" scoped="" ref="0x7f5f3a4bc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f3a4cac18" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a4cac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3a4c9020"/>
        <function-ref name="source" scoped="" ref="0x7f5f3a4c91a8"/>
        <function-ref name="address" scoped="" ref="0x7f5f3a4c9330"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3a4c94b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3a4c9640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3a4c97c8"/>
        <function-ref name="type" scoped="" ref="0x7f5f3a4c9950"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3a4c9ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3a4c9c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3a4c9de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3a4c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f5f3a4be698" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f5f3a4be698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5f3a4be9e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5f3a4beb70"/>
        <function-ref name="request" scoped="" ref="0x7f5f3a4becf8"/>
        <function-ref name="granted" scoped="" ref="0x7f5f3a4bee80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5f3a4bd030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f3a40c548" loc="49:../../tos/system/AMSenderC.nc">
      <component-ref qname="SmacAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3a40c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a40c898"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a40ca20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a40cba8"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a40cd30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a40b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f3a40b268" loc="50:../../tos/system/AMSenderC.nc">
      <component-ref qname="SmacAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3a40b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3a40b5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3a40b740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a40b8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a40ba50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3a40bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f3a40be20" loc="51:../../tos/system/AMSenderC.nc">
      <component-ref qname="SmacAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a40be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3a40a1a8"/>
        <function-ref name="source" scoped="" ref="0x7f5f3a40a330"/>
        <function-ref name="address" scoped="" ref="0x7f5f3a40a4b8"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3a40a640"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3a40a7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3a40a950"/>
        <function-ref name="type" scoped="" ref="0x7f5f3a40aad8"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3a40ac60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3a40ade8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3a409020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3a4091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5f3a409430" loc="52:../../tos/system/AMSenderC.nc">
      <component-ref qname="SmacAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5f3a409430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f3a409780"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f3a409908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f3a409a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f399fde48" loc="49:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SmacAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f399fde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f399fb1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f399fb348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f399fb4d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f399fb658"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f399fb7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f399fba28" loc="50:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SmacAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f399fba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f399fbd78"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f399fa020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f399fa1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f399fa330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f399fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f399fa700" loc="51:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SmacAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f399fa700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f399faa50"/>
        <function-ref name="source" scoped="" ref="0x7f5f399fabd8"/>
        <function-ref name="address" scoped="" ref="0x7f5f399fad60"/>
        <function-ref name="destination" scoped="" ref="0x7f5f399f9020"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f399f91a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f399f9330"/>
        <function-ref name="type" scoped="" ref="0x7f5f399f94b8"/>
        <function-ref name="setType" scoped="" ref="0x7f5f399f9640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f399f97c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f399f9950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f399f9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5f399f9d60" loc="52:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SmacAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5f399f9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5f399f70d8"/>
        <function-ref name="noAck" scoped="" ref="0x7f5f399f7260"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5f399f73e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5f399ee020" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SmacAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f399ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f399ee370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f399ee4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f399ee680"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f399ee808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f399ee990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5f399eec38" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SmacAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f399eec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f399ed020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f399ed1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f399ed330"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f399ed4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f399ed640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5f399ed888" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SmacAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f399ed888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f399edbd8"/>
        <function-ref name="source" scoped="" ref="0x7f5f399edd60"/>
        <function-ref name="address" scoped="" ref="0x7f5f399ec020"/>
        <function-ref name="destination" scoped="" ref="0x7f5f399ec1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f399ec330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f399ec4b8"/>
        <function-ref name="type" scoped="" ref="0x7f5f399ec640"/>
        <function-ref name="setType" scoped="" ref="0x7f5f399ec7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f399ec950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f399ecad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f399ecc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3a427b78" loc="43:../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a427b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a424020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4241a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a424330"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a4244b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a424640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5f3a4203e8" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5f3a4203e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a420758"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a4208e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a420a68"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a420bf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a420d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5f3a422550" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5f3a422550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5f3a4228c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a422a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a422bd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5f3a422d58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5f3a420020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5f3a41e578" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3a41e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3a41e8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3a41ea50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a41ebd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a41ed60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3a41d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f5f3a41d2e8" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f5f3a41d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3a41d638"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3a41d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f5f3a41da88" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f5f3a41da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5f3a41ddd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f5f3a41c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5f3a41f020" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a41f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3a41f370"/>
        <function-ref name="source" scoped="" ref="0x7f5f3a41f4f8"/>
        <function-ref name="address" scoped="" ref="0x7f5f3a41f680"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3a41f808"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3a41f990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3a41fb18"/>
        <function-ref name="type" scoped="" ref="0x7f5f3a41fca0"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3a41fe28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3a41e020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3a41e1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3a41e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5f3a404c70" loc="46:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SmacAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5f3a404c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5f3a3ff020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5f3a3ff1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5f3a3ff330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5f3a3ff4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5f3a3ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5f3a4046d8" loc="45:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SmacAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5f3a4046d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5f3a404a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5f3a3ff888" loc="47:../../tos/system/AMReceiverC.nc">
      <component-ref qname="SmacAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5f3a3ff888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5f3a3ffbd8"/>
        <function-ref name="source" scoped="" ref="0x7f5f3a3ffd60"/>
        <function-ref name="address" scoped="" ref="0x7f5f3a3fe020"/>
        <function-ref name="destination" scoped="" ref="0x7f5f3a3fe1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f5f3a3fe330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5f3a3fe4b8"/>
        <function-ref name="type" scoped="" ref="0x7f5f3a3fe640"/>
        <function-ref name="setType" scoped="" ref="0x7f5f3a3fe7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5f3a3fe950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5f3a3fead8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5f3a3fec60"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5f3bc00800" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f5f3bbfe328" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f5f3bbd0290" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f5f3bbd26a0" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f5f3bbd1b90" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f5f3bbd2020" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f5f3bbd2db0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f5f3bbd4258" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f5f3bbd48d8" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f5f3bbd14c8" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f5f3bd0f020" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f5f3c026450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f5f3bb81748" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f5f3bb814d8" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f5f3bb8edd0" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5f3bbc9978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5f3bbc7438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f5f3bb80020" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f5f3bb80e20" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f5f3bb83d88" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f5f3bb806f8" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f5f3bb84538" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f5f3bb84c60" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f5f3bb83678" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5f3bbc9978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5f3bbc7438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5f3bb83408" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5f3bbc9978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5f3bbc7438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f5f3bb74378" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f5f3bb71720" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f5f3bb714b0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5f3bb70290" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5f3bb70020" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5f3bb72d18" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5f3bb72588" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f5f3bb74ca0" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f5f3bb74a30" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f5f3bb7d800" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f5f3bb79290" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5f3bb79020" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f5f3bb79bf0" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f5f3bb79980" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f5f3bb78590" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f5f3bb78320" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5f3bb78c18" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5f3bb8a6f8" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f5f3bb89e58" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f5f3bb89be8" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f5f3bb8adc8" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5f3bb90b80" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f5f3bb894d8" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5f3bb8ca00" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f5f3bb8a070" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5f3bb8c328" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5f3bb8b0d8" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f5f3bb8b978" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5f3bb8b708" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f5f3bb87830" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f5f3bb875c0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5f3bb4eda0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f5f3bc99a18" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f5f3c0558d0" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5f3c0d8020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f5f3c0d7020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f5f3c0d8718" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f5f3c0cdba0" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f5f3c0cc3e0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5f3ba36020" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5f3ba376c8" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5f3ba37a28" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3ba37d38" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5f3ba31380" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba32d48" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3ba310c8" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5f3ba32540" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5f3ba352d0" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba35060" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5f3ba34708" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba34160" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5f3ba34488" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5f3ba39a50" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba397e0" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f5f3ba2ca38" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba2c7c8" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5f3ba29ca0" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba296d8" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3ba299e8" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5f3ba2dcf8" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f5f3ba2be10" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba2b880" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3ba2bb90" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f5f3ba193b0" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5f3bc1fd58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba19140" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f5f3ba23290" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba23020" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f5f3ba257a8" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5f3ba24290" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba24020" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5f3ba20a28" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba20470" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5f3ba207a8" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5f3ba215d8" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba21020" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5f3ba21358" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f5f3ba1c020" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba1fcf8" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f5f3ba1a2a0" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba1cce8" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f5f3ba1a020" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5f3bc1f9a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5f3ba1ebf8" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba1e988" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f5f3ba187b8" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5f3bc1fd58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5f3ba18208" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5f3ba18538" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5f3bc1fd58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f5f3ba17560" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5f3bc1fd58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f5f3ba27cb8" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba27a48" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f5f3ba12020" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba13cb0" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f5f3ba11108" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba12e28" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5f3ba095b0" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba09020" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3ba09330" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5f3ba03878" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba032b0" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3ba035c0" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5f3ba04a58" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5f3ba07828" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba075b8" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5f3ba05c10" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ba05668" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5f3ba05990" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f5f3b99b378" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5f3b99b108" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f5f3b99a780" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5f3b99a510" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5f3b99c748" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5f3b99bb60" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f5f3b996a00" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
              <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3b996100" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5f3b996428" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3b996738" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f5f3b98c428" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f5f3b98cb60" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f5f3b98b328" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f5f3b9891d8" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f5f3b988810" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5f3b987020" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f5f3b98ba40" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5f3b987b20" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5f3b9878b0" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f5f3b98dcd8" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f5f3b989948" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f5f3b9880d8" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f5f3b922640" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3b922060" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f5f3b9223c0" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f5f3b927940" loc="15:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f5f3b923760" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3b923198" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f5f3b9234e0" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5f3b9067d0" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5f3b905020" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f5f3b904cc0" loc="54:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f5f3b9045b0" loc="49:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f5f3b917a58" loc="56:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f5f3b90dd98" loc="72:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f5f3b90b9c8" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3b90b758" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f5f3b90c648" loc="79:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f5f3b90d578" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3b90d308" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f5f3b909258" loc="100:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f5f3b90b020" loc="85:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f5f3b9159a8" loc="71:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f5f3b914290" loc="81:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f5f3b9150a8" loc="62:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f5f3b918df8" loc="62:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f5f3b914d88" loc="91:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5f3b914b18" loc="91:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f5f3b9128e8" loc="62:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f5f3b9114e0" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3b911270" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f5f3b90f020" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5f3b911cc8" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5f3b7e42a0" loc="48:../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5f3b7e7c20" loc="48:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3b7e4020" loc="48:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f5f3b7e2c28" loc="79:../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5f3b7e29b8" loc="79:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f5f3b7df988" loc="90:../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5f3b7df3e8" loc="90:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3b7df708" loc="90:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f5f3b7e1948" loc="65:../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f5f3b7dc2b0" loc="99:../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5f3b7dd898" loc="99:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3b7ddbb8" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5f3b7dc020" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f5f3b7e2258" loc="72:../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5f3b7e3a18" loc="57:../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5f3b7e3140" loc="57:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3b7e3460" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5f3b7e3788" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5f3b7be630" loc="46:../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5f3b7be3c0" loc="46:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f5f3b7bd408" loc="56:../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5f3b7bee20" loc="56:../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f5f3b7bd188" loc="56:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f5f3b766690" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5f3b764020" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f5f3b761020" loc="39:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5f3b7895b8"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5f3b7899c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5f3b768020" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f5f3b769020" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f5f3b76a700" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5f3b7697a8" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5f3b768a08" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f5f3b75a328" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f5f3b75db08" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f5f3b7539c0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3b753750" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f5f3b753020" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f5f3b72c7a8" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f5f3b738b78" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f5f3b743290" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b7bc0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5f3b7b6438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5f3b743020" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b7bc0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5f3b7b6438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f5f3b73ae58" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f5f3b741540" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b28f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5f3b7b1178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5f3b7412d0" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b28f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5f3b7b1178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f5f3b731db0" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f5f3b72e258" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f5f3b742b48" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b5978"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5f3b7b3178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f5f3b741cc8" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b28f0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5f3b7b1178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f5f3b73d790" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f5f3b73d520" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f5f3b73ee40" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f5f3b7316e0" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f5f3b7423c0" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b5978"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5f3b7b3178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5f3b742150" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b5978"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5f3b7b3178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f5f3b73fd70" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f5f3b7304d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f5f3b73e700" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f5f3b73e490" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f5f3b73a020" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f5f3b73a738" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f5f3b7337c8" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f5f3b735878" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f5f3b739cc8" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f5f3b731020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f5f3b737328" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f5f3b730b88" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f5f3b73c020" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5f3b7c0c18"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f5f3b7b83b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f5f3b72f328" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f5f3b72c070" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f5f3b73f630" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f5f3b73f3c0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f5f3b72b108" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3b72ce60" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f5f3b7439f8" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5f3b7b7bc0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5f3b7b6438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f5f3b7395a8" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f5f3b737a18" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f5f3b733020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5f3b7895b8"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5f3b7899c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5f3b734d20" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5f3b7895b8"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5f3b7899c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f5f3b734338" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5f3b79cd50"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5f3b79b188"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5f3b7340c8" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5f3b79cd50"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5f3b79b188"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f5f3b72b950" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f5f3b72faa8" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f5f3b73c768" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f5f3b72e950" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f5f3b735178" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f5f3b738468" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3b727ae8" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3b727ae8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5f3b727d18" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b727d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5f3b7235e8" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b727d18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5f3b722628" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5f3b723e00" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5f3b722d18" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5f3b6bb830" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5f3b6b9030" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5f3b6a7020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5f3b6a7708" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f5f3b6a4c50" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5f3b6a49e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5f3b6aa8a0" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5f3b6a6510" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f5f3b6a2508" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5f3b6a7de0" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5f3b6a97b8" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f5f3b6a5a90" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f5f3b6a9020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5f3b6adb00" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f5f3b6a6c28" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f5f3b6a41d8" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f5f3b6a53a0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5f3b6aa1d8" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5f3b403e28" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5f3b402520" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5f3b4030d8" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5f3b401328" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5f3b403778" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5f3b402bd8" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5f3b405378" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5f3b4059e8" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f5f3b3ac530" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f5f3b3acd20" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5f3b3981d8" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5f3b37f3e0" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f5f3b37e3e0" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5f3b382b98" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5f3b37fbe0" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5f3b37eca8" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f5f3b372020" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5f3b379198"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5f3b373c60" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5f3b379198"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f5f3b3750d8" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f5f3b375b58" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5f3b379198"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5f3b3758e8" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5f3b379198"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5f3b373428" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f5f3b379198"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f5f3b30a428" loc="62:../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5f3b2ac338" loc="43:../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5f3b2ac338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f5f3b2a7880" loc="80:../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5f3b2ac338"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f5f3b2a5290" loc="97:../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5f3b2ac338"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f5f3b2a5020" loc="97:../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5f3b2ac338"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f5f3c748508"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f5f3c748508"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f5f3b2a4290" loc="108:../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5f3b2ac338"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5f3b2a4020" loc="108:../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f5f3b2a9290" loc="57:../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f5f3b2a7178" loc="72:../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5f3b2a63e0" loc="88:../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5f3b2ac338"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f5f3b2acb60" loc="50:../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f5f3b2a99a8" loc="65:../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f5f3b284bf8" loc="49:../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f5f3b284988" loc="49:../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3b248338" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3b248338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5f3b242b98" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5f3b2466f8" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f5f3b243348" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5f3b244d48" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5f3b2430c8" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f5f3b244610" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f5f3b241b30" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f5f3b241328" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5f3b246e28" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f5f3b248e08" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5f3b248b98" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f5f3b2422a0" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5f3b243c78" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5f3b242020" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f5f3b2478a0" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5f3b247630" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5f3b246070" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3b1ff020" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3b1ff020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5f3b1ff250" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b1ff250"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f5f3b1fd020" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b1ff250"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3b1fed60" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f5f3b1fb108" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3b1fde38" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f5f3b1ffd70" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3b1ffb00" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5f3b1fa348" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b1ff250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3b1fbd30" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5f3b1fa0c8" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b1ff250"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f5f3b208020" loc="52:../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5f3b208020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f5f3b207070" loc="67:../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f5f3b208868" loc="59:../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f5f3b207a10" loc="74:../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5f3b208020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5f3b2077a0" loc="74:../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5f3b208020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../tos/interfaces/Get.nc">
      <documentation loc="33:../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f5f3b20eab0" loc="49:../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5f3b20eab0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5f3b20a328" loc="55:../../tos/interfaces/Get.nc">
        <documentation loc="50:../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5f3b20eab0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3b165340" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3b165340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5f3b165bd0" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3b160ab0" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3b160ab0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5f3b160ce0" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5f3b1597a0" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5f3b15c770" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f5f3b15bd70" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5f3b15b7d0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f5f3b15baf0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5f3b15b020" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f5f3b158020" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5f3b15d810" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5f3b15d5a0" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3b160ce0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5f3b15c020" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5f3afb15b0" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5f3afb2df0" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f5f3afb26f0" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f5f3afb5e80" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5f3afab940" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5f3afa9290" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5f3afab258" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f5f3afaaab0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f5f3afaa840" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f5f3afafb18" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f5f3afaa0d8" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f5f3ae65e40" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae65858" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f5f3ae65bc0" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f5f3ae62020" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae63cc0" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f5f3ae650d8" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f5f3ae66758" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f5f3ae664e8" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f5f3ae3dd88" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae3db18" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f5f3ae3e0a8" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae40dd0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f5f3ae41838" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f5f3ae415c8" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f5f3ae45d60" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f5f3ae45af0" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f5f3ae40290" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f5f3ae40020" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f5f3ae3d020" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae3ec28" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f5f3ae302a0" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f5f3ae3ab48" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5f3ae30020" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f5f3ae4b2a0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5f3ae4cc88" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f5f3ae4b020" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f5f3ae475f0" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5f3ae47020" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f5f3ae47370" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f5f3ae4bd00" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f5f3c744728"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5f3ae4ba90" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f5f3ae485e0" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5f3ae48370" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f5f3ae4c500" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5f3ae4c290" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f5f3ae497d8" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5f3ae49568" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f5f3ae34cd8" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae34a68" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f5f3ae38020" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae3b9b0" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f5f3ae3bd18" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f5f3ae37d80" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae37b10" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f5f3ae37348" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae38d20" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f5f3ae370c8" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f5f3ae33c10" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae339a0" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f5f3ae4edf0" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae4eb80" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5f3ae0d050" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5f3ae0ea88" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f5f3ae0eda0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5f3ae0c258" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f5f3ae098d8" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5f3ae0aae0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f5f3ae09338" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3ae09648" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5f3ae0a348" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5f3ae0cd30" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5f3ae0a0c8" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f5f3ae0da60" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f5f3ae0d7f0" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f5f3ae06a28" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f5f3ae06290" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f5f3ae00a50" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae007a8" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f5f3ae00020" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f5f3bc584e8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f5f3bc55228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3ae01c00" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f5f3adffcb0" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f5f3bc55cc8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f5f3bc534e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3adff9c8" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f5f3ae13020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f5f3ae10020" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f5f3ae12780" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f5f3ae15810" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f5f3ae14778" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f5f3ae13828" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f5f3ae12020" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f5f3ae14030" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f5f3adf8020" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f5f3adfb730" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f5f3adfa7e8" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f5f3adfa578" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f5f3adfbe38" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f5f3adfc4d0" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f5f3adfc260" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f5f3adfb020" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f5f3adfcc88" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f5f3ada15d8" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f5f3ada1020" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f5f3ada1358" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f5f3ada2020" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f5f3ada4660" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f5f3ada4020" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f5f3ada43e0" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f5f3adaadb0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5f3adaab40" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f5f3ada2828" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f5f3ada6658" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f5f3ada63e8" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f5f3ada9de8" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5f3ada9b78" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f5f3ada07d8" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f5f3ada56f8" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f5f3ada5488" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f5f3ada0020" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f5f3ada7538" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5f3ae60340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f5f3ae60a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f5f3ada7cb8" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f5f3adaa410" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5f3ada94c8" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f5f3ada6d88" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f5f3ad9c0a0" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5f3ad9c0a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f5f3ad9c8d8" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5f3ad9a5a0" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5f3ad9c0a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5f3ad9a020" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f5f3ad9a320" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5f3ad9c0a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5f3ad7bb18" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5f3bc5a7b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ad7b8a8" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5f3ad7a5c0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5f3bc5a7b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ad7a350" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f5f3ad8e290" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5f3ae60340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f5f3ae60a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f5f3ad84898" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f5f3ad83710" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f5f3ad83020" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5f3bc1fd58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f5f3ad840b8" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5f3bc1fd58"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f5f3ad87aa8" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5f3bc1fd58"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f5f3ad87de0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5f3bc1d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f5f3ad77938" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5f3bc5a7b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5f3ad80de8" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5f3bc5a7b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5f3ad80020" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f5f3ad80828" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5f3ad80b58" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5f3ad7e5e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5f3bc5a7b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5f3ad7f6d0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f5f3ad7e020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5f3ad7e350" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f5f3ac74b60" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5f3ac73bf0" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5f3ac734b8" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5f3ac73248" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f5f3ac74378" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f5f3ac44830" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f5f3ac43070" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f5f3ac43840" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f5f3ac1d2a0" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ac1ebb0" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5f3ac1d020" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f5f3ac182b0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ac19908" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5f3ac19c38" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5f3ac18020" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5f3ac1abd0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5f3bc5a7b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ac1a620" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5f3ac1a950" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f5f3ac1fe58" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5f3bc5a7b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ac1f8a8" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5f3ac1fbd8" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5f3ac1b908" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ac1b020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5f3ac1b350" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5f3ac1b678" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5f3abff930" loc="70:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5f3abff020" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5f3abff380" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3abff6a0" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5f3abfdcc8" loc="82:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5f3abfd060" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5f3abfd3c0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3abfd6e0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5f3abfda28" loc="83:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f5f3ac03990" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f5f3ac03720" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f5f3ab73918" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5f3b79cd50"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5f3b79b188"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f5f3ab72a30" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ab727c0" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f5f3ab71c70" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ab71a00" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f5f3ab71258" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5f3ab70630" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3ab703c0" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f5f3aad1958" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f5f3aae1020" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f5f3aad7a58" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5f3aad77e8" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f5f3aaeb988" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f5f3aad5e40" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f5f3aadcd60" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f5f3aae30d8" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f5f3aae1dd8" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f5f3aae4118" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f5f3aae5e80" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f5f3aae7728" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f5f3aadf990" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f5f3aad68d8" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f5f3aad1258" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f5f3aad7110" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f5f3aacc070" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f5f3aac8710" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f5f3aae9788" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f5f3aadf290" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f5f3aadea58" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f5f3aae4978" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f5f3aaec740" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f5f3aad8958" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5f3aad86e8" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f5f3aaec070" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f5f3aad5720" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f5f3aacf0d8" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f5f3aaca770" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f5f3aac8020" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f5f3aad3cb8" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f5f3aacf7a8" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f5f3aad61d8" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f5f3aacd178" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f5f3aae9e40" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f5f3aadbe40" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f5f3aace5c8" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f5f3aad2ae8" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f5f3aadc5f8" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f5f3aadc388" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f5f3aac9020" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f5f3aad8020" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f5f3aad35a8" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f5f3aaeb290" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5f3b776aa0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f5f3b775020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5f3aaeb020" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5f3b776aa0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f5f3b775020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f5f3aae0ba8" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f5f3aae7020" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5f3aae8c30" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f5f3aade2d0" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5f3aade060" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f5f3aacd8e8" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f5f3aae57d0" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f5f3aae85a8" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f5f3aada7d8" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f5f3aada568" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5f3c743b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f5f3aae90d8" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f5f3aacfe68" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f5f3aad23e0" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f5f3aad5020" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f5f3aadb6f0" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f5f3aadb480" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f5f3aae04b8" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f5f3aae37b8" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f5f3aac9730" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f5f3aae50a8" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5f3aae7dc8" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f5f3aacc7d0" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f5f3aae16f0" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f5f3aaca020" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5f3a883370" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5f3a883100" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5f3a86e358" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f5f3a871a00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f5f3a871d48" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3a86e0c8" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5f3a86c020" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5f3a86ea30" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5f3a86ed40" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5f3a855420" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5f3a855420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5f3a855650" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3a855650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f5f3a854118" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3a855650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5f3a855e78" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5f3a855650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f5f3a7fa8b8" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f5f3a7cb2a0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f5f3a7cd8b8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f5f3a7cb020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f5f3a7cd178" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f5f3a7d09c8" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5f3a7d0758" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5f3c742020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f5f3a7e28a8" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5f3c743790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3a7e2638" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f5f3a7e4930" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5f3c0db1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3a7e46c0" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5f3a7e06e8" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3a7e0478" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5f3a7e37b8" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5f3a7e3548" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5f3bc10780"/>
                <typename><typedef-ref name="message_t" ref="0x7f5f3bc0fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f5f3a5ce480" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5f3a5ce480"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f5f3a5c7020" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5f3c0d0780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5f3a5ce480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f5f3a5cecb8" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5f3a5ce480"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
